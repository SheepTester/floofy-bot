var __defProp = Object.defineProperty;
var __require = /* @__PURE__ */ ((x) => typeof require !== "undefined" ? require : typeof Proxy !== "undefined" ? new Proxy(x, {
  get: (a, b) => (typeof require !== "undefined" ? require : a)[b]
}) : x)(function(x) {
  if (typeof require !== "undefined") return require.apply(this, arguments);
  throw Error('Dynamic require of "' + x + '" is not supported');
});
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};

// src/index.ts
import { Client as Client2, GatewayIntentBits, Partials } from "discord.js";
import { config } from "dotenv";
import fs2 from "fs-extra";

// src/commands/poll-reactions.ts
var poll_reactions_exports = {};
__export(poll_reactions_exports, {
  getReactions: () => getReactions,
  notPollChannel: () => notPollChannel,
  onReady: () => onReady,
  pollChannel: () => pollChannel
});
import {
  DMChannel,
  PermissionFlagsBits
} from "discord.js";

// src/utils/CachedMap.ts
import fs from "fs-extra";
var CachedMap = class {
  #path;
  #object;
  constructor(path) {
    this.#path = path;
  }
  read = async () => {
    this.#object = await fs.readFile(this.#path, "utf-8").then((json) => json === "" ? {} : JSON.parse(json)).catch((err) => err.code === "ENOENT" ? {} : Promise.reject(err));
  };
  has(id) {
    return Object.prototype.hasOwnProperty.call(this.#object, id);
  }
  get(id, defaultValue) {
    if (id === void 0) {
      return defaultValue;
    }
    return this.has(id) ? this.#object[id] : defaultValue;
  }
  set(id, value) {
    this.#object[id] = value;
    return this;
  }
  delete(id) {
    delete this.#object[id];
    return this;
  }
  entries() {
    return Object.entries(this.#object);
  }
  async save() {
    await fs.writeFile(this.#path, JSON.stringify(this.#object, null, "	"));
  }
};

// src/utils/emoji.json
var emoji_default = [
  "\u{1F9D1}\u{1F3FB}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F9D1}\u{1F3FC}",
  "\u{1F9D1}\u{1F3FB}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F9D1}\u{1F3FD}",
  "\u{1F9D1}\u{1F3FB}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F9D1}\u{1F3FE}",
  "\u{1F9D1}\u{1F3FB}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F9D1}\u{1F3FF}",
  "\u{1F9D1}\u{1F3FC}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F9D1}\u{1F3FB}",
  "\u{1F9D1}\u{1F3FC}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F9D1}\u{1F3FD}",
  "\u{1F9D1}\u{1F3FC}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F9D1}\u{1F3FE}",
  "\u{1F9D1}\u{1F3FC}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F9D1}\u{1F3FF}",
  "\u{1F9D1}\u{1F3FD}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F9D1}\u{1F3FB}",
  "\u{1F9D1}\u{1F3FD}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F9D1}\u{1F3FC}",
  "\u{1F9D1}\u{1F3FD}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F9D1}\u{1F3FE}",
  "\u{1F9D1}\u{1F3FD}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F9D1}\u{1F3FF}",
  "\u{1F9D1}\u{1F3FE}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F9D1}\u{1F3FB}",
  "\u{1F9D1}\u{1F3FE}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F9D1}\u{1F3FC}",
  "\u{1F9D1}\u{1F3FE}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F9D1}\u{1F3FD}",
  "\u{1F9D1}\u{1F3FE}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F9D1}\u{1F3FF}",
  "\u{1F9D1}\u{1F3FF}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F9D1}\u{1F3FB}",
  "\u{1F9D1}\u{1F3FF}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F9D1}\u{1F3FC}",
  "\u{1F9D1}\u{1F3FF}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F9D1}\u{1F3FD}",
  "\u{1F9D1}\u{1F3FF}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F9D1}\u{1F3FE}",
  "\u{1F469}\u{1F3FB}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F468}\u{1F3FB}",
  "\u{1F469}\u{1F3FB}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F468}\u{1F3FC}",
  "\u{1F469}\u{1F3FB}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F468}\u{1F3FD}",
  "\u{1F469}\u{1F3FB}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F468}\u{1F3FE}",
  "\u{1F469}\u{1F3FB}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F468}\u{1F3FF}",
  "\u{1F469}\u{1F3FC}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F468}\u{1F3FB}",
  "\u{1F469}\u{1F3FC}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F468}\u{1F3FC}",
  "\u{1F469}\u{1F3FC}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F468}\u{1F3FD}",
  "\u{1F469}\u{1F3FC}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F468}\u{1F3FE}",
  "\u{1F469}\u{1F3FC}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F468}\u{1F3FF}",
  "\u{1F469}\u{1F3FD}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F468}\u{1F3FB}",
  "\u{1F469}\u{1F3FD}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F468}\u{1F3FC}",
  "\u{1F469}\u{1F3FD}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F468}\u{1F3FD}",
  "\u{1F469}\u{1F3FD}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F468}\u{1F3FE}",
  "\u{1F469}\u{1F3FD}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F468}\u{1F3FF}",
  "\u{1F469}\u{1F3FE}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F468}\u{1F3FB}",
  "\u{1F469}\u{1F3FE}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F468}\u{1F3FC}",
  "\u{1F469}\u{1F3FE}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F468}\u{1F3FD}",
  "\u{1F469}\u{1F3FE}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F468}\u{1F3FE}",
  "\u{1F469}\u{1F3FE}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F468}\u{1F3FF}",
  "\u{1F469}\u{1F3FF}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F468}\u{1F3FB}",
  "\u{1F469}\u{1F3FF}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F468}\u{1F3FC}",
  "\u{1F469}\u{1F3FF}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F468}\u{1F3FD}",
  "\u{1F469}\u{1F3FF}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F468}\u{1F3FE}",
  "\u{1F469}\u{1F3FF}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F468}\u{1F3FF}",
  "\u{1F469}\u{1F3FB}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F469}\u{1F3FB}",
  "\u{1F469}\u{1F3FB}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F469}\u{1F3FC}",
  "\u{1F469}\u{1F3FB}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F469}\u{1F3FD}",
  "\u{1F469}\u{1F3FB}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F469}\u{1F3FE}",
  "\u{1F469}\u{1F3FB}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F469}\u{1F3FF}",
  "\u{1F469}\u{1F3FC}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F469}\u{1F3FB}",
  "\u{1F469}\u{1F3FC}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F469}\u{1F3FC}",
  "\u{1F469}\u{1F3FC}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F469}\u{1F3FD}",
  "\u{1F469}\u{1F3FC}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F469}\u{1F3FE}",
  "\u{1F469}\u{1F3FC}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F469}\u{1F3FF}",
  "\u{1F469}\u{1F3FD}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F469}\u{1F3FB}",
  "\u{1F469}\u{1F3FD}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F469}\u{1F3FC}",
  "\u{1F469}\u{1F3FD}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F469}\u{1F3FD}",
  "\u{1F469}\u{1F3FD}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F469}\u{1F3FE}",
  "\u{1F469}\u{1F3FD}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F469}\u{1F3FF}",
  "\u{1F469}\u{1F3FE}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F469}\u{1F3FB}",
  "\u{1F469}\u{1F3FE}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F469}\u{1F3FC}",
  "\u{1F469}\u{1F3FE}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F469}\u{1F3FD}",
  "\u{1F469}\u{1F3FE}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F469}\u{1F3FE}",
  "\u{1F469}\u{1F3FE}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F469}\u{1F3FF}",
  "\u{1F469}\u{1F3FF}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F469}\u{1F3FB}",
  "\u{1F469}\u{1F3FF}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F469}\u{1F3FC}",
  "\u{1F469}\u{1F3FF}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F469}\u{1F3FD}",
  "\u{1F469}\u{1F3FF}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F469}\u{1F3FE}",
  "\u{1F469}\u{1F3FF}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F469}\u{1F3FF}",
  "\u{1F468}\u{1F3FB}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F468}\u{1F3FB}",
  "\u{1F468}\u{1F3FB}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F468}\u{1F3FC}",
  "\u{1F468}\u{1F3FB}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F468}\u{1F3FD}",
  "\u{1F468}\u{1F3FB}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F468}\u{1F3FE}",
  "\u{1F468}\u{1F3FB}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F468}\u{1F3FF}",
  "\u{1F468}\u{1F3FC}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F468}\u{1F3FB}",
  "\u{1F468}\u{1F3FC}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F468}\u{1F3FC}",
  "\u{1F468}\u{1F3FC}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F468}\u{1F3FD}",
  "\u{1F468}\u{1F3FC}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F468}\u{1F3FE}",
  "\u{1F468}\u{1F3FC}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F468}\u{1F3FF}",
  "\u{1F468}\u{1F3FD}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F468}\u{1F3FB}",
  "\u{1F468}\u{1F3FD}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F468}\u{1F3FC}",
  "\u{1F468}\u{1F3FD}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F468}\u{1F3FD}",
  "\u{1F468}\u{1F3FD}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F468}\u{1F3FE}",
  "\u{1F468}\u{1F3FD}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F468}\u{1F3FF}",
  "\u{1F468}\u{1F3FE}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F468}\u{1F3FB}",
  "\u{1F468}\u{1F3FE}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F468}\u{1F3FC}",
  "\u{1F468}\u{1F3FE}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F468}\u{1F3FD}",
  "\u{1F468}\u{1F3FE}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F468}\u{1F3FE}",
  "\u{1F468}\u{1F3FE}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F468}\u{1F3FF}",
  "\u{1F468}\u{1F3FF}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F468}\u{1F3FB}",
  "\u{1F468}\u{1F3FF}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F468}\u{1F3FC}",
  "\u{1F468}\u{1F3FF}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F468}\u{1F3FD}",
  "\u{1F468}\u{1F3FF}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F468}\u{1F3FE}",
  "\u{1F468}\u{1F3FF}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F468}\u{1F3FF}",
  "\u{1F3F4}\u{E0067}\u{E0062}\u{E0065}\u{E006E}\u{E0067}\u{E007F}",
  "\u{1F3F4}\u{E0067}\u{E0062}\u{E0073}\u{E0063}\u{E0074}\u{E007F}",
  "\u{1F3F4}\u{E0067}\u{E0062}\u{E0077}\u{E006C}\u{E0073}\u{E007F}",
  "\u{1F9D1}\u{1F3FB}\u200D\u{1F91D}\u200D\u{1F9D1}\u{1F3FB}",
  "\u{1F9D1}\u{1F3FB}\u200D\u{1F91D}\u200D\u{1F9D1}\u{1F3FC}",
  "\u{1F9D1}\u{1F3FB}\u200D\u{1F91D}\u200D\u{1F9D1}\u{1F3FD}",
  "\u{1F9D1}\u{1F3FB}\u200D\u{1F91D}\u200D\u{1F9D1}\u{1F3FE}",
  "\u{1F9D1}\u{1F3FB}\u200D\u{1F91D}\u200D\u{1F9D1}\u{1F3FF}",
  "\u{1F9D1}\u{1F3FC}\u200D\u{1F91D}\u200D\u{1F9D1}\u{1F3FB}",
  "\u{1F9D1}\u{1F3FC}\u200D\u{1F91D}\u200D\u{1F9D1}\u{1F3FC}",
  "\u{1F9D1}\u{1F3FC}\u200D\u{1F91D}\u200D\u{1F9D1}\u{1F3FD}",
  "\u{1F9D1}\u{1F3FC}\u200D\u{1F91D}\u200D\u{1F9D1}\u{1F3FE}",
  "\u{1F9D1}\u{1F3FC}\u200D\u{1F91D}\u200D\u{1F9D1}\u{1F3FF}",
  "\u{1F9D1}\u{1F3FD}\u200D\u{1F91D}\u200D\u{1F9D1}\u{1F3FB}",
  "\u{1F9D1}\u{1F3FD}\u200D\u{1F91D}\u200D\u{1F9D1}\u{1F3FC}",
  "\u{1F9D1}\u{1F3FD}\u200D\u{1F91D}\u200D\u{1F9D1}\u{1F3FD}",
  "\u{1F9D1}\u{1F3FD}\u200D\u{1F91D}\u200D\u{1F9D1}\u{1F3FE}",
  "\u{1F9D1}\u{1F3FD}\u200D\u{1F91D}\u200D\u{1F9D1}\u{1F3FF}",
  "\u{1F9D1}\u{1F3FE}\u200D\u{1F91D}\u200D\u{1F9D1}\u{1F3FB}",
  "\u{1F9D1}\u{1F3FE}\u200D\u{1F91D}\u200D\u{1F9D1}\u{1F3FC}",
  "\u{1F9D1}\u{1F3FE}\u200D\u{1F91D}\u200D\u{1F9D1}\u{1F3FD}",
  "\u{1F9D1}\u{1F3FE}\u200D\u{1F91D}\u200D\u{1F9D1}\u{1F3FE}",
  "\u{1F9D1}\u{1F3FE}\u200D\u{1F91D}\u200D\u{1F9D1}\u{1F3FF}",
  "\u{1F9D1}\u{1F3FF}\u200D\u{1F91D}\u200D\u{1F9D1}\u{1F3FB}",
  "\u{1F9D1}\u{1F3FF}\u200D\u{1F91D}\u200D\u{1F9D1}\u{1F3FC}",
  "\u{1F9D1}\u{1F3FF}\u200D\u{1F91D}\u200D\u{1F9D1}\u{1F3FD}",
  "\u{1F9D1}\u{1F3FF}\u200D\u{1F91D}\u200D\u{1F9D1}\u{1F3FE}",
  "\u{1F9D1}\u{1F3FF}\u200D\u{1F91D}\u200D\u{1F9D1}\u{1F3FF}",
  "\u{1F469}\u{1F3FB}\u200D\u{1F91D}\u200D\u{1F468}\u{1F3FC}",
  "\u{1F469}\u{1F3FB}\u200D\u{1F91D}\u200D\u{1F468}\u{1F3FD}",
  "\u{1F469}\u{1F3FB}\u200D\u{1F91D}\u200D\u{1F468}\u{1F3FE}",
  "\u{1F469}\u{1F3FB}\u200D\u{1F91D}\u200D\u{1F468}\u{1F3FF}",
  "\u{1F469}\u{1F3FC}\u200D\u{1F91D}\u200D\u{1F468}\u{1F3FB}",
  "\u{1F469}\u{1F3FC}\u200D\u{1F91D}\u200D\u{1F468}\u{1F3FD}",
  "\u{1F469}\u{1F3FC}\u200D\u{1F91D}\u200D\u{1F468}\u{1F3FE}",
  "\u{1F469}\u{1F3FC}\u200D\u{1F91D}\u200D\u{1F468}\u{1F3FF}",
  "\u{1F469}\u{1F3FD}\u200D\u{1F91D}\u200D\u{1F468}\u{1F3FB}",
  "\u{1F469}\u{1F3FD}\u200D\u{1F91D}\u200D\u{1F468}\u{1F3FC}",
  "\u{1F469}\u{1F3FD}\u200D\u{1F91D}\u200D\u{1F468}\u{1F3FE}",
  "\u{1F469}\u{1F3FD}\u200D\u{1F91D}\u200D\u{1F468}\u{1F3FF}",
  "\u{1F469}\u{1F3FE}\u200D\u{1F91D}\u200D\u{1F468}\u{1F3FB}",
  "\u{1F469}\u{1F3FE}\u200D\u{1F91D}\u200D\u{1F468}\u{1F3FC}",
  "\u{1F469}\u{1F3FE}\u200D\u{1F91D}\u200D\u{1F468}\u{1F3FD}",
  "\u{1F469}\u{1F3FE}\u200D\u{1F91D}\u200D\u{1F468}\u{1F3FF}",
  "\u{1F469}\u{1F3FF}\u200D\u{1F91D}\u200D\u{1F468}\u{1F3FB}",
  "\u{1F469}\u{1F3FF}\u200D\u{1F91D}\u200D\u{1F468}\u{1F3FC}",
  "\u{1F469}\u{1F3FF}\u200D\u{1F91D}\u200D\u{1F468}\u{1F3FD}",
  "\u{1F469}\u{1F3FF}\u200D\u{1F91D}\u200D\u{1F468}\u{1F3FE}",
  "\u{1F469}\u{1F3FB}\u200D\u{1F91D}\u200D\u{1F469}\u{1F3FC}",
  "\u{1F469}\u{1F3FB}\u200D\u{1F91D}\u200D\u{1F469}\u{1F3FD}",
  "\u{1F469}\u{1F3FB}\u200D\u{1F91D}\u200D\u{1F469}\u{1F3FE}",
  "\u{1F469}\u{1F3FB}\u200D\u{1F91D}\u200D\u{1F469}\u{1F3FF}",
  "\u{1F469}\u{1F3FC}\u200D\u{1F91D}\u200D\u{1F469}\u{1F3FB}",
  "\u{1F469}\u{1F3FC}\u200D\u{1F91D}\u200D\u{1F469}\u{1F3FD}",
  "\u{1F469}\u{1F3FC}\u200D\u{1F91D}\u200D\u{1F469}\u{1F3FE}",
  "\u{1F469}\u{1F3FC}\u200D\u{1F91D}\u200D\u{1F469}\u{1F3FF}",
  "\u{1F469}\u{1F3FD}\u200D\u{1F91D}\u200D\u{1F469}\u{1F3FB}",
  "\u{1F469}\u{1F3FD}\u200D\u{1F91D}\u200D\u{1F469}\u{1F3FC}",
  "\u{1F469}\u{1F3FD}\u200D\u{1F91D}\u200D\u{1F469}\u{1F3FE}",
  "\u{1F469}\u{1F3FD}\u200D\u{1F91D}\u200D\u{1F469}\u{1F3FF}",
  "\u{1F469}\u{1F3FE}\u200D\u{1F91D}\u200D\u{1F469}\u{1F3FB}",
  "\u{1F469}\u{1F3FE}\u200D\u{1F91D}\u200D\u{1F469}\u{1F3FC}",
  "\u{1F469}\u{1F3FE}\u200D\u{1F91D}\u200D\u{1F469}\u{1F3FD}",
  "\u{1F469}\u{1F3FE}\u200D\u{1F91D}\u200D\u{1F469}\u{1F3FF}",
  "\u{1F469}\u{1F3FF}\u200D\u{1F91D}\u200D\u{1F469}\u{1F3FB}",
  "\u{1F469}\u{1F3FF}\u200D\u{1F91D}\u200D\u{1F469}\u{1F3FC}",
  "\u{1F469}\u{1F3FF}\u200D\u{1F91D}\u200D\u{1F469}\u{1F3FD}",
  "\u{1F469}\u{1F3FF}\u200D\u{1F91D}\u200D\u{1F469}\u{1F3FE}",
  "\u{1F468}\u{1F3FB}\u200D\u{1F91D}\u200D\u{1F468}\u{1F3FC}",
  "\u{1F468}\u{1F3FB}\u200D\u{1F91D}\u200D\u{1F468}\u{1F3FD}",
  "\u{1F468}\u{1F3FB}\u200D\u{1F91D}\u200D\u{1F468}\u{1F3FE}",
  "\u{1F468}\u{1F3FB}\u200D\u{1F91D}\u200D\u{1F468}\u{1F3FF}",
  "\u{1F468}\u{1F3FC}\u200D\u{1F91D}\u200D\u{1F468}\u{1F3FB}",
  "\u{1F468}\u{1F3FC}\u200D\u{1F91D}\u200D\u{1F468}\u{1F3FD}",
  "\u{1F468}\u{1F3FC}\u200D\u{1F91D}\u200D\u{1F468}\u{1F3FE}",
  "\u{1F468}\u{1F3FC}\u200D\u{1F91D}\u200D\u{1F468}\u{1F3FF}",
  "\u{1F468}\u{1F3FD}\u200D\u{1F91D}\u200D\u{1F468}\u{1F3FB}",
  "\u{1F468}\u{1F3FD}\u200D\u{1F91D}\u200D\u{1F468}\u{1F3FC}",
  "\u{1F468}\u{1F3FD}\u200D\u{1F91D}\u200D\u{1F468}\u{1F3FE}",
  "\u{1F468}\u{1F3FD}\u200D\u{1F91D}\u200D\u{1F468}\u{1F3FF}",
  "\u{1F468}\u{1F3FE}\u200D\u{1F91D}\u200D\u{1F468}\u{1F3FB}",
  "\u{1F468}\u{1F3FE}\u200D\u{1F91D}\u200D\u{1F468}\u{1F3FC}",
  "\u{1F468}\u{1F3FE}\u200D\u{1F91D}\u200D\u{1F468}\u{1F3FD}",
  "\u{1F468}\u{1F3FE}\u200D\u{1F91D}\u200D\u{1F468}\u{1F3FF}",
  "\u{1F468}\u{1F3FF}\u200D\u{1F91D}\u200D\u{1F468}\u{1F3FB}",
  "\u{1F468}\u{1F3FF}\u200D\u{1F91D}\u200D\u{1F468}\u{1F3FC}",
  "\u{1F468}\u{1F3FF}\u200D\u{1F91D}\u200D\u{1F468}\u{1F3FD}",
  "\u{1F468}\u{1F3FF}\u200D\u{1F91D}\u200D\u{1F468}\u{1F3FE}",
  "\u{1F9D1}\u{1F3FB}\u200D\u2764\uFE0F\u200D\u{1F9D1}\u{1F3FC}",
  "\u{1F9D1}\u{1F3FB}\u200D\u2764\uFE0F\u200D\u{1F9D1}\u{1F3FD}",
  "\u{1F9D1}\u{1F3FB}\u200D\u2764\uFE0F\u200D\u{1F9D1}\u{1F3FE}",
  "\u{1F9D1}\u{1F3FB}\u200D\u2764\uFE0F\u200D\u{1F9D1}\u{1F3FF}",
  "\u{1F9D1}\u{1F3FC}\u200D\u2764\uFE0F\u200D\u{1F9D1}\u{1F3FB}",
  "\u{1F9D1}\u{1F3FC}\u200D\u2764\uFE0F\u200D\u{1F9D1}\u{1F3FD}",
  "\u{1F9D1}\u{1F3FC}\u200D\u2764\uFE0F\u200D\u{1F9D1}\u{1F3FE}",
  "\u{1F9D1}\u{1F3FC}\u200D\u2764\uFE0F\u200D\u{1F9D1}\u{1F3FF}",
  "\u{1F9D1}\u{1F3FD}\u200D\u2764\uFE0F\u200D\u{1F9D1}\u{1F3FB}",
  "\u{1F9D1}\u{1F3FD}\u200D\u2764\uFE0F\u200D\u{1F9D1}\u{1F3FC}",
  "\u{1F9D1}\u{1F3FD}\u200D\u2764\uFE0F\u200D\u{1F9D1}\u{1F3FE}",
  "\u{1F9D1}\u{1F3FD}\u200D\u2764\uFE0F\u200D\u{1F9D1}\u{1F3FF}",
  "\u{1F9D1}\u{1F3FE}\u200D\u2764\uFE0F\u200D\u{1F9D1}\u{1F3FB}",
  "\u{1F9D1}\u{1F3FE}\u200D\u2764\uFE0F\u200D\u{1F9D1}\u{1F3FC}",
  "\u{1F9D1}\u{1F3FE}\u200D\u2764\uFE0F\u200D\u{1F9D1}\u{1F3FD}",
  "\u{1F9D1}\u{1F3FE}\u200D\u2764\uFE0F\u200D\u{1F9D1}\u{1F3FF}",
  "\u{1F9D1}\u{1F3FF}\u200D\u2764\uFE0F\u200D\u{1F9D1}\u{1F3FB}",
  "\u{1F9D1}\u{1F3FF}\u200D\u2764\uFE0F\u200D\u{1F9D1}\u{1F3FC}",
  "\u{1F9D1}\u{1F3FF}\u200D\u2764\uFE0F\u200D\u{1F9D1}\u{1F3FD}",
  "\u{1F9D1}\u{1F3FF}\u200D\u2764\uFE0F\u200D\u{1F9D1}\u{1F3FE}",
  "\u{1F469}\u{1F3FB}\u200D\u2764\uFE0F\u200D\u{1F468}\u{1F3FB}",
  "\u{1F469}\u{1F3FB}\u200D\u2764\uFE0F\u200D\u{1F468}\u{1F3FC}",
  "\u{1F469}\u{1F3FB}\u200D\u2764\uFE0F\u200D\u{1F468}\u{1F3FD}",
  "\u{1F469}\u{1F3FB}\u200D\u2764\uFE0F\u200D\u{1F468}\u{1F3FE}",
  "\u{1F469}\u{1F3FB}\u200D\u2764\uFE0F\u200D\u{1F468}\u{1F3FF}",
  "\u{1F469}\u{1F3FC}\u200D\u2764\uFE0F\u200D\u{1F468}\u{1F3FB}",
  "\u{1F469}\u{1F3FC}\u200D\u2764\uFE0F\u200D\u{1F468}\u{1F3FC}",
  "\u{1F469}\u{1F3FC}\u200D\u2764\uFE0F\u200D\u{1F468}\u{1F3FD}",
  "\u{1F469}\u{1F3FC}\u200D\u2764\uFE0F\u200D\u{1F468}\u{1F3FE}",
  "\u{1F469}\u{1F3FC}\u200D\u2764\uFE0F\u200D\u{1F468}\u{1F3FF}",
  "\u{1F469}\u{1F3FD}\u200D\u2764\uFE0F\u200D\u{1F468}\u{1F3FB}",
  "\u{1F469}\u{1F3FD}\u200D\u2764\uFE0F\u200D\u{1F468}\u{1F3FC}",
  "\u{1F469}\u{1F3FD}\u200D\u2764\uFE0F\u200D\u{1F468}\u{1F3FD}",
  "\u{1F469}\u{1F3FD}\u200D\u2764\uFE0F\u200D\u{1F468}\u{1F3FE}",
  "\u{1F469}\u{1F3FD}\u200D\u2764\uFE0F\u200D\u{1F468}\u{1F3FF}",
  "\u{1F469}\u{1F3FE}\u200D\u2764\uFE0F\u200D\u{1F468}\u{1F3FB}",
  "\u{1F469}\u{1F3FE}\u200D\u2764\uFE0F\u200D\u{1F468}\u{1F3FC}",
  "\u{1F469}\u{1F3FE}\u200D\u2764\uFE0F\u200D\u{1F468}\u{1F3FD}",
  "\u{1F469}\u{1F3FE}\u200D\u2764\uFE0F\u200D\u{1F468}\u{1F3FE}",
  "\u{1F469}\u{1F3FE}\u200D\u2764\uFE0F\u200D\u{1F468}\u{1F3FF}",
  "\u{1F469}\u{1F3FF}\u200D\u2764\uFE0F\u200D\u{1F468}\u{1F3FB}",
  "\u{1F469}\u{1F3FF}\u200D\u2764\uFE0F\u200D\u{1F468}\u{1F3FC}",
  "\u{1F469}\u{1F3FF}\u200D\u2764\uFE0F\u200D\u{1F468}\u{1F3FD}",
  "\u{1F469}\u{1F3FF}\u200D\u2764\uFE0F\u200D\u{1F468}\u{1F3FE}",
  "\u{1F469}\u{1F3FF}\u200D\u2764\uFE0F\u200D\u{1F468}\u{1F3FF}",
  "\u{1F469}\u{1F3FB}\u200D\u2764\uFE0F\u200D\u{1F469}\u{1F3FB}",
  "\u{1F469}\u{1F3FB}\u200D\u2764\uFE0F\u200D\u{1F469}\u{1F3FC}",
  "\u{1F469}\u{1F3FB}\u200D\u2764\uFE0F\u200D\u{1F469}\u{1F3FD}",
  "\u{1F469}\u{1F3FB}\u200D\u2764\uFE0F\u200D\u{1F469}\u{1F3FE}",
  "\u{1F469}\u{1F3FB}\u200D\u2764\uFE0F\u200D\u{1F469}\u{1F3FF}",
  "\u{1F469}\u{1F3FC}\u200D\u2764\uFE0F\u200D\u{1F469}\u{1F3FB}",
  "\u{1F469}\u{1F3FC}\u200D\u2764\uFE0F\u200D\u{1F469}\u{1F3FC}",
  "\u{1F469}\u{1F3FC}\u200D\u2764\uFE0F\u200D\u{1F469}\u{1F3FD}",
  "\u{1F469}\u{1F3FC}\u200D\u2764\uFE0F\u200D\u{1F469}\u{1F3FE}",
  "\u{1F469}\u{1F3FC}\u200D\u2764\uFE0F\u200D\u{1F469}\u{1F3FF}",
  "\u{1F469}\u{1F3FD}\u200D\u2764\uFE0F\u200D\u{1F469}\u{1F3FB}",
  "\u{1F469}\u{1F3FD}\u200D\u2764\uFE0F\u200D\u{1F469}\u{1F3FC}",
  "\u{1F469}\u{1F3FD}\u200D\u2764\uFE0F\u200D\u{1F469}\u{1F3FD}",
  "\u{1F469}\u{1F3FD}\u200D\u2764\uFE0F\u200D\u{1F469}\u{1F3FE}",
  "\u{1F469}\u{1F3FD}\u200D\u2764\uFE0F\u200D\u{1F469}\u{1F3FF}",
  "\u{1F469}\u{1F3FE}\u200D\u2764\uFE0F\u200D\u{1F469}\u{1F3FB}",
  "\u{1F469}\u{1F3FE}\u200D\u2764\uFE0F\u200D\u{1F469}\u{1F3FC}",
  "\u{1F469}\u{1F3FE}\u200D\u2764\uFE0F\u200D\u{1F469}\u{1F3FD}",
  "\u{1F469}\u{1F3FE}\u200D\u2764\uFE0F\u200D\u{1F469}\u{1F3FE}",
  "\u{1F469}\u{1F3FE}\u200D\u2764\uFE0F\u200D\u{1F469}\u{1F3FF}",
  "\u{1F469}\u{1F3FF}\u200D\u2764\uFE0F\u200D\u{1F469}\u{1F3FB}",
  "\u{1F469}\u{1F3FF}\u200D\u2764\uFE0F\u200D\u{1F469}\u{1F3FC}",
  "\u{1F469}\u{1F3FF}\u200D\u2764\uFE0F\u200D\u{1F469}\u{1F3FD}",
  "\u{1F469}\u{1F3FF}\u200D\u2764\uFE0F\u200D\u{1F469}\u{1F3FE}",
  "\u{1F469}\u{1F3FF}\u200D\u2764\uFE0F\u200D\u{1F469}\u{1F3FF}",
  "\u{1F468}\u{1F3FB}\u200D\u2764\uFE0F\u200D\u{1F468}\u{1F3FB}",
  "\u{1F468}\u{1F3FB}\u200D\u2764\uFE0F\u200D\u{1F468}\u{1F3FC}",
  "\u{1F468}\u{1F3FB}\u200D\u2764\uFE0F\u200D\u{1F468}\u{1F3FD}",
  "\u{1F468}\u{1F3FB}\u200D\u2764\uFE0F\u200D\u{1F468}\u{1F3FE}",
  "\u{1F468}\u{1F3FB}\u200D\u2764\uFE0F\u200D\u{1F468}\u{1F3FF}",
  "\u{1F468}\u{1F3FC}\u200D\u2764\uFE0F\u200D\u{1F468}\u{1F3FB}",
  "\u{1F468}\u{1F3FC}\u200D\u2764\uFE0F\u200D\u{1F468}\u{1F3FC}",
  "\u{1F468}\u{1F3FC}\u200D\u2764\uFE0F\u200D\u{1F468}\u{1F3FD}",
  "\u{1F468}\u{1F3FC}\u200D\u2764\uFE0F\u200D\u{1F468}\u{1F3FE}",
  "\u{1F468}\u{1F3FC}\u200D\u2764\uFE0F\u200D\u{1F468}\u{1F3FF}",
  "\u{1F468}\u{1F3FD}\u200D\u2764\uFE0F\u200D\u{1F468}\u{1F3FB}",
  "\u{1F468}\u{1F3FD}\u200D\u2764\uFE0F\u200D\u{1F468}\u{1F3FC}",
  "\u{1F468}\u{1F3FD}\u200D\u2764\uFE0F\u200D\u{1F468}\u{1F3FD}",
  "\u{1F468}\u{1F3FD}\u200D\u2764\uFE0F\u200D\u{1F468}\u{1F3FE}",
  "\u{1F468}\u{1F3FD}\u200D\u2764\uFE0F\u200D\u{1F468}\u{1F3FF}",
  "\u{1F468}\u{1F3FE}\u200D\u2764\uFE0F\u200D\u{1F468}\u{1F3FB}",
  "\u{1F468}\u{1F3FE}\u200D\u2764\uFE0F\u200D\u{1F468}\u{1F3FC}",
  "\u{1F468}\u{1F3FE}\u200D\u2764\uFE0F\u200D\u{1F468}\u{1F3FD}",
  "\u{1F468}\u{1F3FE}\u200D\u2764\uFE0F\u200D\u{1F468}\u{1F3FE}",
  "\u{1F468}\u{1F3FE}\u200D\u2764\uFE0F\u200D\u{1F468}\u{1F3FF}",
  "\u{1F468}\u{1F3FF}\u200D\u2764\uFE0F\u200D\u{1F468}\u{1F3FB}",
  "\u{1F468}\u{1F3FF}\u200D\u2764\uFE0F\u200D\u{1F468}\u{1F3FC}",
  "\u{1F468}\u{1F3FF}\u200D\u2764\uFE0F\u200D\u{1F468}\u{1F3FD}",
  "\u{1F468}\u{1F3FF}\u200D\u2764\uFE0F\u200D\u{1F468}\u{1F3FE}",
  "\u{1F468}\u{1F3FF}\u200D\u2764\uFE0F\u200D\u{1F468}\u{1F3FF}",
  "\u{1F469}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F468}",
  "\u{1F469}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F469}",
  "\u{1F468}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F468}",
  "\u{1F468}\u200D\u{1F469}\u200D\u{1F467}\u200D\u{1F466}",
  "\u{1F468}\u200D\u{1F469}\u200D\u{1F466}\u200D\u{1F466}",
  "\u{1F468}\u200D\u{1F469}\u200D\u{1F467}\u200D\u{1F467}",
  "\u{1F469}\u200D\u{1F469}\u200D\u{1F467}\u200D\u{1F466}",
  "\u{1F469}\u200D\u{1F469}\u200D\u{1F466}\u200D\u{1F466}",
  "\u{1F469}\u200D\u{1F469}\u200D\u{1F467}\u200D\u{1F467}",
  "\u{1F468}\u200D\u{1F468}\u200D\u{1F467}\u200D\u{1F466}",
  "\u{1F468}\u200D\u{1F468}\u200D\u{1F466}\u200D\u{1F466}",
  "\u{1F468}\u200D\u{1F468}\u200D\u{1F467}\u200D\u{1F467}",
  "\u{1FAF1}\u{1F3FB}\u200D\u{1FAF2}\u{1F3FC}",
  "\u{1FAF1}\u{1F3FB}\u200D\u{1FAF2}\u{1F3FD}",
  "\u{1FAF1}\u{1F3FB}\u200D\u{1FAF2}\u{1F3FE}",
  "\u{1FAF1}\u{1F3FB}\u200D\u{1FAF2}\u{1F3FF}",
  "\u{1FAF1}\u{1F3FC}\u200D\u{1FAF2}\u{1F3FB}",
  "\u{1FAF1}\u{1F3FC}\u200D\u{1FAF2}\u{1F3FD}",
  "\u{1FAF1}\u{1F3FC}\u200D\u{1FAF2}\u{1F3FE}",
  "\u{1FAF1}\u{1F3FC}\u200D\u{1FAF2}\u{1F3FF}",
  "\u{1FAF1}\u{1F3FD}\u200D\u{1FAF2}\u{1F3FB}",
  "\u{1FAF1}\u{1F3FD}\u200D\u{1FAF2}\u{1F3FC}",
  "\u{1FAF1}\u{1F3FD}\u200D\u{1FAF2}\u{1F3FE}",
  "\u{1FAF1}\u{1F3FD}\u200D\u{1FAF2}\u{1F3FF}",
  "\u{1FAF1}\u{1F3FE}\u200D\u{1FAF2}\u{1F3FB}",
  "\u{1FAF1}\u{1F3FE}\u200D\u{1FAF2}\u{1F3FC}",
  "\u{1FAF1}\u{1F3FE}\u200D\u{1FAF2}\u{1F3FD}",
  "\u{1FAF1}\u{1F3FE}\u200D\u{1FAF2}\u{1F3FF}",
  "\u{1FAF1}\u{1F3FF}\u200D\u{1FAF2}\u{1F3FB}",
  "\u{1FAF1}\u{1F3FF}\u200D\u{1FAF2}\u{1F3FC}",
  "\u{1FAF1}\u{1F3FF}\u200D\u{1FAF2}\u{1F3FD}",
  "\u{1FAF1}\u{1F3FF}\u200D\u{1FAF2}\u{1F3FE}",
  "\u{1F9D1}\u200D\u{1F91D}\u200D\u{1F9D1}",
  "\u{1F469}\u200D\u2764\uFE0F\u200D\u{1F468}",
  "\u{1F469}\u200D\u2764\uFE0F\u200D\u{1F469}",
  "\u{1F468}\u200D\u2764\uFE0F\u200D\u{1F468}",
  "\u{1F468}\u200D\u{1F469}\u200D\u{1F466}",
  "\u{1F468}\u200D\u{1F469}\u200D\u{1F467}",
  "\u{1F469}\u200D\u{1F469}\u200D\u{1F466}",
  "\u{1F469}\u200D\u{1F469}\u200D\u{1F467}",
  "\u{1F468}\u200D\u{1F468}\u200D\u{1F466}",
  "\u{1F468}\u200D\u{1F468}\u200D\u{1F467}",
  "\u{1F469}\u200D\u{1F467}\u200D\u{1F466}",
  "\u{1F469}\u200D\u{1F466}\u200D\u{1F466}",
  "\u{1F469}\u200D\u{1F467}\u200D\u{1F467}",
  "\u{1F468}\u200D\u{1F467}\u200D\u{1F466}",
  "\u{1F468}\u200D\u{1F466}\u200D\u{1F466}",
  "\u{1F468}\u200D\u{1F467}\u200D\u{1F467}",
  "\u{1F9D1}\u{1F3FB}\u200D\u{1F9B1}",
  "\u{1F9D1}\u{1F3FC}\u200D\u{1F9B1}",
  "\u{1F9D1}\u{1F3FD}\u200D\u{1F9B1}",
  "\u{1F9D1}\u{1F3FE}\u200D\u{1F9B1}",
  "\u{1F9D1}\u{1F3FF}\u200D\u{1F9B1}",
  "\u{1F469}\u{1F3FB}\u200D\u{1F9B1}",
  "\u{1F469}\u{1F3FC}\u200D\u{1F9B1}",
  "\u{1F469}\u{1F3FD}\u200D\u{1F9B1}",
  "\u{1F469}\u{1F3FE}\u200D\u{1F9B1}",
  "\u{1F469}\u{1F3FF}\u200D\u{1F9B1}",
  "\u{1F468}\u{1F3FB}\u200D\u{1F9B1}",
  "\u{1F468}\u{1F3FC}\u200D\u{1F9B1}",
  "\u{1F468}\u{1F3FD}\u200D\u{1F9B1}",
  "\u{1F468}\u{1F3FE}\u200D\u{1F9B1}",
  "\u{1F468}\u{1F3FF}\u200D\u{1F9B1}",
  "\u{1F9D1}\u{1F3FB}\u200D\u{1F9B0}",
  "\u{1F9D1}\u{1F3FC}\u200D\u{1F9B0}",
  "\u{1F9D1}\u{1F3FD}\u200D\u{1F9B0}",
  "\u{1F9D1}\u{1F3FE}\u200D\u{1F9B0}",
  "\u{1F9D1}\u{1F3FF}\u200D\u{1F9B0}",
  "\u{1F469}\u{1F3FB}\u200D\u{1F9B0}",
  "\u{1F469}\u{1F3FC}\u200D\u{1F9B0}",
  "\u{1F469}\u{1F3FD}\u200D\u{1F9B0}",
  "\u{1F469}\u{1F3FE}\u200D\u{1F9B0}",
  "\u{1F469}\u{1F3FF}\u200D\u{1F9B0}",
  "\u{1F468}\u{1F3FB}\u200D\u{1F9B0}",
  "\u{1F468}\u{1F3FC}\u200D\u{1F9B0}",
  "\u{1F468}\u{1F3FD}\u200D\u{1F9B0}",
  "\u{1F468}\u{1F3FE}\u200D\u{1F9B0}",
  "\u{1F468}\u{1F3FF}\u200D\u{1F9B0}",
  "\u{1F471}\u{1F3FB}\u200D\u2640\uFE0F",
  "\u{1F471}\u{1F3FC}\u200D\u2640\uFE0F",
  "\u{1F471}\u{1F3FD}\u200D\u2640\uFE0F",
  "\u{1F471}\u{1F3FE}\u200D\u2640\uFE0F",
  "\u{1F471}\u{1F3FF}\u200D\u2640\uFE0F",
  "\u{1F471}\u{1F3FB}\u200D\u2642\uFE0F",
  "\u{1F471}\u{1F3FC}\u200D\u2642\uFE0F",
  "\u{1F471}\u{1F3FD}\u200D\u2642\uFE0F",
  "\u{1F471}\u{1F3FE}\u200D\u2642\uFE0F",
  "\u{1F471}\u{1F3FF}\u200D\u2642\uFE0F",
  "\u{1F9D1}\u{1F3FB}\u200D\u{1F9B3}",
  "\u{1F9D1}\u{1F3FC}\u200D\u{1F9B3}",
  "\u{1F9D1}\u{1F3FD}\u200D\u{1F9B3}",
  "\u{1F9D1}\u{1F3FE}\u200D\u{1F9B3}",
  "\u{1F9D1}\u{1F3FF}\u200D\u{1F9B3}",
  "\u{1F469}\u{1F3FB}\u200D\u{1F9B3}",
  "\u{1F469}\u{1F3FC}\u200D\u{1F9B3}",
  "\u{1F469}\u{1F3FD}\u200D\u{1F9B3}",
  "\u{1F469}\u{1F3FE}\u200D\u{1F9B3}",
  "\u{1F469}\u{1F3FF}\u200D\u{1F9B3}",
  "\u{1F468}\u{1F3FB}\u200D\u{1F9B3}",
  "\u{1F468}\u{1F3FC}\u200D\u{1F9B3}",
  "\u{1F468}\u{1F3FD}\u200D\u{1F9B3}",
  "\u{1F468}\u{1F3FE}\u200D\u{1F9B3}",
  "\u{1F468}\u{1F3FF}\u200D\u{1F9B3}",
  "\u{1F9D1}\u{1F3FB}\u200D\u{1F9B2}",
  "\u{1F9D1}\u{1F3FC}\u200D\u{1F9B2}",
  "\u{1F9D1}\u{1F3FD}\u200D\u{1F9B2}",
  "\u{1F9D1}\u{1F3FE}\u200D\u{1F9B2}",
  "\u{1F9D1}\u{1F3FF}\u200D\u{1F9B2}",
  "\u{1F469}\u{1F3FB}\u200D\u{1F9B2}",
  "\u{1F469}\u{1F3FC}\u200D\u{1F9B2}",
  "\u{1F469}\u{1F3FD}\u200D\u{1F9B2}",
  "\u{1F469}\u{1F3FE}\u200D\u{1F9B2}",
  "\u{1F469}\u{1F3FF}\u200D\u{1F9B2}",
  "\u{1F468}\u{1F3FB}\u200D\u{1F9B2}",
  "\u{1F468}\u{1F3FC}\u200D\u{1F9B2}",
  "\u{1F468}\u{1F3FD}\u200D\u{1F9B2}",
  "\u{1F468}\u{1F3FE}\u200D\u{1F9B2}",
  "\u{1F468}\u{1F3FF}\u200D\u{1F9B2}",
  "\u{1F9D4}\u{1F3FB}\u200D\u2640\uFE0F",
  "\u{1F9D4}\u{1F3FC}\u200D\u2640\uFE0F",
  "\u{1F9D4}\u{1F3FD}\u200D\u2640\uFE0F",
  "\u{1F9D4}\u{1F3FE}\u200D\u2640\uFE0F",
  "\u{1F9D4}\u{1F3FF}\u200D\u2640\uFE0F",
  "\u{1F9D4}\u{1F3FB}\u200D\u2642\uFE0F",
  "\u{1F9D4}\u{1F3FC}\u200D\u2642\uFE0F",
  "\u{1F9D4}\u{1F3FD}\u200D\u2642\uFE0F",
  "\u{1F9D4}\u{1F3FE}\u200D\u2642\uFE0F",
  "\u{1F9D4}\u{1F3FF}\u200D\u2642\uFE0F",
  "\u{1F473}\u{1F3FB}\u200D\u2640\uFE0F",
  "\u{1F473}\u{1F3FC}\u200D\u2640\uFE0F",
  "\u{1F473}\u{1F3FD}\u200D\u2640\uFE0F",
  "\u{1F473}\u{1F3FE}\u200D\u2640\uFE0F",
  "\u{1F473}\u{1F3FF}\u200D\u2640\uFE0F",
  "\u{1F473}\u{1F3FB}\u200D\u2642\uFE0F",
  "\u{1F473}\u{1F3FC}\u200D\u2642\uFE0F",
  "\u{1F473}\u{1F3FD}\u200D\u2642\uFE0F",
  "\u{1F473}\u{1F3FE}\u200D\u2642\uFE0F",
  "\u{1F473}\u{1F3FF}\u200D\u2642\uFE0F",
  "\u{1F46E}\u{1F3FB}\u200D\u2640\uFE0F",
  "\u{1F46E}\u{1F3FC}\u200D\u2640\uFE0F",
  "\u{1F46E}\u{1F3FD}\u200D\u2640\uFE0F",
  "\u{1F46E}\u{1F3FE}\u200D\u2640\uFE0F",
  "\u{1F46E}\u{1F3FF}\u200D\u2640\uFE0F",
  "\u{1F46E}\u{1F3FB}\u200D\u2642\uFE0F",
  "\u{1F46E}\u{1F3FC}\u200D\u2642\uFE0F",
  "\u{1F46E}\u{1F3FD}\u200D\u2642\uFE0F",
  "\u{1F46E}\u{1F3FE}\u200D\u2642\uFE0F",
  "\u{1F46E}\u{1F3FF}\u200D\u2642\uFE0F",
  "\u{1F477}\u{1F3FB}\u200D\u2640\uFE0F",
  "\u{1F477}\u{1F3FC}\u200D\u2640\uFE0F",
  "\u{1F477}\u{1F3FD}\u200D\u2640\uFE0F",
  "\u{1F477}\u{1F3FE}\u200D\u2640\uFE0F",
  "\u{1F477}\u{1F3FF}\u200D\u2640\uFE0F",
  "\u{1F477}\u{1F3FB}\u200D\u2642\uFE0F",
  "\u{1F477}\u{1F3FC}\u200D\u2642\uFE0F",
  "\u{1F477}\u{1F3FD}\u200D\u2642\uFE0F",
  "\u{1F477}\u{1F3FE}\u200D\u2642\uFE0F",
  "\u{1F477}\u{1F3FF}\u200D\u2642\uFE0F",
  "\u{1F482}\u{1F3FB}\u200D\u2640\uFE0F",
  "\u{1F482}\u{1F3FC}\u200D\u2640\uFE0F",
  "\u{1F482}\u{1F3FD}\u200D\u2640\uFE0F",
  "\u{1F482}\u{1F3FE}\u200D\u2640\uFE0F",
  "\u{1F482}\u{1F3FF}\u200D\u2640\uFE0F",
  "\u{1F482}\u{1F3FB}\u200D\u2642\uFE0F",
  "\u{1F482}\u{1F3FC}\u200D\u2642\uFE0F",
  "\u{1F482}\u{1F3FD}\u200D\u2642\uFE0F",
  "\u{1F482}\u{1F3FE}\u200D\u2642\uFE0F",
  "\u{1F482}\u{1F3FF}\u200D\u2642\uFE0F",
  "\u{1F575}\u{1F3FB}\u200D\u2640\uFE0F",
  "\u{1F575}\u{1F3FC}\u200D\u2640\uFE0F",
  "\u{1F575}\u{1F3FD}\u200D\u2640\uFE0F",
  "\u{1F575}\u{1F3FE}\u200D\u2640\uFE0F",
  "\u{1F575}\u{1F3FF}\u200D\u2640\uFE0F",
  "\u{1F575}\u{1F3FB}\u200D\u2642\uFE0F",
  "\u{1F575}\u{1F3FC}\u200D\u2642\uFE0F",
  "\u{1F575}\u{1F3FD}\u200D\u2642\uFE0F",
  "\u{1F575}\u{1F3FE}\u200D\u2642\uFE0F",
  "\u{1F575}\u{1F3FF}\u200D\u2642\uFE0F",
  "\u{1F9D1}\u{1F3FB}\u200D\u2695\uFE0F",
  "\u{1F9D1}\u{1F3FC}\u200D\u2695\uFE0F",
  "\u{1F9D1}\u{1F3FD}\u200D\u2695\uFE0F",
  "\u{1F9D1}\u{1F3FE}\u200D\u2695\uFE0F",
  "\u{1F9D1}\u{1F3FF}\u200D\u2695\uFE0F",
  "\u{1F469}\u{1F3FB}\u200D\u2695\uFE0F",
  "\u{1F469}\u{1F3FC}\u200D\u2695\uFE0F",
  "\u{1F469}\u{1F3FD}\u200D\u2695\uFE0F",
  "\u{1F469}\u{1F3FE}\u200D\u2695\uFE0F",
  "\u{1F469}\u{1F3FF}\u200D\u2695\uFE0F",
  "\u{1F468}\u{1F3FB}\u200D\u2695\uFE0F",
  "\u{1F468}\u{1F3FC}\u200D\u2695\uFE0F",
  "\u{1F468}\u{1F3FD}\u200D\u2695\uFE0F",
  "\u{1F468}\u{1F3FE}\u200D\u2695\uFE0F",
  "\u{1F468}\u{1F3FF}\u200D\u2695\uFE0F",
  "\u{1F9D1}\u{1F3FB}\u200D\u{1F33E}",
  "\u{1F9D1}\u{1F3FC}\u200D\u{1F33E}",
  "\u{1F9D1}\u{1F3FD}\u200D\u{1F33E}",
  "\u{1F9D1}\u{1F3FE}\u200D\u{1F33E}",
  "\u{1F9D1}\u{1F3FF}\u200D\u{1F33E}",
  "\u{1F469}\u{1F3FB}\u200D\u{1F33E}",
  "\u{1F469}\u{1F3FC}\u200D\u{1F33E}",
  "\u{1F469}\u{1F3FD}\u200D\u{1F33E}",
  "\u{1F469}\u{1F3FE}\u200D\u{1F33E}",
  "\u{1F469}\u{1F3FF}\u200D\u{1F33E}",
  "\u{1F468}\u{1F3FB}\u200D\u{1F33E}",
  "\u{1F468}\u{1F3FC}\u200D\u{1F33E}",
  "\u{1F468}\u{1F3FD}\u200D\u{1F33E}",
  "\u{1F468}\u{1F3FE}\u200D\u{1F33E}",
  "\u{1F468}\u{1F3FF}\u200D\u{1F33E}",
  "\u{1F9D1}\u{1F3FB}\u200D\u{1F373}",
  "\u{1F9D1}\u{1F3FC}\u200D\u{1F373}",
  "\u{1F9D1}\u{1F3FD}\u200D\u{1F373}",
  "\u{1F9D1}\u{1F3FE}\u200D\u{1F373}",
  "\u{1F9D1}\u{1F3FF}\u200D\u{1F373}",
  "\u{1F469}\u{1F3FB}\u200D\u{1F373}",
  "\u{1F469}\u{1F3FC}\u200D\u{1F373}",
  "\u{1F469}\u{1F3FD}\u200D\u{1F373}",
  "\u{1F469}\u{1F3FE}\u200D\u{1F373}",
  "\u{1F469}\u{1F3FF}\u200D\u{1F373}",
  "\u{1F468}\u{1F3FB}\u200D\u{1F373}",
  "\u{1F468}\u{1F3FC}\u200D\u{1F373}",
  "\u{1F468}\u{1F3FD}\u200D\u{1F373}",
  "\u{1F468}\u{1F3FE}\u200D\u{1F373}",
  "\u{1F468}\u{1F3FF}\u200D\u{1F373}",
  "\u{1F9D1}\u{1F3FB}\u200D\u{1F393}",
  "\u{1F9D1}\u{1F3FC}\u200D\u{1F393}",
  "\u{1F9D1}\u{1F3FD}\u200D\u{1F393}",
  "\u{1F9D1}\u{1F3FE}\u200D\u{1F393}",
  "\u{1F9D1}\u{1F3FF}\u200D\u{1F393}",
  "\u{1F469}\u{1F3FB}\u200D\u{1F393}",
  "\u{1F469}\u{1F3FC}\u200D\u{1F393}",
  "\u{1F469}\u{1F3FD}\u200D\u{1F393}",
  "\u{1F469}\u{1F3FE}\u200D\u{1F393}",
  "\u{1F469}\u{1F3FF}\u200D\u{1F393}",
  "\u{1F468}\u{1F3FB}\u200D\u{1F393}",
  "\u{1F468}\u{1F3FC}\u200D\u{1F393}",
  "\u{1F468}\u{1F3FD}\u200D\u{1F393}",
  "\u{1F468}\u{1F3FE}\u200D\u{1F393}",
  "\u{1F468}\u{1F3FF}\u200D\u{1F393}",
  "\u{1F9D1}\u{1F3FB}\u200D\u{1F3A4}",
  "\u{1F9D1}\u{1F3FC}\u200D\u{1F3A4}",
  "\u{1F9D1}\u{1F3FD}\u200D\u{1F3A4}",
  "\u{1F9D1}\u{1F3FE}\u200D\u{1F3A4}",
  "\u{1F9D1}\u{1F3FF}\u200D\u{1F3A4}",
  "\u{1F469}\u{1F3FB}\u200D\u{1F3A4}",
  "\u{1F469}\u{1F3FC}\u200D\u{1F3A4}",
  "\u{1F469}\u{1F3FD}\u200D\u{1F3A4}",
  "\u{1F469}\u{1F3FE}\u200D\u{1F3A4}",
  "\u{1F469}\u{1F3FF}\u200D\u{1F3A4}",
  "\u{1F468}\u{1F3FB}\u200D\u{1F3A4}",
  "\u{1F468}\u{1F3FC}\u200D\u{1F3A4}",
  "\u{1F468}\u{1F3FD}\u200D\u{1F3A4}",
  "\u{1F468}\u{1F3FE}\u200D\u{1F3A4}",
  "\u{1F468}\u{1F3FF}\u200D\u{1F3A4}",
  "\u{1F9D1}\u{1F3FB}\u200D\u{1F3EB}",
  "\u{1F9D1}\u{1F3FC}\u200D\u{1F3EB}",
  "\u{1F9D1}\u{1F3FD}\u200D\u{1F3EB}",
  "\u{1F9D1}\u{1F3FE}\u200D\u{1F3EB}",
  "\u{1F9D1}\u{1F3FF}\u200D\u{1F3EB}",
  "\u{1F469}\u{1F3FB}\u200D\u{1F3EB}",
  "\u{1F469}\u{1F3FC}\u200D\u{1F3EB}",
  "\u{1F469}\u{1F3FD}\u200D\u{1F3EB}",
  "\u{1F469}\u{1F3FE}\u200D\u{1F3EB}",
  "\u{1F469}\u{1F3FF}\u200D\u{1F3EB}",
  "\u{1F468}\u{1F3FB}\u200D\u{1F3EB}",
  "\u{1F468}\u{1F3FC}\u200D\u{1F3EB}",
  "\u{1F468}\u{1F3FD}\u200D\u{1F3EB}",
  "\u{1F468}\u{1F3FE}\u200D\u{1F3EB}",
  "\u{1F468}\u{1F3FF}\u200D\u{1F3EB}",
  "\u{1F9D1}\u{1F3FB}\u200D\u{1F3ED}",
  "\u{1F9D1}\u{1F3FC}\u200D\u{1F3ED}",
  "\u{1F9D1}\u{1F3FD}\u200D\u{1F3ED}",
  "\u{1F9D1}\u{1F3FE}\u200D\u{1F3ED}",
  "\u{1F9D1}\u{1F3FF}\u200D\u{1F3ED}",
  "\u{1F469}\u{1F3FB}\u200D\u{1F3ED}",
  "\u{1F469}\u{1F3FC}\u200D\u{1F3ED}",
  "\u{1F469}\u{1F3FD}\u200D\u{1F3ED}",
  "\u{1F469}\u{1F3FE}\u200D\u{1F3ED}",
  "\u{1F469}\u{1F3FF}\u200D\u{1F3ED}",
  "\u{1F468}\u{1F3FB}\u200D\u{1F3ED}",
  "\u{1F468}\u{1F3FC}\u200D\u{1F3ED}",
  "\u{1F468}\u{1F3FD}\u200D\u{1F3ED}",
  "\u{1F468}\u{1F3FE}\u200D\u{1F3ED}",
  "\u{1F468}\u{1F3FF}\u200D\u{1F3ED}",
  "\u{1F9D1}\u{1F3FB}\u200D\u{1F4BB}",
  "\u{1F9D1}\u{1F3FC}\u200D\u{1F4BB}",
  "\u{1F9D1}\u{1F3FD}\u200D\u{1F4BB}",
  "\u{1F9D1}\u{1F3FE}\u200D\u{1F4BB}",
  "\u{1F9D1}\u{1F3FF}\u200D\u{1F4BB}",
  "\u{1F469}\u{1F3FB}\u200D\u{1F4BB}",
  "\u{1F469}\u{1F3FC}\u200D\u{1F4BB}",
  "\u{1F469}\u{1F3FD}\u200D\u{1F4BB}",
  "\u{1F469}\u{1F3FE}\u200D\u{1F4BB}",
  "\u{1F469}\u{1F3FF}\u200D\u{1F4BB}",
  "\u{1F468}\u{1F3FB}\u200D\u{1F4BB}",
  "\u{1F468}\u{1F3FC}\u200D\u{1F4BB}",
  "\u{1F468}\u{1F3FD}\u200D\u{1F4BB}",
  "\u{1F468}\u{1F3FE}\u200D\u{1F4BB}",
  "\u{1F468}\u{1F3FF}\u200D\u{1F4BB}",
  "\u{1F9D1}\u{1F3FB}\u200D\u{1F4BC}",
  "\u{1F9D1}\u{1F3FC}\u200D\u{1F4BC}",
  "\u{1F9D1}\u{1F3FD}\u200D\u{1F4BC}",
  "\u{1F9D1}\u{1F3FE}\u200D\u{1F4BC}",
  "\u{1F9D1}\u{1F3FF}\u200D\u{1F4BC}",
  "\u{1F469}\u{1F3FB}\u200D\u{1F4BC}",
  "\u{1F469}\u{1F3FC}\u200D\u{1F4BC}",
  "\u{1F469}\u{1F3FD}\u200D\u{1F4BC}",
  "\u{1F469}\u{1F3FE}\u200D\u{1F4BC}",
  "\u{1F469}\u{1F3FF}\u200D\u{1F4BC}",
  "\u{1F468}\u{1F3FB}\u200D\u{1F4BC}",
  "\u{1F468}\u{1F3FC}\u200D\u{1F4BC}",
  "\u{1F468}\u{1F3FD}\u200D\u{1F4BC}",
  "\u{1F468}\u{1F3FE}\u200D\u{1F4BC}",
  "\u{1F468}\u{1F3FF}\u200D\u{1F4BC}",
  "\u{1F9D1}\u{1F3FB}\u200D\u{1F527}",
  "\u{1F9D1}\u{1F3FC}\u200D\u{1F527}",
  "\u{1F9D1}\u{1F3FD}\u200D\u{1F527}",
  "\u{1F9D1}\u{1F3FE}\u200D\u{1F527}",
  "\u{1F9D1}\u{1F3FF}\u200D\u{1F527}",
  "\u{1F469}\u{1F3FB}\u200D\u{1F527}",
  "\u{1F469}\u{1F3FC}\u200D\u{1F527}",
  "\u{1F469}\u{1F3FD}\u200D\u{1F527}",
  "\u{1F469}\u{1F3FE}\u200D\u{1F527}",
  "\u{1F469}\u{1F3FF}\u200D\u{1F527}",
  "\u{1F468}\u{1F3FB}\u200D\u{1F527}",
  "\u{1F468}\u{1F3FC}\u200D\u{1F527}",
  "\u{1F468}\u{1F3FD}\u200D\u{1F527}",
  "\u{1F468}\u{1F3FE}\u200D\u{1F527}",
  "\u{1F468}\u{1F3FF}\u200D\u{1F527}",
  "\u{1F9D1}\u{1F3FB}\u200D\u{1F52C}",
  "\u{1F9D1}\u{1F3FC}\u200D\u{1F52C}",
  "\u{1F9D1}\u{1F3FD}\u200D\u{1F52C}",
  "\u{1F9D1}\u{1F3FE}\u200D\u{1F52C}",
  "\u{1F9D1}\u{1F3FF}\u200D\u{1F52C}",
  "\u{1F469}\u{1F3FB}\u200D\u{1F52C}",
  "\u{1F469}\u{1F3FC}\u200D\u{1F52C}",
  "\u{1F469}\u{1F3FD}\u200D\u{1F52C}",
  "\u{1F469}\u{1F3FE}\u200D\u{1F52C}",
  "\u{1F469}\u{1F3FF}\u200D\u{1F52C}",
  "\u{1F468}\u{1F3FB}\u200D\u{1F52C}",
  "\u{1F468}\u{1F3FC}\u200D\u{1F52C}",
  "\u{1F468}\u{1F3FD}\u200D\u{1F52C}",
  "\u{1F468}\u{1F3FE}\u200D\u{1F52C}",
  "\u{1F468}\u{1F3FF}\u200D\u{1F52C}",
  "\u{1F9D1}\u{1F3FB}\u200D\u{1F3A8}",
  "\u{1F9D1}\u{1F3FC}\u200D\u{1F3A8}",
  "\u{1F9D1}\u{1F3FD}\u200D\u{1F3A8}",
  "\u{1F9D1}\u{1F3FE}\u200D\u{1F3A8}",
  "\u{1F9D1}\u{1F3FF}\u200D\u{1F3A8}",
  "\u{1F469}\u{1F3FB}\u200D\u{1F3A8}",
  "\u{1F469}\u{1F3FC}\u200D\u{1F3A8}",
  "\u{1F469}\u{1F3FD}\u200D\u{1F3A8}",
  "\u{1F469}\u{1F3FE}\u200D\u{1F3A8}",
  "\u{1F469}\u{1F3FF}\u200D\u{1F3A8}",
  "\u{1F468}\u{1F3FB}\u200D\u{1F3A8}",
  "\u{1F468}\u{1F3FC}\u200D\u{1F3A8}",
  "\u{1F468}\u{1F3FD}\u200D\u{1F3A8}",
  "\u{1F468}\u{1F3FE}\u200D\u{1F3A8}",
  "\u{1F468}\u{1F3FF}\u200D\u{1F3A8}",
  "\u{1F9D1}\u{1F3FB}\u200D\u{1F692}",
  "\u{1F9D1}\u{1F3FC}\u200D\u{1F692}",
  "\u{1F9D1}\u{1F3FD}\u200D\u{1F692}",
  "\u{1F9D1}\u{1F3FE}\u200D\u{1F692}",
  "\u{1F9D1}\u{1F3FF}\u200D\u{1F692}",
  "\u{1F469}\u{1F3FB}\u200D\u{1F692}",
  "\u{1F469}\u{1F3FC}\u200D\u{1F692}",
  "\u{1F469}\u{1F3FD}\u200D\u{1F692}",
  "\u{1F469}\u{1F3FE}\u200D\u{1F692}",
  "\u{1F469}\u{1F3FF}\u200D\u{1F692}",
  "\u{1F468}\u{1F3FB}\u200D\u{1F692}",
  "\u{1F468}\u{1F3FC}\u200D\u{1F692}",
  "\u{1F468}\u{1F3FD}\u200D\u{1F692}",
  "\u{1F468}\u{1F3FE}\u200D\u{1F692}",
  "\u{1F468}\u{1F3FF}\u200D\u{1F692}",
  "\u{1F9D1}\u{1F3FB}\u200D\u2708\uFE0F",
  "\u{1F9D1}\u{1F3FC}\u200D\u2708\uFE0F",
  "\u{1F9D1}\u{1F3FD}\u200D\u2708\uFE0F",
  "\u{1F9D1}\u{1F3FE}\u200D\u2708\uFE0F",
  "\u{1F9D1}\u{1F3FF}\u200D\u2708\uFE0F",
  "\u{1F469}\u{1F3FB}\u200D\u2708\uFE0F",
  "\u{1F469}\u{1F3FC}\u200D\u2708\uFE0F",
  "\u{1F469}\u{1F3FD}\u200D\u2708\uFE0F",
  "\u{1F469}\u{1F3FE}\u200D\u2708\uFE0F",
  "\u{1F469}\u{1F3FF}\u200D\u2708\uFE0F",
  "\u{1F468}\u{1F3FB}\u200D\u2708\uFE0F",
  "\u{1F468}\u{1F3FC}\u200D\u2708\uFE0F",
  "\u{1F468}\u{1F3FD}\u200D\u2708\uFE0F",
  "\u{1F468}\u{1F3FE}\u200D\u2708\uFE0F",
  "\u{1F468}\u{1F3FF}\u200D\u2708\uFE0F",
  "\u{1F9D1}\u{1F3FB}\u200D\u{1F680}",
  "\u{1F9D1}\u{1F3FC}\u200D\u{1F680}",
  "\u{1F9D1}\u{1F3FD}\u200D\u{1F680}",
  "\u{1F9D1}\u{1F3FE}\u200D\u{1F680}",
  "\u{1F9D1}\u{1F3FF}\u200D\u{1F680}",
  "\u{1F469}\u{1F3FB}\u200D\u{1F680}",
  "\u{1F469}\u{1F3FC}\u200D\u{1F680}",
  "\u{1F469}\u{1F3FD}\u200D\u{1F680}",
  "\u{1F469}\u{1F3FE}\u200D\u{1F680}",
  "\u{1F469}\u{1F3FF}\u200D\u{1F680}",
  "\u{1F468}\u{1F3FB}\u200D\u{1F680}",
  "\u{1F468}\u{1F3FC}\u200D\u{1F680}",
  "\u{1F468}\u{1F3FD}\u200D\u{1F680}",
  "\u{1F468}\u{1F3FE}\u200D\u{1F680}",
  "\u{1F468}\u{1F3FF}\u200D\u{1F680}",
  "\u{1F9D1}\u{1F3FB}\u200D\u2696\uFE0F",
  "\u{1F9D1}\u{1F3FC}\u200D\u2696\uFE0F",
  "\u{1F9D1}\u{1F3FD}\u200D\u2696\uFE0F",
  "\u{1F9D1}\u{1F3FE}\u200D\u2696\uFE0F",
  "\u{1F9D1}\u{1F3FF}\u200D\u2696\uFE0F",
  "\u{1F469}\u{1F3FB}\u200D\u2696\uFE0F",
  "\u{1F469}\u{1F3FC}\u200D\u2696\uFE0F",
  "\u{1F469}\u{1F3FD}\u200D\u2696\uFE0F",
  "\u{1F469}\u{1F3FE}\u200D\u2696\uFE0F",
  "\u{1F469}\u{1F3FF}\u200D\u2696\uFE0F",
  "\u{1F468}\u{1F3FB}\u200D\u2696\uFE0F",
  "\u{1F468}\u{1F3FC}\u200D\u2696\uFE0F",
  "\u{1F468}\u{1F3FD}\u200D\u2696\uFE0F",
  "\u{1F468}\u{1F3FE}\u200D\u2696\uFE0F",
  "\u{1F468}\u{1F3FF}\u200D\u2696\uFE0F",
  "\u{1F470}\u{1F3FB}\u200D\u2640\uFE0F",
  "\u{1F470}\u{1F3FC}\u200D\u2640\uFE0F",
  "\u{1F470}\u{1F3FD}\u200D\u2640\uFE0F",
  "\u{1F470}\u{1F3FE}\u200D\u2640\uFE0F",
  "\u{1F470}\u{1F3FF}\u200D\u2640\uFE0F",
  "\u{1F470}\u{1F3FB}\u200D\u2642\uFE0F",
  "\u{1F470}\u{1F3FC}\u200D\u2642\uFE0F",
  "\u{1F470}\u{1F3FD}\u200D\u2642\uFE0F",
  "\u{1F470}\u{1F3FE}\u200D\u2642\uFE0F",
  "\u{1F470}\u{1F3FF}\u200D\u2642\uFE0F",
  "\u{1F935}\u{1F3FB}\u200D\u2640\uFE0F",
  "\u{1F935}\u{1F3FC}\u200D\u2640\uFE0F",
  "\u{1F935}\u{1F3FD}\u200D\u2640\uFE0F",
  "\u{1F935}\u{1F3FE}\u200D\u2640\uFE0F",
  "\u{1F935}\u{1F3FF}\u200D\u2640\uFE0F",
  "\u{1F935}\u{1F3FB}\u200D\u2642\uFE0F",
  "\u{1F935}\u{1F3FC}\u200D\u2642\uFE0F",
  "\u{1F935}\u{1F3FD}\u200D\u2642\uFE0F",
  "\u{1F935}\u{1F3FE}\u200D\u2642\uFE0F",
  "\u{1F935}\u{1F3FF}\u200D\u2642\uFE0F",
  "\u{1F9B8}\u{1F3FB}\u200D\u2640\uFE0F",
  "\u{1F9B8}\u{1F3FC}\u200D\u2640\uFE0F",
  "\u{1F9B8}\u{1F3FD}\u200D\u2640\uFE0F",
  "\u{1F9B8}\u{1F3FE}\u200D\u2640\uFE0F",
  "\u{1F9B8}\u{1F3FF}\u200D\u2640\uFE0F",
  "\u{1F9B8}\u{1F3FB}\u200D\u2642\uFE0F",
  "\u{1F9B8}\u{1F3FC}\u200D\u2642\uFE0F",
  "\u{1F9B8}\u{1F3FD}\u200D\u2642\uFE0F",
  "\u{1F9B8}\u{1F3FE}\u200D\u2642\uFE0F",
  "\u{1F9B8}\u{1F3FF}\u200D\u2642\uFE0F",
  "\u{1F9B9}\u{1F3FB}\u200D\u2640\uFE0F",
  "\u{1F9B9}\u{1F3FC}\u200D\u2640\uFE0F",
  "\u{1F9B9}\u{1F3FD}\u200D\u2640\uFE0F",
  "\u{1F9B9}\u{1F3FE}\u200D\u2640\uFE0F",
  "\u{1F9B9}\u{1F3FF}\u200D\u2640\uFE0F",
  "\u{1F9B9}\u{1F3FB}\u200D\u2642\uFE0F",
  "\u{1F9B9}\u{1F3FC}\u200D\u2642\uFE0F",
  "\u{1F9B9}\u{1F3FD}\u200D\u2642\uFE0F",
  "\u{1F9B9}\u{1F3FE}\u200D\u2642\uFE0F",
  "\u{1F9B9}\u{1F3FF}\u200D\u2642\uFE0F",
  "\u{1F9D1}\u{1F3FB}\u200D\u{1F384}",
  "\u{1F9D1}\u{1F3FC}\u200D\u{1F384}",
  "\u{1F9D1}\u{1F3FD}\u200D\u{1F384}",
  "\u{1F9D1}\u{1F3FE}\u200D\u{1F384}",
  "\u{1F9D1}\u{1F3FF}\u200D\u{1F384}",
  "\u{1F9D9}\u{1F3FB}\u200D\u2640\uFE0F",
  "\u{1F9D9}\u{1F3FC}\u200D\u2640\uFE0F",
  "\u{1F9D9}\u{1F3FD}\u200D\u2640\uFE0F",
  "\u{1F9D9}\u{1F3FE}\u200D\u2640\uFE0F",
  "\u{1F9D9}\u{1F3FF}\u200D\u2640\uFE0F",
  "\u{1F9D9}\u{1F3FB}\u200D\u2642\uFE0F",
  "\u{1F9D9}\u{1F3FC}\u200D\u2642\uFE0F",
  "\u{1F9D9}\u{1F3FD}\u200D\u2642\uFE0F",
  "\u{1F9D9}\u{1F3FE}\u200D\u2642\uFE0F",
  "\u{1F9D9}\u{1F3FF}\u200D\u2642\uFE0F",
  "\u{1F9DD}\u{1F3FB}\u200D\u2640\uFE0F",
  "\u{1F9DD}\u{1F3FC}\u200D\u2640\uFE0F",
  "\u{1F9DD}\u{1F3FD}\u200D\u2640\uFE0F",
  "\u{1F9DD}\u{1F3FE}\u200D\u2640\uFE0F",
  "\u{1F9DD}\u{1F3FF}\u200D\u2640\uFE0F",
  "\u{1F9DD}\u{1F3FB}\u200D\u2642\uFE0F",
  "\u{1F9DD}\u{1F3FC}\u200D\u2642\uFE0F",
  "\u{1F9DD}\u{1F3FD}\u200D\u2642\uFE0F",
  "\u{1F9DD}\u{1F3FE}\u200D\u2642\uFE0F",
  "\u{1F9DD}\u{1F3FF}\u200D\u2642\uFE0F",
  "\u{1F9DB}\u{1F3FB}\u200D\u2640\uFE0F",
  "\u{1F9DB}\u{1F3FC}\u200D\u2640\uFE0F",
  "\u{1F9DB}\u{1F3FD}\u200D\u2640\uFE0F",
  "\u{1F9DB}\u{1F3FE}\u200D\u2640\uFE0F",
  "\u{1F9DB}\u{1F3FF}\u200D\u2640\uFE0F",
  "\u{1F9DB}\u{1F3FB}\u200D\u2642\uFE0F",
  "\u{1F9DB}\u{1F3FC}\u200D\u2642\uFE0F",
  "\u{1F9DB}\u{1F3FD}\u200D\u2642\uFE0F",
  "\u{1F9DB}\u{1F3FE}\u200D\u2642\uFE0F",
  "\u{1F9DB}\u{1F3FF}\u200D\u2642\uFE0F",
  "\u{1F9DC}\u{1F3FB}\u200D\u2640\uFE0F",
  "\u{1F9DC}\u{1F3FC}\u200D\u2640\uFE0F",
  "\u{1F9DC}\u{1F3FD}\u200D\u2640\uFE0F",
  "\u{1F9DC}\u{1F3FE}\u200D\u2640\uFE0F",
  "\u{1F9DC}\u{1F3FF}\u200D\u2640\uFE0F",
  "\u{1F9DC}\u{1F3FB}\u200D\u2642\uFE0F",
  "\u{1F9DC}\u{1F3FC}\u200D\u2642\uFE0F",
  "\u{1F9DC}\u{1F3FD}\u200D\u2642\uFE0F",
  "\u{1F9DC}\u{1F3FE}\u200D\u2642\uFE0F",
  "\u{1F9DC}\u{1F3FF}\u200D\u2642\uFE0F",
  "\u{1F9DA}\u{1F3FB}\u200D\u2640\uFE0F",
  "\u{1F9DA}\u{1F3FC}\u200D\u2640\uFE0F",
  "\u{1F9DA}\u{1F3FD}\u200D\u2640\uFE0F",
  "\u{1F9DA}\u{1F3FE}\u200D\u2640\uFE0F",
  "\u{1F9DA}\u{1F3FF}\u200D\u2640\uFE0F",
  "\u{1F9DA}\u{1F3FB}\u200D\u2642\uFE0F",
  "\u{1F9DA}\u{1F3FC}\u200D\u2642\uFE0F",
  "\u{1F9DA}\u{1F3FD}\u200D\u2642\uFE0F",
  "\u{1F9DA}\u{1F3FE}\u200D\u2642\uFE0F",
  "\u{1F9DA}\u{1F3FF}\u200D\u2642\uFE0F",
  "\u{1F9D1}\u{1F3FB}\u200D\u{1F37C}",
  "\u{1F9D1}\u{1F3FC}\u200D\u{1F37C}",
  "\u{1F9D1}\u{1F3FD}\u200D\u{1F37C}",
  "\u{1F9D1}\u{1F3FE}\u200D\u{1F37C}",
  "\u{1F9D1}\u{1F3FF}\u200D\u{1F37C}",
  "\u{1F469}\u{1F3FB}\u200D\u{1F37C}",
  "\u{1F469}\u{1F3FC}\u200D\u{1F37C}",
  "\u{1F469}\u{1F3FD}\u200D\u{1F37C}",
  "\u{1F469}\u{1F3FE}\u200D\u{1F37C}",
  "\u{1F469}\u{1F3FF}\u200D\u{1F37C}",
  "\u{1F468}\u{1F3FB}\u200D\u{1F37C}",
  "\u{1F468}\u{1F3FC}\u200D\u{1F37C}",
  "\u{1F468}\u{1F3FD}\u200D\u{1F37C}",
  "\u{1F468}\u{1F3FE}\u200D\u{1F37C}",
  "\u{1F468}\u{1F3FF}\u200D\u{1F37C}",
  "\u{1F647}\u{1F3FB}\u200D\u2640\uFE0F",
  "\u{1F647}\u{1F3FC}\u200D\u2640\uFE0F",
  "\u{1F647}\u{1F3FD}\u200D\u2640\uFE0F",
  "\u{1F647}\u{1F3FE}\u200D\u2640\uFE0F",
  "\u{1F647}\u{1F3FF}\u200D\u2640\uFE0F",
  "\u{1F647}\u{1F3FB}\u200D\u2642\uFE0F",
  "\u{1F647}\u{1F3FC}\u200D\u2642\uFE0F",
  "\u{1F647}\u{1F3FD}\u200D\u2642\uFE0F",
  "\u{1F647}\u{1F3FE}\u200D\u2642\uFE0F",
  "\u{1F647}\u{1F3FF}\u200D\u2642\uFE0F",
  "\u{1F481}\u{1F3FB}\u200D\u2640\uFE0F",
  "\u{1F481}\u{1F3FC}\u200D\u2640\uFE0F",
  "\u{1F481}\u{1F3FD}\u200D\u2640\uFE0F",
  "\u{1F481}\u{1F3FE}\u200D\u2640\uFE0F",
  "\u{1F481}\u{1F3FF}\u200D\u2640\uFE0F",
  "\u{1F481}\u{1F3FB}\u200D\u2642\uFE0F",
  "\u{1F481}\u{1F3FC}\u200D\u2642\uFE0F",
  "\u{1F481}\u{1F3FD}\u200D\u2642\uFE0F",
  "\u{1F481}\u{1F3FE}\u200D\u2642\uFE0F",
  "\u{1F481}\u{1F3FF}\u200D\u2642\uFE0F",
  "\u{1F645}\u{1F3FB}\u200D\u2640\uFE0F",
  "\u{1F645}\u{1F3FC}\u200D\u2640\uFE0F",
  "\u{1F645}\u{1F3FD}\u200D\u2640\uFE0F",
  "\u{1F645}\u{1F3FE}\u200D\u2640\uFE0F",
  "\u{1F645}\u{1F3FF}\u200D\u2640\uFE0F",
  "\u{1F645}\u{1F3FB}\u200D\u2642\uFE0F",
  "\u{1F645}\u{1F3FC}\u200D\u2642\uFE0F",
  "\u{1F645}\u{1F3FD}\u200D\u2642\uFE0F",
  "\u{1F645}\u{1F3FE}\u200D\u2642\uFE0F",
  "\u{1F645}\u{1F3FF}\u200D\u2642\uFE0F",
  "\u{1F646}\u{1F3FB}\u200D\u2640\uFE0F",
  "\u{1F646}\u{1F3FC}\u200D\u2640\uFE0F",
  "\u{1F646}\u{1F3FD}\u200D\u2640\uFE0F",
  "\u{1F646}\u{1F3FE}\u200D\u2640\uFE0F",
  "\u{1F646}\u{1F3FF}\u200D\u2640\uFE0F",
  "\u{1F646}\u{1F3FB}\u200D\u2642\uFE0F",
  "\u{1F646}\u{1F3FC}\u200D\u2642\uFE0F",
  "\u{1F646}\u{1F3FD}\u200D\u2642\uFE0F",
  "\u{1F646}\u{1F3FE}\u200D\u2642\uFE0F",
  "\u{1F646}\u{1F3FF}\u200D\u2642\uFE0F",
  "\u{1F64B}\u{1F3FB}\u200D\u2640\uFE0F",
  "\u{1F64B}\u{1F3FC}\u200D\u2640\uFE0F",
  "\u{1F64B}\u{1F3FD}\u200D\u2640\uFE0F",
  "\u{1F64B}\u{1F3FE}\u200D\u2640\uFE0F",
  "\u{1F64B}\u{1F3FF}\u200D\u2640\uFE0F",
  "\u{1F64B}\u{1F3FB}\u200D\u2642\uFE0F",
  "\u{1F64B}\u{1F3FC}\u200D\u2642\uFE0F",
  "\u{1F64B}\u{1F3FD}\u200D\u2642\uFE0F",
  "\u{1F64B}\u{1F3FE}\u200D\u2642\uFE0F",
  "\u{1F64B}\u{1F3FF}\u200D\u2642\uFE0F",
  "\u{1F9CF}\u{1F3FB}\u200D\u2640\uFE0F",
  "\u{1F9CF}\u{1F3FC}\u200D\u2640\uFE0F",
  "\u{1F9CF}\u{1F3FD}\u200D\u2640\uFE0F",
  "\u{1F9CF}\u{1F3FE}\u200D\u2640\uFE0F",
  "\u{1F9CF}\u{1F3FF}\u200D\u2640\uFE0F",
  "\u{1F9CF}\u{1F3FB}\u200D\u2642\uFE0F",
  "\u{1F9CF}\u{1F3FC}\u200D\u2642\uFE0F",
  "\u{1F9CF}\u{1F3FD}\u200D\u2642\uFE0F",
  "\u{1F9CF}\u{1F3FE}\u200D\u2642\uFE0F",
  "\u{1F9CF}\u{1F3FF}\u200D\u2642\uFE0F",
  "\u{1F926}\u{1F3FB}\u200D\u2640\uFE0F",
  "\u{1F926}\u{1F3FC}\u200D\u2640\uFE0F",
  "\u{1F926}\u{1F3FD}\u200D\u2640\uFE0F",
  "\u{1F926}\u{1F3FE}\u200D\u2640\uFE0F",
  "\u{1F926}\u{1F3FF}\u200D\u2640\uFE0F",
  "\u{1F926}\u{1F3FB}\u200D\u2642\uFE0F",
  "\u{1F926}\u{1F3FC}\u200D\u2642\uFE0F",
  "\u{1F926}\u{1F3FD}\u200D\u2642\uFE0F",
  "\u{1F926}\u{1F3FE}\u200D\u2642\uFE0F",
  "\u{1F926}\u{1F3FF}\u200D\u2642\uFE0F",
  "\u{1F937}\u{1F3FB}\u200D\u2640\uFE0F",
  "\u{1F937}\u{1F3FC}\u200D\u2640\uFE0F",
  "\u{1F937}\u{1F3FD}\u200D\u2640\uFE0F",
  "\u{1F937}\u{1F3FE}\u200D\u2640\uFE0F",
  "\u{1F937}\u{1F3FF}\u200D\u2640\uFE0F",
  "\u{1F937}\u{1F3FB}\u200D\u2642\uFE0F",
  "\u{1F937}\u{1F3FC}\u200D\u2642\uFE0F",
  "\u{1F937}\u{1F3FD}\u200D\u2642\uFE0F",
  "\u{1F937}\u{1F3FE}\u200D\u2642\uFE0F",
  "\u{1F937}\u{1F3FF}\u200D\u2642\uFE0F",
  "\u{1F64E}\u{1F3FB}\u200D\u2640\uFE0F",
  "\u{1F64E}\u{1F3FC}\u200D\u2640\uFE0F",
  "\u{1F64E}\u{1F3FD}\u200D\u2640\uFE0F",
  "\u{1F64E}\u{1F3FE}\u200D\u2640\uFE0F",
  "\u{1F64E}\u{1F3FF}\u200D\u2640\uFE0F",
  "\u{1F64E}\u{1F3FB}\u200D\u2642\uFE0F",
  "\u{1F64E}\u{1F3FC}\u200D\u2642\uFE0F",
  "\u{1F64E}\u{1F3FD}\u200D\u2642\uFE0F",
  "\u{1F64E}\u{1F3FE}\u200D\u2642\uFE0F",
  "\u{1F64E}\u{1F3FF}\u200D\u2642\uFE0F",
  "\u{1F64D}\u{1F3FB}\u200D\u2640\uFE0F",
  "\u{1F64D}\u{1F3FC}\u200D\u2640\uFE0F",
  "\u{1F64D}\u{1F3FD}\u200D\u2640\uFE0F",
  "\u{1F64D}\u{1F3FE}\u200D\u2640\uFE0F",
  "\u{1F64D}\u{1F3FF}\u200D\u2640\uFE0F",
  "\u{1F64D}\u{1F3FB}\u200D\u2642\uFE0F",
  "\u{1F64D}\u{1F3FC}\u200D\u2642\uFE0F",
  "\u{1F64D}\u{1F3FD}\u200D\u2642\uFE0F",
  "\u{1F64D}\u{1F3FE}\u200D\u2642\uFE0F",
  "\u{1F64D}\u{1F3FF}\u200D\u2642\uFE0F",
  "\u{1F487}\u{1F3FB}\u200D\u2640\uFE0F",
  "\u{1F487}\u{1F3FC}\u200D\u2640\uFE0F",
  "\u{1F487}\u{1F3FD}\u200D\u2640\uFE0F",
  "\u{1F487}\u{1F3FE}\u200D\u2640\uFE0F",
  "\u{1F487}\u{1F3FF}\u200D\u2640\uFE0F",
  "\u{1F487}\u{1F3FB}\u200D\u2642\uFE0F",
  "\u{1F487}\u{1F3FC}\u200D\u2642\uFE0F",
  "\u{1F487}\u{1F3FD}\u200D\u2642\uFE0F",
  "\u{1F487}\u{1F3FE}\u200D\u2642\uFE0F",
  "\u{1F487}\u{1F3FF}\u200D\u2642\uFE0F",
  "\u{1F486}\u{1F3FB}\u200D\u2640\uFE0F",
  "\u{1F486}\u{1F3FC}\u200D\u2640\uFE0F",
  "\u{1F486}\u{1F3FD}\u200D\u2640\uFE0F",
  "\u{1F486}\u{1F3FE}\u200D\u2640\uFE0F",
  "\u{1F486}\u{1F3FF}\u200D\u2640\uFE0F",
  "\u{1F486}\u{1F3FB}\u200D\u2642\uFE0F",
  "\u{1F486}\u{1F3FC}\u200D\u2642\uFE0F",
  "\u{1F486}\u{1F3FD}\u200D\u2642\uFE0F",
  "\u{1F486}\u{1F3FE}\u200D\u2642\uFE0F",
  "\u{1F486}\u{1F3FF}\u200D\u2642\uFE0F",
  "\u{1F9D6}\u{1F3FB}\u200D\u2640\uFE0F",
  "\u{1F9D6}\u{1F3FC}\u200D\u2640\uFE0F",
  "\u{1F9D6}\u{1F3FD}\u200D\u2640\uFE0F",
  "\u{1F9D6}\u{1F3FE}\u200D\u2640\uFE0F",
  "\u{1F9D6}\u{1F3FF}\u200D\u2640\uFE0F",
  "\u{1F9D6}\u{1F3FB}\u200D\u2642\uFE0F",
  "\u{1F9D6}\u{1F3FC}\u200D\u2642\uFE0F",
  "\u{1F9D6}\u{1F3FD}\u200D\u2642\uFE0F",
  "\u{1F9D6}\u{1F3FE}\u200D\u2642\uFE0F",
  "\u{1F9D6}\u{1F3FF}\u200D\u2642\uFE0F",
  "\u{1F9D1}\u{1F3FB}\u200D\u{1F9BD}",
  "\u{1F9D1}\u{1F3FC}\u200D\u{1F9BD}",
  "\u{1F9D1}\u{1F3FD}\u200D\u{1F9BD}",
  "\u{1F9D1}\u{1F3FE}\u200D\u{1F9BD}",
  "\u{1F9D1}\u{1F3FF}\u200D\u{1F9BD}",
  "\u{1F469}\u{1F3FB}\u200D\u{1F9BD}",
  "\u{1F469}\u{1F3FC}\u200D\u{1F9BD}",
  "\u{1F469}\u{1F3FD}\u200D\u{1F9BD}",
  "\u{1F469}\u{1F3FE}\u200D\u{1F9BD}",
  "\u{1F469}\u{1F3FF}\u200D\u{1F9BD}",
  "\u{1F468}\u{1F3FB}\u200D\u{1F9BD}",
  "\u{1F468}\u{1F3FC}\u200D\u{1F9BD}",
  "\u{1F468}\u{1F3FD}\u200D\u{1F9BD}",
  "\u{1F468}\u{1F3FE}\u200D\u{1F9BD}",
  "\u{1F468}\u{1F3FF}\u200D\u{1F9BD}",
  "\u{1F9D1}\u{1F3FB}\u200D\u{1F9BC}",
  "\u{1F9D1}\u{1F3FC}\u200D\u{1F9BC}",
  "\u{1F9D1}\u{1F3FD}\u200D\u{1F9BC}",
  "\u{1F9D1}\u{1F3FE}\u200D\u{1F9BC}",
  "\u{1F9D1}\u{1F3FF}\u200D\u{1F9BC}",
  "\u{1F469}\u{1F3FB}\u200D\u{1F9BC}",
  "\u{1F469}\u{1F3FC}\u200D\u{1F9BC}",
  "\u{1F469}\u{1F3FD}\u200D\u{1F9BC}",
  "\u{1F469}\u{1F3FE}\u200D\u{1F9BC}",
  "\u{1F469}\u{1F3FF}\u200D\u{1F9BC}",
  "\u{1F468}\u{1F3FB}\u200D\u{1F9BC}",
  "\u{1F468}\u{1F3FC}\u200D\u{1F9BC}",
  "\u{1F468}\u{1F3FD}\u200D\u{1F9BC}",
  "\u{1F468}\u{1F3FE}\u200D\u{1F9BC}",
  "\u{1F468}\u{1F3FF}\u200D\u{1F9BC}",
  "\u{1F6B6}\u{1F3FB}\u200D\u2640\uFE0F",
  "\u{1F6B6}\u{1F3FC}\u200D\u2640\uFE0F",
  "\u{1F6B6}\u{1F3FD}\u200D\u2640\uFE0F",
  "\u{1F6B6}\u{1F3FE}\u200D\u2640\uFE0F",
  "\u{1F6B6}\u{1F3FF}\u200D\u2640\uFE0F",
  "\u{1F6B6}\u{1F3FB}\u200D\u2642\uFE0F",
  "\u{1F6B6}\u{1F3FC}\u200D\u2642\uFE0F",
  "\u{1F6B6}\u{1F3FD}\u200D\u2642\uFE0F",
  "\u{1F6B6}\u{1F3FE}\u200D\u2642\uFE0F",
  "\u{1F6B6}\u{1F3FF}\u200D\u2642\uFE0F",
  "\u{1F9D1}\u{1F3FB}\u200D\u{1F9AF}",
  "\u{1F9D1}\u{1F3FC}\u200D\u{1F9AF}",
  "\u{1F9D1}\u{1F3FD}\u200D\u{1F9AF}",
  "\u{1F9D1}\u{1F3FE}\u200D\u{1F9AF}",
  "\u{1F9D1}\u{1F3FF}\u200D\u{1F9AF}",
  "\u{1F469}\u{1F3FB}\u200D\u{1F9AF}",
  "\u{1F469}\u{1F3FC}\u200D\u{1F9AF}",
  "\u{1F469}\u{1F3FD}\u200D\u{1F9AF}",
  "\u{1F469}\u{1F3FE}\u200D\u{1F9AF}",
  "\u{1F469}\u{1F3FF}\u200D\u{1F9AF}",
  "\u{1F468}\u{1F3FB}\u200D\u{1F9AF}",
  "\u{1F468}\u{1F3FC}\u200D\u{1F9AF}",
  "\u{1F468}\u{1F3FD}\u200D\u{1F9AF}",
  "\u{1F468}\u{1F3FE}\u200D\u{1F9AF}",
  "\u{1F468}\u{1F3FF}\u200D\u{1F9AF}",
  "\u{1F9CE}\u{1F3FB}\u200D\u2640\uFE0F",
  "\u{1F9CE}\u{1F3FC}\u200D\u2640\uFE0F",
  "\u{1F9CE}\u{1F3FD}\u200D\u2640\uFE0F",
  "\u{1F9CE}\u{1F3FE}\u200D\u2640\uFE0F",
  "\u{1F9CE}\u{1F3FF}\u200D\u2640\uFE0F",
  "\u{1F9CE}\u{1F3FB}\u200D\u2642\uFE0F",
  "\u{1F9CE}\u{1F3FC}\u200D\u2642\uFE0F",
  "\u{1F9CE}\u{1F3FD}\u200D\u2642\uFE0F",
  "\u{1F9CE}\u{1F3FE}\u200D\u2642\uFE0F",
  "\u{1F9CE}\u{1F3FF}\u200D\u2642\uFE0F",
  "\u{1F3C3}\u{1F3FB}\u200D\u2640\uFE0F",
  "\u{1F3C3}\u{1F3FC}\u200D\u2640\uFE0F",
  "\u{1F3C3}\u{1F3FD}\u200D\u2640\uFE0F",
  "\u{1F3C3}\u{1F3FE}\u200D\u2640\uFE0F",
  "\u{1F3C3}\u{1F3FF}\u200D\u2640\uFE0F",
  "\u{1F3C3}\u{1F3FB}\u200D\u2642\uFE0F",
  "\u{1F3C3}\u{1F3FC}\u200D\u2642\uFE0F",
  "\u{1F3C3}\u{1F3FD}\u200D\u2642\uFE0F",
  "\u{1F3C3}\u{1F3FE}\u200D\u2642\uFE0F",
  "\u{1F3C3}\u{1F3FF}\u200D\u2642\uFE0F",
  "\u{1F9CD}\u{1F3FB}\u200D\u2640\uFE0F",
  "\u{1F9CD}\u{1F3FC}\u200D\u2640\uFE0F",
  "\u{1F9CD}\u{1F3FD}\u200D\u2640\uFE0F",
  "\u{1F9CD}\u{1F3FE}\u200D\u2640\uFE0F",
  "\u{1F9CD}\u{1F3FF}\u200D\u2640\uFE0F",
  "\u{1F9CD}\u{1F3FB}\u200D\u2642\uFE0F",
  "\u{1F9CD}\u{1F3FC}\u200D\u2642\uFE0F",
  "\u{1F9CD}\u{1F3FD}\u200D\u2642\uFE0F",
  "\u{1F9CD}\u{1F3FE}\u200D\u2642\uFE0F",
  "\u{1F9CD}\u{1F3FF}\u200D\u2642\uFE0F",
  "\u{1F3CB}\u{1F3FB}\u200D\u2640\uFE0F",
  "\u{1F3CB}\u{1F3FC}\u200D\u2640\uFE0F",
  "\u{1F3CB}\u{1F3FD}\u200D\u2640\uFE0F",
  "\u{1F3CB}\u{1F3FE}\u200D\u2640\uFE0F",
  "\u{1F3CB}\u{1F3FF}\u200D\u2640\uFE0F",
  "\u{1F3CB}\u{1F3FB}\u200D\u2642\uFE0F",
  "\u{1F3CB}\u{1F3FC}\u200D\u2642\uFE0F",
  "\u{1F3CB}\u{1F3FD}\u200D\u2642\uFE0F",
  "\u{1F3CB}\u{1F3FE}\u200D\u2642\uFE0F",
  "\u{1F3CB}\u{1F3FF}\u200D\u2642\uFE0F",
  "\u{1F938}\u{1F3FB}\u200D\u2640\uFE0F",
  "\u{1F938}\u{1F3FC}\u200D\u2640\uFE0F",
  "\u{1F938}\u{1F3FD}\u200D\u2640\uFE0F",
  "\u{1F938}\u{1F3FE}\u200D\u2640\uFE0F",
  "\u{1F938}\u{1F3FF}\u200D\u2640\uFE0F",
  "\u{1F938}\u{1F3FB}\u200D\u2642\uFE0F",
  "\u{1F938}\u{1F3FC}\u200D\u2642\uFE0F",
  "\u{1F938}\u{1F3FD}\u200D\u2642\uFE0F",
  "\u{1F938}\u{1F3FE}\u200D\u2642\uFE0F",
  "\u{1F938}\u{1F3FF}\u200D\u2642\uFE0F",
  "\u{1F93E}\u{1F3FB}\u200D\u2640\uFE0F",
  "\u{1F93E}\u{1F3FC}\u200D\u2640\uFE0F",
  "\u{1F93E}\u{1F3FD}\u200D\u2640\uFE0F",
  "\u{1F93E}\u{1F3FE}\u200D\u2640\uFE0F",
  "\u{1F93E}\u{1F3FF}\u200D\u2640\uFE0F",
  "\u{1F93E}\u{1F3FB}\u200D\u2642\uFE0F",
  "\u{1F93E}\u{1F3FC}\u200D\u2642\uFE0F",
  "\u{1F93E}\u{1F3FD}\u200D\u2642\uFE0F",
  "\u{1F93E}\u{1F3FE}\u200D\u2642\uFE0F",
  "\u{1F93E}\u{1F3FF}\u200D\u2642\uFE0F",
  "\u{1F3CC}\u{1F3FB}\u200D\u2640\uFE0F",
  "\u{1F3CC}\u{1F3FC}\u200D\u2640\uFE0F",
  "\u{1F3CC}\u{1F3FD}\u200D\u2640\uFE0F",
  "\u{1F3CC}\u{1F3FE}\u200D\u2640\uFE0F",
  "\u{1F3CC}\u{1F3FF}\u200D\u2640\uFE0F",
  "\u{1F3CC}\u{1F3FB}\u200D\u2642\uFE0F",
  "\u{1F3CC}\u{1F3FC}\u200D\u2642\uFE0F",
  "\u{1F3CC}\u{1F3FD}\u200D\u2642\uFE0F",
  "\u{1F3CC}\u{1F3FE}\u200D\u2642\uFE0F",
  "\u{1F3CC}\u{1F3FF}\u200D\u2642\uFE0F",
  "\u{1F9D8}\u{1F3FB}\u200D\u2640\uFE0F",
  "\u{1F9D8}\u{1F3FC}\u200D\u2640\uFE0F",
  "\u{1F9D8}\u{1F3FD}\u200D\u2640\uFE0F",
  "\u{1F9D8}\u{1F3FE}\u200D\u2640\uFE0F",
  "\u{1F9D8}\u{1F3FF}\u200D\u2640\uFE0F",
  "\u{1F9D8}\u{1F3FB}\u200D\u2642\uFE0F",
  "\u{1F9D8}\u{1F3FC}\u200D\u2642\uFE0F",
  "\u{1F9D8}\u{1F3FD}\u200D\u2642\uFE0F",
  "\u{1F9D8}\u{1F3FE}\u200D\u2642\uFE0F",
  "\u{1F9D8}\u{1F3FF}\u200D\u2642\uFE0F",
  "\u{1F3C4}\u{1F3FB}\u200D\u2640\uFE0F",
  "\u{1F3C4}\u{1F3FC}\u200D\u2640\uFE0F",
  "\u{1F3C4}\u{1F3FD}\u200D\u2640\uFE0F",
  "\u{1F3C4}\u{1F3FE}\u200D\u2640\uFE0F",
  "\u{1F3C4}\u{1F3FF}\u200D\u2640\uFE0F",
  "\u{1F3C4}\u{1F3FB}\u200D\u2642\uFE0F",
  "\u{1F3C4}\u{1F3FC}\u200D\u2642\uFE0F",
  "\u{1F3C4}\u{1F3FD}\u200D\u2642\uFE0F",
  "\u{1F3C4}\u{1F3FE}\u200D\u2642\uFE0F",
  "\u{1F3C4}\u{1F3FF}\u200D\u2642\uFE0F",
  "\u{1F3CA}\u{1F3FB}\u200D\u2640\uFE0F",
  "\u{1F3CA}\u{1F3FC}\u200D\u2640\uFE0F",
  "\u{1F3CA}\u{1F3FD}\u200D\u2640\uFE0F",
  "\u{1F3CA}\u{1F3FE}\u200D\u2640\uFE0F",
  "\u{1F3CA}\u{1F3FF}\u200D\u2640\uFE0F",
  "\u{1F3CA}\u{1F3FB}\u200D\u2642\uFE0F",
  "\u{1F3CA}\u{1F3FC}\u200D\u2642\uFE0F",
  "\u{1F3CA}\u{1F3FD}\u200D\u2642\uFE0F",
  "\u{1F3CA}\u{1F3FE}\u200D\u2642\uFE0F",
  "\u{1F3CA}\u{1F3FF}\u200D\u2642\uFE0F",
  "\u{1F93D}\u{1F3FB}\u200D\u2640\uFE0F",
  "\u{1F93D}\u{1F3FC}\u200D\u2640\uFE0F",
  "\u{1F93D}\u{1F3FD}\u200D\u2640\uFE0F",
  "\u{1F93D}\u{1F3FE}\u200D\u2640\uFE0F",
  "\u{1F93D}\u{1F3FF}\u200D\u2640\uFE0F",
  "\u{1F93D}\u{1F3FB}\u200D\u2642\uFE0F",
  "\u{1F93D}\u{1F3FC}\u200D\u2642\uFE0F",
  "\u{1F93D}\u{1F3FD}\u200D\u2642\uFE0F",
  "\u{1F93D}\u{1F3FE}\u200D\u2642\uFE0F",
  "\u{1F93D}\u{1F3FF}\u200D\u2642\uFE0F",
  "\u{1F6A3}\u{1F3FB}\u200D\u2640\uFE0F",
  "\u{1F6A3}\u{1F3FC}\u200D\u2640\uFE0F",
  "\u{1F6A3}\u{1F3FD}\u200D\u2640\uFE0F",
  "\u{1F6A3}\u{1F3FE}\u200D\u2640\uFE0F",
  "\u{1F6A3}\u{1F3FF}\u200D\u2640\uFE0F",
  "\u{1F6A3}\u{1F3FB}\u200D\u2642\uFE0F",
  "\u{1F6A3}\u{1F3FC}\u200D\u2642\uFE0F",
  "\u{1F6A3}\u{1F3FD}\u200D\u2642\uFE0F",
  "\u{1F6A3}\u{1F3FE}\u200D\u2642\uFE0F",
  "\u{1F6A3}\u{1F3FF}\u200D\u2642\uFE0F",
  "\u{1F9D7}\u{1F3FB}\u200D\u2640\uFE0F",
  "\u{1F9D7}\u{1F3FC}\u200D\u2640\uFE0F",
  "\u{1F9D7}\u{1F3FD}\u200D\u2640\uFE0F",
  "\u{1F9D7}\u{1F3FE}\u200D\u2640\uFE0F",
  "\u{1F9D7}\u{1F3FF}\u200D\u2640\uFE0F",
  "\u{1F9D7}\u{1F3FB}\u200D\u2642\uFE0F",
  "\u{1F9D7}\u{1F3FC}\u200D\u2642\uFE0F",
  "\u{1F9D7}\u{1F3FD}\u200D\u2642\uFE0F",
  "\u{1F9D7}\u{1F3FE}\u200D\u2642\uFE0F",
  "\u{1F9D7}\u{1F3FF}\u200D\u2642\uFE0F",
  "\u{1F6B5}\u{1F3FB}\u200D\u2640\uFE0F",
  "\u{1F6B5}\u{1F3FC}\u200D\u2640\uFE0F",
  "\u{1F6B5}\u{1F3FD}\u200D\u2640\uFE0F",
  "\u{1F6B5}\u{1F3FE}\u200D\u2640\uFE0F",
  "\u{1F6B5}\u{1F3FF}\u200D\u2640\uFE0F",
  "\u{1F6B5}\u{1F3FB}\u200D\u2642\uFE0F",
  "\u{1F6B5}\u{1F3FC}\u200D\u2642\uFE0F",
  "\u{1F6B5}\u{1F3FD}\u200D\u2642\uFE0F",
  "\u{1F6B5}\u{1F3FE}\u200D\u2642\uFE0F",
  "\u{1F6B5}\u{1F3FF}\u200D\u2642\uFE0F",
  "\u{1F6B4}\u{1F3FB}\u200D\u2640\uFE0F",
  "\u{1F6B4}\u{1F3FC}\u200D\u2640\uFE0F",
  "\u{1F6B4}\u{1F3FD}\u200D\u2640\uFE0F",
  "\u{1F6B4}\u{1F3FE}\u200D\u2640\uFE0F",
  "\u{1F6B4}\u{1F3FF}\u200D\u2640\uFE0F",
  "\u{1F6B4}\u{1F3FB}\u200D\u2642\uFE0F",
  "\u{1F6B4}\u{1F3FC}\u200D\u2642\uFE0F",
  "\u{1F6B4}\u{1F3FD}\u200D\u2642\uFE0F",
  "\u{1F6B4}\u{1F3FE}\u200D\u2642\uFE0F",
  "\u{1F6B4}\u{1F3FF}\u200D\u2642\uFE0F",
  "\u{1F939}\u{1F3FB}\u200D\u2640\uFE0F",
  "\u{1F939}\u{1F3FC}\u200D\u2640\uFE0F",
  "\u{1F939}\u{1F3FD}\u200D\u2640\uFE0F",
  "\u{1F939}\u{1F3FE}\u200D\u2640\uFE0F",
  "\u{1F939}\u{1F3FF}\u200D\u2640\uFE0F",
  "\u{1F939}\u{1F3FB}\u200D\u2642\uFE0F",
  "\u{1F939}\u{1F3FC}\u200D\u2642\uFE0F",
  "\u{1F939}\u{1F3FD}\u200D\u2642\uFE0F",
  "\u{1F939}\u{1F3FE}\u200D\u2642\uFE0F",
  "\u{1F939}\u{1F3FF}\u200D\u2642\uFE0F",
  "\u{1F636}\u200D\u{1F32B}\uFE0F",
  "\u{1F575}\uFE0F\u200D\u2640\uFE0F",
  "\u{1F575}\uFE0F\u200D\u2642\uFE0F",
  "\u{1F3CB}\uFE0F\u200D\u2640\uFE0F",
  "\u{1F3CB}\uFE0F\u200D\u2642\uFE0F",
  "\u26F9\u{1F3FB}\u200D\u2640\uFE0F",
  "\u26F9\u{1F3FC}\u200D\u2640\uFE0F",
  "\u26F9\u{1F3FD}\u200D\u2640\uFE0F",
  "\u26F9\u{1F3FE}\u200D\u2640\uFE0F",
  "\u26F9\u{1F3FF}\u200D\u2640\uFE0F",
  "\u26F9\u{1F3FB}\u200D\u2642\uFE0F",
  "\u26F9\u{1F3FC}\u200D\u2642\uFE0F",
  "\u26F9\u{1F3FD}\u200D\u2642\uFE0F",
  "\u26F9\u{1F3FE}\u200D\u2642\uFE0F",
  "\u26F9\u{1F3FF}\u200D\u2642\uFE0F",
  "\u{1F3CC}\uFE0F\u200D\u2640\uFE0F",
  "\u{1F3CC}\uFE0F\u200D\u2642\uFE0F",
  "\u{1F3F3}\uFE0F\u200D\u{1F308}",
  "\u{1F3F3}\uFE0F\u200D\u26A7\uFE0F",
  "\u{1F62E}\u200D\u{1F4A8}",
  "\u{1F635}\u200D\u{1F4AB}",
  "\u{1F9D1}\u200D\u{1F9B1}",
  "\u{1F469}\u200D\u{1F9B1}",
  "\u{1F468}\u200D\u{1F9B1}",
  "\u{1F9D1}\u200D\u{1F9B0}",
  "\u{1F469}\u200D\u{1F9B0}",
  "\u{1F468}\u200D\u{1F9B0}",
  "\u{1F471}\u200D\u2640\uFE0F",
  "\u{1F471}\u200D\u2642\uFE0F",
  "\u{1F9D1}\u200D\u{1F9B3}",
  "\u{1F469}\u200D\u{1F9B3}",
  "\u{1F468}\u200D\u{1F9B3}",
  "\u{1F9D1}\u200D\u{1F9B2}",
  "\u{1F469}\u200D\u{1F9B2}",
  "\u{1F468}\u200D\u{1F9B2}",
  "\u{1F9D4}\u200D\u2640\uFE0F",
  "\u{1F9D4}\u200D\u2642\uFE0F",
  "\u{1F473}\u200D\u2640\uFE0F",
  "\u{1F473}\u200D\u2642\uFE0F",
  "\u{1F46E}\u200D\u2640\uFE0F",
  "\u{1F46E}\u200D\u2642\uFE0F",
  "\u{1F477}\u200D\u2640\uFE0F",
  "\u{1F477}\u200D\u2642\uFE0F",
  "\u{1F482}\u200D\u2640\uFE0F",
  "\u{1F482}\u200D\u2642\uFE0F",
  "\u{1F9D1}\u200D\u2695\uFE0F",
  "\u{1F469}\u200D\u2695\uFE0F",
  "\u{1F468}\u200D\u2695\uFE0F",
  "\u{1F9D1}\u200D\u{1F33E}",
  "\u{1F469}\u200D\u{1F33E}",
  "\u{1F468}\u200D\u{1F33E}",
  "\u{1F9D1}\u200D\u{1F373}",
  "\u{1F469}\u200D\u{1F373}",
  "\u{1F468}\u200D\u{1F373}",
  "\u{1F9D1}\u200D\u{1F393}",
  "\u{1F469}\u200D\u{1F393}",
  "\u{1F468}\u200D\u{1F393}",
  "\u{1F9D1}\u200D\u{1F3A4}",
  "\u{1F469}\u200D\u{1F3A4}",
  "\u{1F468}\u200D\u{1F3A4}",
  "\u{1F9D1}\u200D\u{1F3EB}",
  "\u{1F469}\u200D\u{1F3EB}",
  "\u{1F468}\u200D\u{1F3EB}",
  "\u{1F9D1}\u200D\u{1F3ED}",
  "\u{1F469}\u200D\u{1F3ED}",
  "\u{1F468}\u200D\u{1F3ED}",
  "\u{1F9D1}\u200D\u{1F4BB}",
  "\u{1F469}\u200D\u{1F4BB}",
  "\u{1F468}\u200D\u{1F4BB}",
  "\u{1F9D1}\u200D\u{1F4BC}",
  "\u{1F469}\u200D\u{1F4BC}",
  "\u{1F468}\u200D\u{1F4BC}",
  "\u{1F9D1}\u200D\u{1F527}",
  "\u{1F469}\u200D\u{1F527}",
  "\u{1F468}\u200D\u{1F527}",
  "\u{1F9D1}\u200D\u{1F52C}",
  "\u{1F469}\u200D\u{1F52C}",
  "\u{1F468}\u200D\u{1F52C}",
  "\u{1F9D1}\u200D\u{1F3A8}",
  "\u{1F469}\u200D\u{1F3A8}",
  "\u{1F468}\u200D\u{1F3A8}",
  "\u{1F9D1}\u200D\u{1F692}",
  "\u{1F469}\u200D\u{1F692}",
  "\u{1F468}\u200D\u{1F692}",
  "\u{1F9D1}\u200D\u2708\uFE0F",
  "\u{1F469}\u200D\u2708\uFE0F",
  "\u{1F468}\u200D\u2708\uFE0F",
  "\u{1F9D1}\u200D\u{1F680}",
  "\u{1F469}\u200D\u{1F680}",
  "\u{1F468}\u200D\u{1F680}",
  "\u{1F9D1}\u200D\u2696\uFE0F",
  "\u{1F469}\u200D\u2696\uFE0F",
  "\u{1F468}\u200D\u2696\uFE0F",
  "\u{1F470}\u200D\u2640\uFE0F",
  "\u{1F470}\u200D\u2642\uFE0F",
  "\u{1F935}\u200D\u2640\uFE0F",
  "\u{1F935}\u200D\u2642\uFE0F",
  "\u{1F9B8}\u200D\u2640\uFE0F",
  "\u{1F9B8}\u200D\u2642\uFE0F",
  "\u{1F9B9}\u200D\u2640\uFE0F",
  "\u{1F9B9}\u200D\u2642\uFE0F",
  "\u{1F9D1}\u200D\u{1F384}",
  "\u{1F9D9}\u200D\u2640\uFE0F",
  "\u{1F9D9}\u200D\u2642\uFE0F",
  "\u{1F9DD}\u200D\u2640\uFE0F",
  "\u{1F9DD}\u200D\u2642\uFE0F",
  "\u{1F9DB}\u200D\u2640\uFE0F",
  "\u{1F9DB}\u200D\u2642\uFE0F",
  "\u{1F9DF}\u200D\u2640\uFE0F",
  "\u{1F9DF}\u200D\u2642\uFE0F",
  "\u{1F9DE}\u200D\u2640\uFE0F",
  "\u{1F9DE}\u200D\u2642\uFE0F",
  "\u{1F9DC}\u200D\u2640\uFE0F",
  "\u{1F9DC}\u200D\u2642\uFE0F",
  "\u{1F9DA}\u200D\u2640\uFE0F",
  "\u{1F9DA}\u200D\u2642\uFE0F",
  "\u{1F9D1}\u200D\u{1F37C}",
  "\u{1F469}\u200D\u{1F37C}",
  "\u{1F468}\u200D\u{1F37C}",
  "\u{1F647}\u200D\u2640\uFE0F",
  "\u{1F647}\u200D\u2642\uFE0F",
  "\u{1F481}\u200D\u2640\uFE0F",
  "\u{1F481}\u200D\u2642\uFE0F",
  "\u{1F645}\u200D\u2640\uFE0F",
  "\u{1F645}\u200D\u2642\uFE0F",
  "\u{1F646}\u200D\u2640\uFE0F",
  "\u{1F646}\u200D\u2642\uFE0F",
  "\u{1F64B}\u200D\u2640\uFE0F",
  "\u{1F64B}\u200D\u2642\uFE0F",
  "\u{1F9CF}\u200D\u2640\uFE0F",
  "\u{1F9CF}\u200D\u2642\uFE0F",
  "\u{1F926}\u200D\u2640\uFE0F",
  "\u{1F926}\u200D\u2642\uFE0F",
  "\u{1F937}\u200D\u2640\uFE0F",
  "\u{1F937}\u200D\u2642\uFE0F",
  "\u{1F64E}\u200D\u2640\uFE0F",
  "\u{1F64E}\u200D\u2642\uFE0F",
  "\u{1F64D}\u200D\u2640\uFE0F",
  "\u{1F64D}\u200D\u2642\uFE0F",
  "\u{1F487}\u200D\u2640\uFE0F",
  "\u{1F487}\u200D\u2642\uFE0F",
  "\u{1F486}\u200D\u2640\uFE0F",
  "\u{1F486}\u200D\u2642\uFE0F",
  "\u{1F9D6}\u200D\u2640\uFE0F",
  "\u{1F9D6}\u200D\u2642\uFE0F",
  "\u{1F46F}\u200D\u2640\uFE0F",
  "\u{1F46F}\u200D\u2642\uFE0F",
  "\u{1F9D1}\u200D\u{1F9BD}",
  "\u{1F469}\u200D\u{1F9BD}",
  "\u{1F468}\u200D\u{1F9BD}",
  "\u{1F9D1}\u200D\u{1F9BC}",
  "\u{1F469}\u200D\u{1F9BC}",
  "\u{1F468}\u200D\u{1F9BC}",
  "\u{1F6B6}\u200D\u2640\uFE0F",
  "\u{1F6B6}\u200D\u2642\uFE0F",
  "\u{1F9D1}\u200D\u{1F9AF}",
  "\u{1F469}\u200D\u{1F9AF}",
  "\u{1F468}\u200D\u{1F9AF}",
  "\u{1F9CE}\u200D\u2640\uFE0F",
  "\u{1F9CE}\u200D\u2642\uFE0F",
  "\u{1F3C3}\u200D\u2640\uFE0F",
  "\u{1F3C3}\u200D\u2642\uFE0F",
  "\u{1F9CD}\u200D\u2640\uFE0F",
  "\u{1F9CD}\u200D\u2642\uFE0F",
  "\u{1F469}\u200D\u{1F466}",
  "\u{1F469}\u200D\u{1F467}",
  "\u{1F468}\u200D\u{1F466}",
  "\u{1F468}\u200D\u{1F467}",
  "\u{1F43B}\u200D\u2744\uFE0F",
  "\u{1F415}\u200D\u{1F9BA}",
  "\u{1F93C}\u200D\u2640\uFE0F",
  "\u{1F93C}\u200D\u2642\uFE0F",
  "\u{1F938}\u200D\u2640\uFE0F",
  "\u{1F938}\u200D\u2642\uFE0F",
  "\u26F9\uFE0F\u200D\u2640\uFE0F",
  "\u26F9\uFE0F\u200D\u2642\uFE0F",
  "\u{1F93E}\u200D\u2640\uFE0F",
  "\u{1F93E}\u200D\u2642\uFE0F",
  "\u{1F9D8}\u200D\u2640\uFE0F",
  "\u{1F9D8}\u200D\u2642\uFE0F",
  "\u{1F3C4}\u200D\u2640\uFE0F",
  "\u{1F3C4}\u200D\u2642\uFE0F",
  "\u{1F3CA}\u200D\u2640\uFE0F",
  "\u{1F3CA}\u200D\u2642\uFE0F",
  "\u{1F93D}\u200D\u2640\uFE0F",
  "\u{1F93D}\u200D\u2642\uFE0F",
  "\u{1F6A3}\u200D\u2640\uFE0F",
  "\u{1F6A3}\u200D\u2642\uFE0F",
  "\u{1F9D7}\u200D\u2640\uFE0F",
  "\u{1F9D7}\u200D\u2642\uFE0F",
  "\u{1F6B5}\u200D\u2640\uFE0F",
  "\u{1F6B5}\u200D\u2642\uFE0F",
  "\u{1F6B4}\u200D\u2640\uFE0F",
  "\u{1F6B4}\u200D\u2642\uFE0F",
  "\u{1F939}\u200D\u2640\uFE0F",
  "\u{1F939}\u200D\u2642\uFE0F",
  "\u2764\uFE0F\u200D\u{1FA79}",
  "\u2764\uFE0F\u200D\u{1F525}",
  "\u{1F441}\u200D\u{1F5E8}",
  "\u{1F3F4}\u200D\u2620\uFE0F",
  "\u{1F91D}\u{1F3FB}",
  "\u{1F91D}\u{1F3FC}",
  "\u{1F91D}\u{1F3FD}",
  "\u{1F91D}\u{1F3FE}",
  "\u{1F91D}\u{1F3FF}",
  "\u{1FAF6}\u{1F3FB}",
  "\u{1FAF6}\u{1F3FC}",
  "\u{1FAF6}\u{1F3FD}",
  "\u{1FAF6}\u{1F3FE}",
  "\u{1FAF6}\u{1F3FF}",
  "\u{1F932}\u{1F3FB}",
  "\u{1F932}\u{1F3FC}",
  "\u{1F932}\u{1F3FD}",
  "\u{1F932}\u{1F3FE}",
  "\u{1F932}\u{1F3FF}",
  "\u{1F450}\u{1F3FB}",
  "\u{1F450}\u{1F3FC}",
  "\u{1F450}\u{1F3FD}",
  "\u{1F450}\u{1F3FE}",
  "\u{1F450}\u{1F3FF}",
  "\u{1F64C}\u{1F3FB}",
  "\u{1F64C}\u{1F3FC}",
  "\u{1F64C}\u{1F3FD}",
  "\u{1F64C}\u{1F3FE}",
  "\u{1F64C}\u{1F3FF}",
  "\u{1F44F}\u{1F3FB}",
  "\u{1F44F}\u{1F3FC}",
  "\u{1F44F}\u{1F3FD}",
  "\u{1F44F}\u{1F3FE}",
  "\u{1F44F}\u{1F3FF}",
  "\u{1F44D}\u{1F3FB}",
  "\u{1F44D}\u{1F3FC}",
  "\u{1F44D}\u{1F3FD}",
  "\u{1F44D}\u{1F3FE}",
  "\u{1F44D}\u{1F3FF}",
  "\u{1F44E}\u{1F3FB}",
  "\u{1F44E}\u{1F3FC}",
  "\u{1F44E}\u{1F3FD}",
  "\u{1F44E}\u{1F3FE}",
  "\u{1F44E}\u{1F3FF}",
  "\u{1F44A}\u{1F3FB}",
  "\u{1F44A}\u{1F3FC}",
  "\u{1F44A}\u{1F3FD}",
  "\u{1F44A}\u{1F3FE}",
  "\u{1F44A}\u{1F3FF}",
  "\u{1F91B}\u{1F3FB}",
  "\u{1F91B}\u{1F3FC}",
  "\u{1F91B}\u{1F3FD}",
  "\u{1F91B}\u{1F3FE}",
  "\u{1F91B}\u{1F3FF}",
  "\u{1F91C}\u{1F3FB}",
  "\u{1F91C}\u{1F3FC}",
  "\u{1F91C}\u{1F3FD}",
  "\u{1F91C}\u{1F3FE}",
  "\u{1F91C}\u{1F3FF}",
  "\u{1FAF7}\u{1F3FB}",
  "\u{1FAF7}\u{1F3FC}",
  "\u{1FAF7}\u{1F3FD}",
  "\u{1FAF7}\u{1F3FE}",
  "\u{1FAF7}\u{1F3FF}",
  "\u{1FAF8}\u{1F3FB}",
  "\u{1FAF8}\u{1F3FC}",
  "\u{1FAF8}\u{1F3FD}",
  "\u{1FAF8}\u{1F3FE}",
  "\u{1FAF8}\u{1F3FF}",
  "\u{1F91E}\u{1F3FB}",
  "\u{1F91E}\u{1F3FC}",
  "\u{1F91E}\u{1F3FD}",
  "\u{1F91E}\u{1F3FE}",
  "\u{1F91E}\u{1F3FF}",
  "\u{1FAF0}\u{1F3FB}",
  "\u{1FAF0}\u{1F3FC}",
  "\u{1FAF0}\u{1F3FD}",
  "\u{1FAF0}\u{1F3FE}",
  "\u{1FAF0}\u{1F3FF}",
  "\u{1F91F}\u{1F3FB}",
  "\u{1F91F}\u{1F3FC}",
  "\u{1F91F}\u{1F3FD}",
  "\u{1F91F}\u{1F3FE}",
  "\u{1F91F}\u{1F3FF}",
  "\u{1F918}\u{1F3FB}",
  "\u{1F918}\u{1F3FC}",
  "\u{1F918}\u{1F3FD}",
  "\u{1F918}\u{1F3FE}",
  "\u{1F918}\u{1F3FF}",
  "\u{1F44C}\u{1F3FB}",
  "\u{1F44C}\u{1F3FC}",
  "\u{1F44C}\u{1F3FD}",
  "\u{1F44C}\u{1F3FE}",
  "\u{1F44C}\u{1F3FF}",
  "\u{1F90C}\u{1F3FC}",
  "\u{1F90C}\u{1F3FB}",
  "\u{1F90C}\u{1F3FD}",
  "\u{1F90C}\u{1F3FE}",
  "\u{1F90C}\u{1F3FF}",
  "\u{1F90F}\u{1F3FB}",
  "\u{1F90F}\u{1F3FC}",
  "\u{1F90F}\u{1F3FD}",
  "\u{1F90F}\u{1F3FE}",
  "\u{1F90F}\u{1F3FF}",
  "\u{1FAF3}\u{1F3FB}",
  "\u{1FAF3}\u{1F3FC}",
  "\u{1FAF3}\u{1F3FD}",
  "\u{1FAF3}\u{1F3FE}",
  "\u{1FAF3}\u{1F3FF}",
  "\u{1FAF4}\u{1F3FB}",
  "\u{1FAF4}\u{1F3FC}",
  "\u{1FAF4}\u{1F3FD}",
  "\u{1FAF4}\u{1F3FE}",
  "\u{1FAF4}\u{1F3FF}",
  "\u{1F448}\u{1F3FB}",
  "\u{1F448}\u{1F3FC}",
  "\u{1F448}\u{1F3FD}",
  "\u{1F448}\u{1F3FE}",
  "\u{1F448}\u{1F3FF}",
  "\u{1F449}\u{1F3FB}",
  "\u{1F449}\u{1F3FC}",
  "\u{1F449}\u{1F3FD}",
  "\u{1F449}\u{1F3FE}",
  "\u{1F449}\u{1F3FF}",
  "\u{1F446}\u{1F3FB}",
  "\u{1F446}\u{1F3FC}",
  "\u{1F446}\u{1F3FD}",
  "\u{1F446}\u{1F3FE}",
  "\u{1F446}\u{1F3FF}",
  "\u{1F447}\u{1F3FB}",
  "\u{1F447}\u{1F3FC}",
  "\u{1F447}\u{1F3FD}",
  "\u{1F447}\u{1F3FE}",
  "\u{1F447}\u{1F3FF}",
  "\u{1F91A}\u{1F3FB}",
  "\u{1F91A}\u{1F3FC}",
  "\u{1F91A}\u{1F3FD}",
  "\u{1F91A}\u{1F3FE}",
  "\u{1F91A}\u{1F3FF}",
  "\u{1F590}\u{1F3FB}",
  "\u{1F590}\u{1F3FC}",
  "\u{1F590}\u{1F3FD}",
  "\u{1F590}\u{1F3FE}",
  "\u{1F590}\u{1F3FF}",
  "\u{1F596}\u{1F3FB}",
  "\u{1F596}\u{1F3FC}",
  "\u{1F596}\u{1F3FD}",
  "\u{1F596}\u{1F3FE}",
  "\u{1F596}\u{1F3FF}",
  "\u{1F44B}\u{1F3FB}",
  "\u{1F44B}\u{1F3FC}",
  "\u{1F44B}\u{1F3FD}",
  "\u{1F44B}\u{1F3FE}",
  "\u{1F44B}\u{1F3FF}",
  "\u{1F919}\u{1F3FB}",
  "\u{1F919}\u{1F3FC}",
  "\u{1F919}\u{1F3FD}",
  "\u{1F919}\u{1F3FE}",
  "\u{1F919}\u{1F3FF}",
  "\u{1FAF2}\u{1F3FB}",
  "\u{1FAF2}\u{1F3FC}",
  "\u{1FAF2}\u{1F3FD}",
  "\u{1FAF2}\u{1F3FE}",
  "\u{1FAF2}\u{1F3FF}",
  "\u{1FAF1}\u{1F3FB}",
  "\u{1FAF1}\u{1F3FC}",
  "\u{1FAF1}\u{1F3FD}",
  "\u{1FAF1}\u{1F3FE}",
  "\u{1FAF1}\u{1F3FF}",
  "\u{1F4AA}\u{1F3FB}",
  "\u{1F4AA}\u{1F3FC}",
  "\u{1F4AA}\u{1F3FD}",
  "\u{1F4AA}\u{1F3FE}",
  "\u{1F4AA}\u{1F3FF}",
  "\u{1F595}\u{1F3FB}",
  "\u{1F595}\u{1F3FC}",
  "\u{1F595}\u{1F3FD}",
  "\u{1F595}\u{1F3FE}",
  "\u{1F595}\u{1F3FF}",
  "\u{1F64F}\u{1F3FB}",
  "\u{1F64F}\u{1F3FC}",
  "\u{1F64F}\u{1F3FD}",
  "\u{1F64F}\u{1F3FE}",
  "\u{1F64F}\u{1F3FF}",
  "\u{1FAF5}\u{1F3FB}",
  "\u{1FAF5}\u{1F3FC}",
  "\u{1FAF5}\u{1F3FD}",
  "\u{1FAF5}\u{1F3FE}",
  "\u{1FAF5}\u{1F3FF}",
  "\u{1F9B6}\u{1F3FB}",
  "\u{1F9B6}\u{1F3FC}",
  "\u{1F9B6}\u{1F3FD}",
  "\u{1F9B6}\u{1F3FE}",
  "\u{1F9B6}\u{1F3FF}",
  "\u{1F9B5}\u{1F3FB}",
  "\u{1F9B5}\u{1F3FC}",
  "\u{1F9B5}\u{1F3FD}",
  "\u{1F9B5}\u{1F3FE}",
  "\u{1F9B5}\u{1F3FF}",
  "\u{1F442}\u{1F3FB}",
  "\u{1F442}\u{1F3FC}",
  "\u{1F442}\u{1F3FD}",
  "\u{1F442}\u{1F3FE}",
  "\u{1F442}\u{1F3FF}",
  "\u{1F9BB}\u{1F3FB}",
  "\u{1F9BB}\u{1F3FC}",
  "\u{1F9BB}\u{1F3FD}",
  "\u{1F9BB}\u{1F3FE}",
  "\u{1F9BB}\u{1F3FF}",
  "\u{1F443}\u{1F3FB}",
  "\u{1F443}\u{1F3FC}",
  "\u{1F443}\u{1F3FD}",
  "\u{1F443}\u{1F3FE}",
  "\u{1F443}\u{1F3FF}",
  "\u{1F476}\u{1F3FB}",
  "\u{1F476}\u{1F3FC}",
  "\u{1F476}\u{1F3FD}",
  "\u{1F476}\u{1F3FE}",
  "\u{1F476}\u{1F3FF}",
  "\u{1F9D2}\u{1F3FB}",
  "\u{1F9D2}\u{1F3FC}",
  "\u{1F9D2}\u{1F3FD}",
  "\u{1F9D2}\u{1F3FE}",
  "\u{1F9D2}\u{1F3FF}",
  "\u{1F467}\u{1F3FB}",
  "\u{1F467}\u{1F3FC}",
  "\u{1F467}\u{1F3FD}",
  "\u{1F467}\u{1F3FE}",
  "\u{1F467}\u{1F3FF}",
  "\u{1F466}\u{1F3FB}",
  "\u{1F466}\u{1F3FC}",
  "\u{1F466}\u{1F3FD}",
  "\u{1F466}\u{1F3FE}",
  "\u{1F466}\u{1F3FF}",
  "\u{1F9D1}\u{1F3FB}",
  "\u{1F9D1}\u{1F3FC}",
  "\u{1F9D1}\u{1F3FD}",
  "\u{1F9D1}\u{1F3FE}",
  "\u{1F9D1}\u{1F3FF}",
  "\u{1F469}\u{1F3FB}",
  "\u{1F469}\u{1F3FC}",
  "\u{1F469}\u{1F3FD}",
  "\u{1F469}\u{1F3FE}",
  "\u{1F469}\u{1F3FF}",
  "\u{1F468}\u{1F3FB}",
  "\u{1F468}\u{1F3FC}",
  "\u{1F468}\u{1F3FD}",
  "\u{1F468}\u{1F3FE}",
  "\u{1F468}\u{1F3FF}",
  "\u{1F471}\u{1F3FB}",
  "\u{1F471}\u{1F3FC}",
  "\u{1F471}\u{1F3FD}",
  "\u{1F471}\u{1F3FE}",
  "\u{1F471}\u{1F3FF}",
  "\u{1F9D4}\u{1F3FB}",
  "\u{1F9D4}\u{1F3FC}",
  "\u{1F9D4}\u{1F3FD}",
  "\u{1F9D4}\u{1F3FE}",
  "\u{1F9D4}\u{1F3FF}",
  "\u{1F9D3}\u{1F3FB}",
  "\u{1F9D3}\u{1F3FC}",
  "\u{1F9D3}\u{1F3FD}",
  "\u{1F9D3}\u{1F3FE}",
  "\u{1F9D3}\u{1F3FF}",
  "\u{1F475}\u{1F3FB}",
  "\u{1F475}\u{1F3FC}",
  "\u{1F475}\u{1F3FD}",
  "\u{1F475}\u{1F3FE}",
  "\u{1F475}\u{1F3FF}",
  "\u{1F474}\u{1F3FB}",
  "\u{1F474}\u{1F3FC}",
  "\u{1F474}\u{1F3FD}",
  "\u{1F474}\u{1F3FE}",
  "\u{1F474}\u{1F3FF}",
  "\u{1F472}\u{1F3FB}",
  "\u{1F472}\u{1F3FC}",
  "\u{1F472}\u{1F3FD}",
  "\u{1F472}\u{1F3FE}",
  "\u{1F472}\u{1F3FF}",
  "\u{1F473}\u{1F3FB}",
  "\u{1F473}\u{1F3FC}",
  "\u{1F473}\u{1F3FD}",
  "\u{1F473}\u{1F3FE}",
  "\u{1F473}\u{1F3FF}",
  "\u{1F9D5}\u{1F3FB}",
  "\u{1F9D5}\u{1F3FC}",
  "\u{1F9D5}\u{1F3FD}",
  "\u{1F9D5}\u{1F3FE}",
  "\u{1F9D5}\u{1F3FF}",
  "\u{1F46E}\u{1F3FB}",
  "\u{1F46E}\u{1F3FC}",
  "\u{1F46E}\u{1F3FD}",
  "\u{1F46E}\u{1F3FE}",
  "\u{1F46E}\u{1F3FF}",
  "\u{1F477}\u{1F3FB}",
  "\u{1F477}\u{1F3FC}",
  "\u{1F477}\u{1F3FD}",
  "\u{1F477}\u{1F3FE}",
  "\u{1F477}\u{1F3FF}",
  "\u{1F482}\u{1F3FB}",
  "\u{1F482}\u{1F3FC}",
  "\u{1F482}\u{1F3FD}",
  "\u{1F482}\u{1F3FE}",
  "\u{1F482}\u{1F3FF}",
  "\u{1F575}\u{1F3FB}",
  "\u{1F575}\u{1F3FC}",
  "\u{1F575}\u{1F3FD}",
  "\u{1F575}\u{1F3FE}",
  "\u{1F575}\u{1F3FF}",
  "\u{1F470}\u{1F3FB}",
  "\u{1F470}\u{1F3FC}",
  "\u{1F470}\u{1F3FD}",
  "\u{1F470}\u{1F3FE}",
  "\u{1F470}\u{1F3FF}",
  "\u{1F935}\u{1F3FB}",
  "\u{1F935}\u{1F3FC}",
  "\u{1F935}\u{1F3FD}",
  "\u{1F935}\u{1F3FE}",
  "\u{1F935}\u{1F3FF}",
  "\u{1FAC5}\u{1F3FB}",
  "\u{1FAC5}\u{1F3FC}",
  "\u{1FAC5}\u{1F3FD}",
  "\u{1FAC5}\u{1F3FE}",
  "\u{1FAC5}\u{1F3FF}",
  "\u{1F478}\u{1F3FB}",
  "\u{1F478}\u{1F3FC}",
  "\u{1F478}\u{1F3FD}",
  "\u{1F478}\u{1F3FE}",
  "\u{1F478}\u{1F3FF}",
  "\u{1F934}\u{1F3FB}",
  "\u{1F934}\u{1F3FC}",
  "\u{1F934}\u{1F3FD}",
  "\u{1F934}\u{1F3FE}",
  "\u{1F934}\u{1F3FF}",
  "\u{1F9B8}\u{1F3FB}",
  "\u{1F9B8}\u{1F3FC}",
  "\u{1F9B8}\u{1F3FD}",
  "\u{1F9B8}\u{1F3FE}",
  "\u{1F9B8}\u{1F3FF}",
  "\u{1F9B9}\u{1F3FB}",
  "\u{1F9B9}\u{1F3FC}",
  "\u{1F9B9}\u{1F3FD}",
  "\u{1F9B9}\u{1F3FE}",
  "\u{1F9B9}\u{1F3FF}",
  "\u{1F977}\u{1F3FB}",
  "\u{1F977}\u{1F3FC}",
  "\u{1F977}\u{1F3FD}",
  "\u{1F977}\u{1F3FE}",
  "\u{1F977}\u{1F3FF}",
  "\u{1F936}\u{1F3FB}",
  "\u{1F936}\u{1F3FC}",
  "\u{1F936}\u{1F3FD}",
  "\u{1F936}\u{1F3FE}",
  "\u{1F936}\u{1F3FF}",
  "\u{1F385}\u{1F3FB}",
  "\u{1F385}\u{1F3FC}",
  "\u{1F385}\u{1F3FD}",
  "\u{1F385}\u{1F3FE}",
  "\u{1F385}\u{1F3FF}",
  "\u{1F9D9}\u{1F3FB}",
  "\u{1F9D9}\u{1F3FC}",
  "\u{1F9D9}\u{1F3FD}",
  "\u{1F9D9}\u{1F3FE}",
  "\u{1F9D9}\u{1F3FF}",
  "\u{1F9DD}\u{1F3FB}",
  "\u{1F9DD}\u{1F3FC}",
  "\u{1F9DD}\u{1F3FD}",
  "\u{1F9DD}\u{1F3FE}",
  "\u{1F9DD}\u{1F3FF}",
  "\u{1F9DB}\u{1F3FB}",
  "\u{1F9DB}\u{1F3FC}",
  "\u{1F9DB}\u{1F3FD}",
  "\u{1F9DB}\u{1F3FE}",
  "\u{1F9DB}\u{1F3FF}",
  "\u{1F9DC}\u{1F3FB}",
  "\u{1F9DC}\u{1F3FC}",
  "\u{1F9DC}\u{1F3FD}",
  "\u{1F9DC}\u{1F3FE}",
  "\u{1F9DC}\u{1F3FF}",
  "\u{1F9DA}\u{1F3FB}",
  "\u{1F9DA}\u{1F3FC}",
  "\u{1F9DA}\u{1F3FD}",
  "\u{1F9DA}\u{1F3FE}",
  "\u{1F9DA}\u{1F3FF}",
  "\u{1F47C}\u{1F3FB}",
  "\u{1F47C}\u{1F3FC}",
  "\u{1F47C}\u{1F3FD}",
  "\u{1F47C}\u{1F3FE}",
  "\u{1F47C}\u{1F3FF}",
  "\u{1FAC4}\u{1F3FB}",
  "\u{1FAC4}\u{1F3FC}",
  "\u{1FAC4}\u{1F3FD}",
  "\u{1FAC4}\u{1F3FE}",
  "\u{1FAC4}\u{1F3FF}",
  "\u{1F930}\u{1F3FB}",
  "\u{1F930}\u{1F3FC}",
  "\u{1F930}\u{1F3FD}",
  "\u{1F930}\u{1F3FE}",
  "\u{1F930}\u{1F3FF}",
  "\u{1FAC3}\u{1F3FB}",
  "\u{1FAC3}\u{1F3FC}",
  "\u{1FAC3}\u{1F3FD}",
  "\u{1FAC3}\u{1F3FE}",
  "\u{1FAC3}\u{1F3FF}",
  "\u{1F931}\u{1F3FB}",
  "\u{1F931}\u{1F3FC}",
  "\u{1F931}\u{1F3FD}",
  "\u{1F931}\u{1F3FE}",
  "\u{1F931}\u{1F3FF}",
  "\u{1F647}\u{1F3FB}",
  "\u{1F647}\u{1F3FC}",
  "\u{1F647}\u{1F3FD}",
  "\u{1F647}\u{1F3FE}",
  "\u{1F647}\u{1F3FF}",
  "\u{1F481}\u{1F3FB}",
  "\u{1F481}\u{1F3FC}",
  "\u{1F481}\u{1F3FD}",
  "\u{1F481}\u{1F3FE}",
  "\u{1F481}\u{1F3FF}",
  "\u{1F645}\u{1F3FB}",
  "\u{1F645}\u{1F3FC}",
  "\u{1F645}\u{1F3FD}",
  "\u{1F645}\u{1F3FE}",
  "\u{1F645}\u{1F3FF}",
  "\u{1F646}\u{1F3FB}",
  "\u{1F646}\u{1F3FC}",
  "\u{1F646}\u{1F3FD}",
  "\u{1F646}\u{1F3FE}",
  "\u{1F646}\u{1F3FF}",
  "\u{1F64B}\u{1F3FB}",
  "\u{1F64B}\u{1F3FC}",
  "\u{1F64B}\u{1F3FD}",
  "\u{1F64B}\u{1F3FE}",
  "\u{1F64B}\u{1F3FF}",
  "\u{1F9CF}\u{1F3FB}",
  "\u{1F9CF}\u{1F3FC}",
  "\u{1F9CF}\u{1F3FD}",
  "\u{1F9CF}\u{1F3FE}",
  "\u{1F9CF}\u{1F3FF}",
  "\u{1F926}\u{1F3FB}",
  "\u{1F926}\u{1F3FC}",
  "\u{1F926}\u{1F3FD}",
  "\u{1F926}\u{1F3FE}",
  "\u{1F926}\u{1F3FF}",
  "\u{1F937}\u{1F3FB}",
  "\u{1F937}\u{1F3FC}",
  "\u{1F937}\u{1F3FD}",
  "\u{1F937}\u{1F3FE}",
  "\u{1F937}\u{1F3FF}",
  "\u{1F64E}\u{1F3FB}",
  "\u{1F64E}\u{1F3FC}",
  "\u{1F64E}\u{1F3FD}",
  "\u{1F64E}\u{1F3FE}",
  "\u{1F64E}\u{1F3FF}",
  "\u{1F64D}\u{1F3FB}",
  "\u{1F64D}\u{1F3FC}",
  "\u{1F64D}\u{1F3FD}",
  "\u{1F64D}\u{1F3FE}",
  "\u{1F64D}\u{1F3FF}",
  "\u{1F487}\u{1F3FB}",
  "\u{1F487}\u{1F3FC}",
  "\u{1F487}\u{1F3FD}",
  "\u{1F487}\u{1F3FE}",
  "\u{1F487}\u{1F3FF}",
  "\u{1F486}\u{1F3FB}",
  "\u{1F486}\u{1F3FC}",
  "\u{1F486}\u{1F3FD}",
  "\u{1F486}\u{1F3FE}",
  "\u{1F486}\u{1F3FF}",
  "\u{1F9D6}\u{1F3FB}",
  "\u{1F9D6}\u{1F3FC}",
  "\u{1F9D6}\u{1F3FD}",
  "\u{1F9D6}\u{1F3FE}",
  "\u{1F9D6}\u{1F3FF}",
  "\u{1F485}\u{1F3FB}",
  "\u{1F485}\u{1F3FC}",
  "\u{1F485}\u{1F3FD}",
  "\u{1F485}\u{1F3FE}",
  "\u{1F485}\u{1F3FF}",
  "\u{1F933}\u{1F3FB}",
  "\u{1F933}\u{1F3FC}",
  "\u{1F933}\u{1F3FD}",
  "\u{1F933}\u{1F3FE}",
  "\u{1F933}\u{1F3FF}",
  "\u{1F483}\u{1F3FB}",
  "\u{1F483}\u{1F3FC}",
  "\u{1F483}\u{1F3FD}",
  "\u{1F483}\u{1F3FE}",
  "\u{1F483}\u{1F3FF}",
  "\u{1F57A}\u{1F3FB}",
  "\u{1F57A}\u{1F3FC}",
  "\u{1F57A}\u{1F3FD}",
  "\u{1F57A}\u{1F3FF}",
  "\u{1F57A}\u{1F3FE}",
  "\u{1F574}\u{1F3FB}",
  "\u{1F574}\u{1F3FC}",
  "\u{1F574}\u{1F3FD}",
  "\u{1F574}\u{1F3FE}",
  "\u{1F574}\u{1F3FF}",
  "\u{1F6B6}\u{1F3FB}",
  "\u{1F6B6}\u{1F3FC}",
  "\u{1F6B6}\u{1F3FD}",
  "\u{1F6B6}\u{1F3FE}",
  "\u{1F6B6}\u{1F3FF}",
  "\u{1F9CE}\u{1F3FB}",
  "\u{1F9CE}\u{1F3FC}",
  "\u{1F9CE}\u{1F3FD}",
  "\u{1F9CE}\u{1F3FE}",
  "\u{1F9CE}\u{1F3FF}",
  "\u{1F3C3}\u{1F3FB}",
  "\u{1F3C3}\u{1F3FC}",
  "\u{1F3C3}\u{1F3FD}",
  "\u{1F3C3}\u{1F3FE}",
  "\u{1F3C3}\u{1F3FF}",
  "\u{1F9CD}\u{1F3FB}",
  "\u{1F9CD}\u{1F3FC}",
  "\u{1F9CD}\u{1F3FD}",
  "\u{1F9CD}\u{1F3FE}",
  "\u{1F9CD}\u{1F3FF}",
  "\u{1F46B}\u{1F3FB}",
  "\u{1F46B}\u{1F3FC}",
  "\u{1F46B}\u{1F3FD}",
  "\u{1F46B}\u{1F3FE}",
  "\u{1F46B}\u{1F3FF}",
  "\u{1F46D}\u{1F3FB}",
  "\u{1F46D}\u{1F3FC}",
  "\u{1F46D}\u{1F3FD}",
  "\u{1F46D}\u{1F3FE}",
  "\u{1F46D}\u{1F3FF}",
  "\u{1F46C}\u{1F3FB}",
  "\u{1F46C}\u{1F3FC}",
  "\u{1F46C}\u{1F3FD}",
  "\u{1F46C}\u{1F3FE}",
  "\u{1F46C}\u{1F3FF}",
  "\u{1F491}\u{1F3FB}",
  "\u{1F491}\u{1F3FC}",
  "\u{1F491}\u{1F3FD}",
  "\u{1F491}\u{1F3FE}",
  "\u{1F491}\u{1F3FF}",
  "\u{1F48F}\u{1F3FB}",
  "\u{1F48F}\u{1F3FC}",
  "\u{1F48F}\u{1F3FD}",
  "\u{1F48F}\u{1F3FE}",
  "\u{1F48F}\u{1F3FF}",
  "\u{1F426}\u200D\u2B1B",
  "\u{1F408}\u200D\u2B1B",
  "\u{1F3C2}\u{1F3FB}",
  "\u{1F3C2}\u{1F3FC}",
  "\u{1F3C2}\u{1F3FD}",
  "\u{1F3C2}\u{1F3FE}",
  "\u{1F3C2}\u{1F3FF}",
  "\u{1F3CB}\u{1F3FB}",
  "\u{1F3CB}\u{1F3FC}",
  "\u{1F3CB}\u{1F3FD}",
  "\u{1F3CB}\u{1F3FE}",
  "\u{1F3CB}\u{1F3FF}",
  "\u{1F938}\u{1F3FB}",
  "\u{1F938}\u{1F3FC}",
  "\u{1F938}\u{1F3FD}",
  "\u{1F938}\u{1F3FE}",
  "\u{1F938}\u{1F3FF}",
  "\u{1F93E}\u{1F3FB}",
  "\u{1F93E}\u{1F3FC}",
  "\u{1F93E}\u{1F3FD}",
  "\u{1F93E}\u{1F3FE}",
  "\u{1F93E}\u{1F3FF}",
  "\u{1F3CC}\u{1F3FB}",
  "\u{1F3CC}\u{1F3FC}",
  "\u{1F3CC}\u{1F3FD}",
  "\u{1F3CC}\u{1F3FE}",
  "\u{1F3CC}\u{1F3FF}",
  "\u{1F3C7}\u{1F3FB}",
  "\u{1F3C7}\u{1F3FC}",
  "\u{1F3C7}\u{1F3FD}",
  "\u{1F3C7}\u{1F3FE}",
  "\u{1F3C7}\u{1F3FF}",
  "\u{1F9D8}\u{1F3FB}",
  "\u{1F9D8}\u{1F3FC}",
  "\u{1F9D8}\u{1F3FD}",
  "\u{1F9D8}\u{1F3FE}",
  "\u{1F9D8}\u{1F3FF}",
  "\u{1F3C4}\u{1F3FB}",
  "\u{1F3C4}\u{1F3FC}",
  "\u{1F3C4}\u{1F3FD}",
  "\u{1F3C4}\u{1F3FE}",
  "\u{1F3C4}\u{1F3FF}",
  "\u{1F3CA}\u{1F3FB}",
  "\u{1F3CA}\u{1F3FC}",
  "\u{1F3CA}\u{1F3FD}",
  "\u{1F3CA}\u{1F3FE}",
  "\u{1F3CA}\u{1F3FF}",
  "\u{1F93D}\u{1F3FB}",
  "\u{1F93D}\u{1F3FC}",
  "\u{1F93D}\u{1F3FD}",
  "\u{1F93D}\u{1F3FE}",
  "\u{1F93D}\u{1F3FF}",
  "\u{1F6A3}\u{1F3FB}",
  "\u{1F6A3}\u{1F3FC}",
  "\u{1F6A3}\u{1F3FD}",
  "\u{1F6A3}\u{1F3FE}",
  "\u{1F6A3}\u{1F3FF}",
  "\u{1F9D7}\u{1F3FB}",
  "\u{1F9D7}\u{1F3FC}",
  "\u{1F9D7}\u{1F3FD}",
  "\u{1F9D7}\u{1F3FE}",
  "\u{1F9D7}\u{1F3FF}",
  "\u{1F6B5}\u{1F3FB}",
  "\u{1F6B5}\u{1F3FC}",
  "\u{1F6B5}\u{1F3FD}",
  "\u{1F6B5}\u{1F3FE}",
  "\u{1F6B5}\u{1F3FF}",
  "\u{1F6B4}\u{1F3FB}",
  "\u{1F6B4}\u{1F3FC}",
  "\u{1F6B4}\u{1F3FD}",
  "\u{1F6B4}\u{1F3FE}",
  "\u{1F6B4}\u{1F3FF}",
  "\u{1F939}\u{1F3FB}",
  "\u{1F939}\u{1F3FC}",
  "\u{1F939}\u{1F3FD}",
  "\u{1F939}\u{1F3FE}",
  "\u{1F939}\u{1F3FF}",
  "\u{1F6C0}\u{1F3FB}",
  "\u{1F6C0}\u{1F3FC}",
  "\u{1F6C0}\u{1F3FD}",
  "\u{1F6C0}\u{1F3FE}",
  "\u{1F6C0}\u{1F3FF}",
  "\u{1F6CC}\u{1F3FB}",
  "\u{1F6CC}\u{1F3FC}",
  "\u{1F6CC}\u{1F3FD}",
  "\u{1F6CC}\u{1F3FE}",
  "\u{1F6CC}\u{1F3FF}",
  "\u{1F1FA}\u{1F1F3}",
  "\u{1F1E6}\u{1F1EB}",
  "\u{1F1E6}\u{1F1FD}",
  "\u{1F1E6}\u{1F1F1}",
  "\u{1F1E9}\u{1F1FF}",
  "\u{1F1E6}\u{1F1F8}",
  "\u{1F1E6}\u{1F1E9}",
  "\u{1F1E6}\u{1F1F4}",
  "\u{1F1E6}\u{1F1EE}",
  "\u{1F1E6}\u{1F1F6}",
  "\u{1F1E6}\u{1F1EC}",
  "\u{1F1E6}\u{1F1F7}",
  "\u{1F1E6}\u{1F1F2}",
  "\u{1F1E6}\u{1F1FC}",
  "\u{1F1E6}\u{1F1FA}",
  "\u{1F1E6}\u{1F1F9}",
  "\u{1F1E6}\u{1F1FF}",
  "\u{1F1E7}\u{1F1F8}",
  "\u{1F1E7}\u{1F1ED}",
  "\u{1F1E7}\u{1F1E9}",
  "\u{1F1E7}\u{1F1E7}",
  "\u{1F1E7}\u{1F1FE}",
  "\u{1F1E7}\u{1F1EA}",
  "\u{1F1E7}\u{1F1FF}",
  "\u{1F1E7}\u{1F1EF}",
  "\u{1F1E7}\u{1F1F2}",
  "\u{1F1E7}\u{1F1F9}",
  "\u{1F1E7}\u{1F1F4}",
  "\u{1F1E7}\u{1F1E6}",
  "\u{1F1E7}\u{1F1FC}",
  "\u{1F1E7}\u{1F1F7}",
  "\u{1F1EE}\u{1F1F4}",
  "\u{1F1FB}\u{1F1EC}",
  "\u{1F1E7}\u{1F1F3}",
  "\u{1F1E7}\u{1F1EC}",
  "\u{1F1E7}\u{1F1EB}",
  "\u{1F1E7}\u{1F1EE}",
  "\u{1F1F0}\u{1F1ED}",
  "\u{1F1E8}\u{1F1F2}",
  "\u{1F1E8}\u{1F1E6}",
  "\u{1F1EE}\u{1F1E8}",
  "\u{1F1E8}\u{1F1FB}",
  "\u{1F1E7}\u{1F1F6}",
  "\u{1F1F0}\u{1F1FE}",
  "\u{1F1E8}\u{1F1EB}",
  "\u{1F1F9}\u{1F1E9}",
  "\u{1F1E8}\u{1F1F1}",
  "\u{1F1E8}\u{1F1F3}",
  "\u{1F1E8}\u{1F1FD}",
  "\u{1F1E8}\u{1F1E8}",
  "\u{1F1E8}\u{1F1F4}",
  "\u{1F1F0}\u{1F1F2}",
  "\u{1F1E8}\u{1F1EC}",
  "\u{1F1E8}\u{1F1E9}",
  "\u{1F1E8}\u{1F1F0}",
  "\u{1F1E8}\u{1F1F7}",
  "\u{1F1E8}\u{1F1EE}",
  "\u{1F1ED}\u{1F1F7}",
  "\u{1F1E8}\u{1F1FA}",
  "\u{1F1E8}\u{1F1FC}",
  "\u{1F1E8}\u{1F1FE}",
  "\u{1F1E8}\u{1F1FF}",
  "\u{1F1E9}\u{1F1F0}",
  "\u{1F1E9}\u{1F1EF}",
  "\u{1F1E9}\u{1F1F2}",
  "\u{1F1E9}\u{1F1F4}",
  "\u{1F1EA}\u{1F1E8}",
  "\u{1F1EA}\u{1F1EC}",
  "\u{1F1F8}\u{1F1FB}",
  "\u{1F1EC}\u{1F1F6}",
  "\u{1F1EA}\u{1F1F7}",
  "\u{1F1EA}\u{1F1EA}",
  "\u{1F1EA}\u{1F1F9}",
  "\u{1F1EA}\u{1F1FA}",
  "\u{1F1EB}\u{1F1F0}",
  "\u{1F1EB}\u{1F1F4}",
  "\u{1F1EB}\u{1F1EF}",
  "\u{1F1EB}\u{1F1EE}",
  "\u{1F1EB}\u{1F1F7}",
  "\u{1F1EC}\u{1F1EB}",
  "\u{1F1F5}\u{1F1EB}",
  "\u{1F1F9}\u{1F1EB}",
  "\u{1F1EC}\u{1F1E6}",
  "\u{1F1EC}\u{1F1F2}",
  "\u{1F1EC}\u{1F1EA}",
  "\u{1F1E9}\u{1F1EA}",
  "\u{1F1EC}\u{1F1ED}",
  "\u{1F1EC}\u{1F1EE}",
  "\u{1F1EC}\u{1F1F7}",
  "\u{1F1EC}\u{1F1F1}",
  "\u{1F1EC}\u{1F1E9}",
  "\u{1F1EC}\u{1F1F5}",
  "\u{1F1EC}\u{1F1FA}",
  "\u{1F1EC}\u{1F1F9}",
  "\u{1F1EC}\u{1F1EC}",
  "\u{1F1EC}\u{1F1F3}",
  "\u{1F1EC}\u{1F1FC}",
  "\u{1F1EC}\u{1F1FE}",
  "\u{1F1ED}\u{1F1F9}",
  "\u{1F1ED}\u{1F1F3}",
  "\u{1F1ED}\u{1F1F0}",
  "\u{1F1ED}\u{1F1FA}",
  "\u{1F1EE}\u{1F1F8}",
  "\u{1F1EE}\u{1F1F3}",
  "\u{1F1EE}\u{1F1E9}",
  "\u{1F1EE}\u{1F1F7}",
  "\u{1F1EE}\u{1F1F6}",
  "\u{1F1EE}\u{1F1EA}",
  "\u{1F1EE}\u{1F1F2}",
  "\u{1F1EE}\u{1F1F1}",
  "\u{1F1EE}\u{1F1F9}",
  "\u{1F1EF}\u{1F1F2}",
  "\u{1F1EF}\u{1F1F5}",
  "\u{1F1EF}\u{1F1EA}",
  "\u{1F1EF}\u{1F1F4}",
  "\u{1F1F0}\u{1F1FF}",
  "\u{1F1F0}\u{1F1EA}",
  "\u{1F1F0}\u{1F1EE}",
  "\u{1F1FD}\u{1F1F0}",
  "\u{1F1F0}\u{1F1FC}",
  "\u{1F1F0}\u{1F1EC}",
  "\u{1F1F1}\u{1F1E6}",
  "\u{1F1F1}\u{1F1FB}",
  "\u{1F1F1}\u{1F1E7}",
  "\u{1F1F1}\u{1F1F8}",
  "\u{1F1F1}\u{1F1F7}",
  "\u{1F1F1}\u{1F1FE}",
  "\u{1F1F1}\u{1F1EE}",
  "\u{1F1F1}\u{1F1F9}",
  "\u{1F1F1}\u{1F1FA}",
  "\u{1F1F2}\u{1F1F4}",
  "\u{1F1F2}\u{1F1F0}",
  "\u{1F1F2}\u{1F1EC}",
  "\u{1F1F2}\u{1F1FC}",
  "\u{1F1F2}\u{1F1FE}",
  "\u{1F1F2}\u{1F1FB}",
  "\u{1F1F2}\u{1F1F1}",
  "\u{1F1F2}\u{1F1F9}",
  "\u{1F1F2}\u{1F1ED}",
  "\u{1F1F2}\u{1F1F6}",
  "\u{1F1F2}\u{1F1F7}",
  "\u{1F1F2}\u{1F1FA}",
  "\u{1F1FE}\u{1F1F9}",
  "\u{1F1F2}\u{1F1FD}",
  "\u{1F1EB}\u{1F1F2}",
  "\u{1F1F2}\u{1F1E9}",
  "\u{1F1F2}\u{1F1E8}",
  "\u{1F1F2}\u{1F1F3}",
  "\u{1F1F2}\u{1F1EA}",
  "\u{1F1F2}\u{1F1F8}",
  "\u{1F1F2}\u{1F1E6}",
  "\u{1F1F2}\u{1F1FF}",
  "\u{1F1F2}\u{1F1F2}",
  "\u{1F1F3}\u{1F1E6}",
  "\u{1F1F3}\u{1F1F7}",
  "\u{1F1F3}\u{1F1F5}",
  "\u{1F1F3}\u{1F1F1}",
  "\u{1F1F3}\u{1F1E8}",
  "\u{1F1F3}\u{1F1FF}",
  "\u{1F1F3}\u{1F1EE}",
  "\u{1F1F3}\u{1F1EA}",
  "\u{1F1F3}\u{1F1EC}",
  "\u{1F1F3}\u{1F1FA}",
  "\u{1F1F3}\u{1F1EB}",
  "\u{1F1F0}\u{1F1F5}",
  "\u{1F1F2}\u{1F1F5}",
  "\u{1F1F3}\u{1F1F4}",
  "\u{1F1F4}\u{1F1F2}",
  "\u{1F1F5}\u{1F1F0}",
  "\u{1F1F5}\u{1F1FC}",
  "\u{1F1F5}\u{1F1F8}",
  "\u{1F1F5}\u{1F1E6}",
  "\u{1F1F5}\u{1F1EC}",
  "\u{1F1F5}\u{1F1FE}",
  "\u{1F1F5}\u{1F1EA}",
  "\u{1F1F5}\u{1F1ED}",
  "\u{1F1F5}\u{1F1F3}",
  "\u{1F1F5}\u{1F1F1}",
  "\u{1F1F5}\u{1F1F9}",
  "\u{1F1F5}\u{1F1F7}",
  "\u{1F1F6}\u{1F1E6}",
  "\u{1F1F7}\u{1F1EA}",
  "\u{1F1F7}\u{1F1F4}",
  "\u{1F1F7}\u{1F1FA}",
  "\u{1F1F7}\u{1F1FC}",
  "\u{1F1FC}\u{1F1F8}",
  "\u{1F1F8}\u{1F1F2}",
  "\u{1F1F8}\u{1F1F9}",
  "\u{1F1F8}\u{1F1E6}",
  "\u{1F1F8}\u{1F1F3}",
  "\u{1F1F7}\u{1F1F8}",
  "\u{1F1F8}\u{1F1E8}",
  "\u{1F1F8}\u{1F1F1}",
  "\u{1F1F8}\u{1F1EC}",
  "\u{1F1F8}\u{1F1FD}",
  "\u{1F1F8}\u{1F1F0}",
  "\u{1F1F8}\u{1F1EE}",
  "\u{1F1EC}\u{1F1F8}",
  "\u{1F1F8}\u{1F1E7}",
  "\u{1F1F8}\u{1F1F4}",
  "\u{1F1FF}\u{1F1E6}",
  "\u{1F1F0}\u{1F1F7}",
  "\u{1F1F8}\u{1F1F8}",
  "\u{1F1EA}\u{1F1F8}",
  "\u{1F1F1}\u{1F1F0}",
  "\u{1F1E7}\u{1F1F1}",
  "\u{1F1F8}\u{1F1ED}",
  "\u{1F1F0}\u{1F1F3}",
  "\u{1F1F1}\u{1F1E8}",
  "\u{1F1F5}\u{1F1F2}",
  "\u{1F1FB}\u{1F1E8}",
  "\u{1F1F8}\u{1F1E9}",
  "\u{1F1F8}\u{1F1F7}",
  "\u{1F1F8}\u{1F1FF}",
  "\u{1F1F8}\u{1F1EA}",
  "\u{1F1E8}\u{1F1ED}",
  "\u{1F1F8}\u{1F1FE}",
  "\u{1F1F9}\u{1F1FC}",
  "\u{1F1F9}\u{1F1EF}",
  "\u{1F1F9}\u{1F1FF}",
  "\u{1F1F9}\u{1F1ED}",
  "\u{1F1F9}\u{1F1F1}",
  "\u{1F1F9}\u{1F1EC}",
  "\u{1F1F9}\u{1F1F0}",
  "\u{1F1F9}\u{1F1F4}",
  "\u{1F1F9}\u{1F1F9}",
  "\u{1F1F9}\u{1F1F3}",
  "\u{1F1F9}\u{1F1F7}",
  "\u{1F1F9}\u{1F1F2}",
  "\u{1F1F9}\u{1F1E8}",
  "\u{1F1FB}\u{1F1EE}",
  "\u{1F1F9}\u{1F1FB}",
  "\u{1F1FA}\u{1F1EC}",
  "\u{1F1FA}\u{1F1E6}",
  "\u{1F1E6}\u{1F1EA}",
  "\u{1F1EC}\u{1F1E7}",
  "\u{1F1FA}\u{1F1F8}",
  "\u{1F1FA}\u{1F1FE}",
  "\u{1F1FA}\u{1F1FF}",
  "\u{1F1FB}\u{1F1FA}",
  "\u{1F1FB}\u{1F1E6}",
  "\u{1F1FB}\u{1F1EA}",
  "\u{1F1FB}\u{1F1F3}",
  "\u{1F1FC}\u{1F1EB}",
  "\u{1F1EA}\u{1F1ED}",
  "\u{1F1FE}\u{1F1EA}",
  "\u{1F1FF}\u{1F1F2}",
  "\u{1F1FF}\u{1F1FC}",
  "\u{1F1E6}\u{1F1E8}",
  "\u{1F1E7}\u{1F1FB}",
  "\u{1F1E8}\u{1F1F5}",
  "\u{1F1EA}\u{1F1E6}",
  "\u{1F1E9}\u{1F1EC}",
  "\u{1F1ED}\u{1F1F2}",
  "\u{1F1F2}\u{1F1EB}",
  "\u{1F1F8}\u{1F1EF}",
  "\u{1F1F9}\u{1F1E6}",
  "\u{1F1FA}\u{1F1F2}",
  "\u270A\u{1F3FB}",
  "\u270A\u{1F3FC}",
  "\u270A\u{1F3FD}",
  "\u270A\u{1F3FE}",
  "\u270A\u{1F3FF}",
  "\u270C\u{1F3FB}",
  "\u270C\u{1F3FC}",
  "\u270C\u{1F3FD}",
  "\u270C\u{1F3FE}",
  "\u270C\u{1F3FF}",
  "\u261D\u{1F3FB}",
  "\u261D\u{1F3FC}",
  "\u261D\u{1F3FD}",
  "\u261D\u{1F3FE}",
  "\u261D\u{1F3FF}",
  "\u270B\u{1F3FB}",
  "\u270B\u{1F3FC}",
  "\u270B\u{1F3FD}",
  "\u270B\u{1F3FE}",
  "\u270B\u{1F3FF}",
  "\u{1F590}\uFE0F",
  "\u270D\u{1F3FB}",
  "\u270D\u{1F3FC}",
  "\u270D\u{1F3FD}",
  "\u270D\u{1F3FE}",
  "\u270D\u{1F3FF}",
  "\u{1F441}\uFE0F",
  "\u{1F5E3}\uFE0F",
  "\u{1F575}\uFE0F",
  "\u{1F574}\uFE0F",
  "\u{1F576}\uFE0F",
  "\u{1F577}\uFE0F",
  "\u{1F578}\uFE0F",
  "\u{1F54A}\uFE0F",
  "\u{1F43F}\uFE0F",
  "\u{1F32A}\uFE0F",
  "\u{1F324}\uFE0F",
  "\u{1F325}\uFE0F",
  "\u{1F326}\uFE0F",
  "\u{1F327}\uFE0F",
  "\u{1F329}\uFE0F",
  "\u{1F328}\uFE0F",
  "\u{1F32C}\uFE0F",
  "\u{1F32B}\uFE0F",
  "\u{1F336}\uFE0F",
  "\u{1F37D}\uFE0F",
  "\u{1F3CB}\uFE0F",
  "\u26F9\u{1F3FB}",
  "\u26F9\u{1F3FC}",
  "\u26F9\u{1F3FD}",
  "\u26F9\u{1F3FE}",
  "\u26F9\u{1F3FF}",
  "\u{1F3CC}\uFE0F",
  "\u{1F396}\uFE0F",
  "\u{1F3F5}\uFE0F",
  "\u{1F397}\uFE0F",
  "\u{1F39F}\uFE0F",
  "\u{1F3CE}\uFE0F",
  "\u{1F3CD}\uFE0F",
  "\u{1F6E9}\uFE0F",
  "\u{1F6F0}\uFE0F",
  "\u{1F6E5}\uFE0F",
  "\u{1F6F3}\uFE0F",
  "\u{1F5FA}\uFE0F",
  "\u{1F3DF}\uFE0F",
  "\u{1F3D6}\uFE0F",
  "\u{1F3DD}\uFE0F",
  "\u{1F3DC}\uFE0F",
  "\u{1F3D4}\uFE0F",
  "\u{1F3D5}\uFE0F",
  "\u{1F3D8}\uFE0F",
  "\u{1F3DA}\uFE0F",
  "\u{1F3D7}\uFE0F",
  "\u{1F3DB}\uFE0F",
  "\u{1F6E4}\uFE0F",
  "\u{1F6E3}\uFE0F",
  "\u{1F3DE}\uFE0F",
  "\u{1F3D9}\uFE0F",
  "\u{1F5A5}\uFE0F",
  "\u{1F5A8}\uFE0F",
  "\u{1F5B1}\uFE0F",
  "\u{1F5B2}\uFE0F",
  "\u{1F579}\uFE0F",
  "\u{1F5DC}\uFE0F",
  "\u{1F4FD}\uFE0F",
  "\u{1F39E}\uFE0F",
  "\u{1F399}\uFE0F",
  "\u{1F39A}\uFE0F",
  "\u{1F39B}\uFE0F",
  "\u{1F570}\uFE0F",
  "\u{1F56F}\uFE0F",
  "\u{1F6E2}\uFE0F",
  "\u{1F6E0}\uFE0F",
  "\u{1F5E1}\uFE0F",
  "\u{1F6E1}\uFE0F",
  "\u{1F573}\uFE0F",
  "\u{1F321}\uFE0F",
  "\u{1F6CE}\uFE0F",
  "\u{1F5DD}\uFE0F",
  "\u{1F6CB}\uFE0F",
  "\u{1F6CF}\uFE0F",
  "\u{1F5BC}\uFE0F",
  "\u{1F6CD}\uFE0F",
  "\u{1F3F7}\uFE0F",
  "\u{1F5D2}\uFE0F",
  "\u{1F5D3}\uFE0F",
  "\u{1F5D1}\uFE0F",
  "\u{1F5C3}\uFE0F",
  "\u{1F5F3}\uFE0F",
  "\u{1F5C4}\uFE0F",
  "\u{1F5C2}\uFE0F",
  "\u{1F5DE}\uFE0F",
  "\u{1F587}\uFE0F",
  "\u{1F58A}\uFE0F",
  "\u{1F58B}\uFE0F",
  "\u{1F58C}\uFE0F",
  "\u{1F58D}\uFE0F",
  "\u{1F549}\uFE0F",
  "\u{1F237}\uFE0F",
  "\u{1F170}\uFE0F",
  "\u{1F171}\uFE0F",
  "\u{1F17E}\uFE0F",
  "\u{1F17F}\uFE0F",
  "\u{1F202}\uFE0F",
  "0\uFE0F\u20E3",
  "1\uFE0F\u20E3",
  "2\uFE0F\u20E3",
  "3\uFE0F\u20E3",
  "4\uFE0F\u20E3",
  "5\uFE0F\u20E3",
  "6\uFE0F\u20E3",
  "7\uFE0F\u20E3",
  "8\uFE0F\u20E3",
  "9\uFE0F\u20E3",
  "#\uFE0F\u20E3",
  "*\uFE0F\u20E3",
  "\u{1F5E8}\uFE0F",
  "\u{1F5EF}\uFE0F",
  "\u{1F3F3}\uFE0F",
  "\u{1F600}",
  "\u{1F603}",
  "\u{1F604}",
  "\u{1F601}",
  "\u{1F606}",
  "\u{1F979}",
  "\u{1F605}",
  "\u{1F602}",
  "\u{1F923}",
  "\u{1F972}",
  "\u263A\uFE0F",
  "\u{1F60A}",
  "\u{1F607}",
  "\u{1F642}",
  "\u{1F643}",
  "\u{1F609}",
  "\u{1F60C}",
  "\u{1F60D}",
  "\u{1F970}",
  "\u{1F618}",
  "\u{1F617}",
  "\u{1F619}",
  "\u{1F61A}",
  "\u{1F60B}",
  "\u{1F61B}",
  "\u{1F61D}",
  "\u{1F61C}",
  "\u{1F92A}",
  "\u{1F928}",
  "\u{1F9D0}",
  "\u{1F913}",
  "\u{1F60E}",
  "\u{1F978}",
  "\u{1F929}",
  "\u{1F973}",
  "\u{1F60F}",
  "\u{1F612}",
  "\u{1F61E}",
  "\u{1F614}",
  "\u{1F61F}",
  "\u{1F615}",
  "\u{1F641}",
  "\u2639\uFE0F",
  "\u{1F623}",
  "\u{1F616}",
  "\u{1F62B}",
  "\u{1F629}",
  "\u{1F97A}",
  "\u{1F622}",
  "\u{1F62D}",
  "\u{1F624}",
  "\u{1F620}",
  "\u{1F621}",
  "\u{1F92C}",
  "\u{1F92F}",
  "\u{1F633}",
  "\u{1F975}",
  "\u{1F976}",
  "\u{1F631}",
  "\u{1F628}",
  "\u{1F630}",
  "\u{1F625}",
  "\u{1F613}",
  "\u{1F917}",
  "\u{1F914}",
  "\u{1FAE3}",
  "\u{1F92D}",
  "\u{1FAE2}",
  "\u{1FAE1}",
  "\u{1F92B}",
  "\u{1FAE0}",
  "\u{1F925}",
  "\u{1F636}",
  "\u{1FAE5}",
  "\u{1F610}",
  "\u{1FAE4}",
  "\u{1F611}",
  "\u{1FAE8}",
  "\u{1F62C}",
  "\u{1F644}",
  "\u{1F62F}",
  "\u{1F626}",
  "\u{1F627}",
  "\u{1F62E}",
  "\u{1F632}",
  "\u{1F971}",
  "\u{1F634}",
  "\u{1F924}",
  "\u{1F62A}",
  "\u{1F635}",
  "\u{1F910}",
  "\u{1F974}",
  "\u{1F922}",
  "\u{1F92E}",
  "\u{1F927}",
  "\u{1F637}",
  "\u{1F912}",
  "\u{1F915}",
  "\u{1F911}",
  "\u{1F920}",
  "\u{1F608}",
  "\u{1F47F}",
  "\u{1F479}",
  "\u{1F47A}",
  "\u{1F921}",
  "\u{1F4A9}",
  "\u{1F47B}",
  "\u{1F480}",
  "\u2620\uFE0F",
  "\u{1F47D}",
  "\u{1F47E}",
  "\u{1F916}",
  "\u{1F383}",
  "\u{1F63A}",
  "\u{1F638}",
  "\u{1F639}",
  "\u{1F63B}",
  "\u{1F63C}",
  "\u{1F63D}",
  "\u{1F640}",
  "\u{1F63F}",
  "\u{1F63E}",
  "\u{1F91D}",
  "\u{1FAF6}",
  "\u{1F932}",
  "\u{1F450}",
  "\u{1F64C}",
  "\u{1F44F}",
  "\u{1F44D}",
  "\u{1F44E}",
  "\u{1F44A}",
  "\u{1F91B}",
  "\u{1F91C}",
  "\u{1FAF7}",
  "\u{1FAF8}",
  "\u{1F91E}",
  "\u270C\uFE0F",
  "\u{1FAF0}",
  "\u{1F91F}",
  "\u{1F918}",
  "\u{1F44C}",
  "\u{1F90C}",
  "\u{1F90F}",
  "\u{1FAF3}",
  "\u{1FAF4}",
  "\u{1F448}",
  "\u{1F449}",
  "\u{1F446}",
  "\u{1F447}",
  "\u261D\uFE0F",
  "\u{1F91A}",
  "\u{1F596}",
  "\u{1F44B}",
  "\u{1F919}",
  "\u{1FAF2}",
  "\u{1FAF1}",
  "\u{1F4AA}",
  "\u{1F9BE}",
  "\u{1F595}",
  "\u270D\uFE0F",
  "\u{1F64F}",
  "\u{1FAF5}",
  "\u{1F9B6}",
  "\u{1F9B5}",
  "\u{1F9BF}",
  "\u{1F484}",
  "\u{1F48B}",
  "\u{1F444}",
  "\u{1FAE6}",
  "\u{1F9B7}",
  "\u{1F445}",
  "\u{1F442}",
  "\u{1F9BB}",
  "\u{1F443}",
  "\u{1F463}",
  "\u{1F440}",
  "\u{1FAC0}",
  "\u{1FAC1}",
  "\u{1F9E0}",
  "\u{1F464}",
  "\u{1F465}",
  "\u{1FAC2}",
  "\u{1F476}",
  "\u{1F9D2}",
  "\u{1F467}",
  "\u{1F466}",
  "\u{1F9D1}",
  "\u{1F469}",
  "\u{1F468}",
  "\u{1F471}",
  "\u{1F9D4}",
  "\u{1F9D3}",
  "\u{1F475}",
  "\u{1F474}",
  "\u{1F472}",
  "\u{1F473}",
  "\u{1F9D5}",
  "\u{1F46E}",
  "\u{1F477}",
  "\u{1F482}",
  "\u{1F470}",
  "\u{1F935}",
  "\u{1FAC5}",
  "\u{1F478}",
  "\u{1F934}",
  "\u{1F9B8}",
  "\u{1F9B9}",
  "\u{1F977}",
  "\u{1F936}",
  "\u{1F385}",
  "\u{1F9D9}",
  "\u{1F9DD}",
  "\u{1F9CC}",
  "\u{1F9DB}",
  "\u{1F9DF}",
  "\u{1F9DE}",
  "\u{1F9DC}",
  "\u{1F9DA}",
  "\u{1F47C}",
  "\u{1FAC4}",
  "\u{1F930}",
  "\u{1FAC3}",
  "\u{1F931}",
  "\u{1F647}",
  "\u{1F481}",
  "\u{1F645}",
  "\u{1F646}",
  "\u{1F64B}",
  "\u{1F9CF}",
  "\u{1F926}",
  "\u{1F937}",
  "\u{1F64E}",
  "\u{1F64D}",
  "\u{1F487}",
  "\u{1F486}",
  "\u{1F9D6}",
  "\u{1F485}",
  "\u{1F933}",
  "\u{1F483}",
  "\u{1F57A}",
  "\u{1F46F}",
  "\u{1F6B6}",
  "\u{1F9CE}",
  "\u{1F3C3}",
  "\u{1F9CD}",
  "\u{1F46B}",
  "\u{1F46D}",
  "\u{1F46C}",
  "\u{1F491}",
  "\u{1F48F}",
  "\u{1F46A}",
  "\u{1FAA2}",
  "\u{1F9F6}",
  "\u{1F9F5}",
  "\u{1FAA1}",
  "\u{1F9E5}",
  "\u{1F97C}",
  "\u{1F9BA}",
  "\u{1F45A}",
  "\u{1F455}",
  "\u{1F456}",
  "\u{1FA72}",
  "\u{1FA73}",
  "\u{1F454}",
  "\u{1F457}",
  "\u{1F459}",
  "\u{1FA71}",
  "\u{1F458}",
  "\u{1F97B}",
  "\u{1FA74}",
  "\u{1F97F}",
  "\u{1F460}",
  "\u{1F461}",
  "\u{1F462}",
  "\u{1F45E}",
  "\u{1F45F}",
  "\u{1F97E}",
  "\u{1F9E6}",
  "\u{1F9E4}",
  "\u{1F9E3}",
  "\u{1F3A9}",
  "\u{1F9E2}",
  "\u{1F452}",
  "\u{1F393}",
  "\u26D1\uFE0F",
  "\u{1FA96}",
  "\u{1F451}",
  "\u{1F48D}",
  "\u{1F45D}",
  "\u{1F45B}",
  "\u{1F45C}",
  "\u{1F4BC}",
  "\u{1F392}",
  "\u{1F9F3}",
  "\u{1F453}",
  "\u{1F97D}",
  "\u{1F302}",
  "\u{1F436}",
  "\u{1F431}",
  "\u{1F42D}",
  "\u{1F439}",
  "\u{1F430}",
  "\u{1F98A}",
  "\u{1F43B}",
  "\u{1F43C}",
  "\u{1F428}",
  "\u{1F42F}",
  "\u{1F981}",
  "\u{1F42E}",
  "\u{1F437}",
  "\u{1F43D}",
  "\u{1F438}",
  "\u{1F435}",
  "\u{1F648}",
  "\u{1F649}",
  "\u{1F64A}",
  "\u{1F412}",
  "\u{1F414}",
  "\u{1F427}",
  "\u{1F426}",
  "\u{1F424}",
  "\u{1F423}",
  "\u{1F425}",
  "\u{1FABF}",
  "\u{1F986}",
  "\u{1F985}",
  "\u{1F989}",
  "\u{1F987}",
  "\u{1F43A}",
  "\u{1F417}",
  "\u{1F434}",
  "\u{1F984}",
  "\u{1FACE}",
  "\u{1F41D}",
  "\u{1FAB1}",
  "\u{1F41B}",
  "\u{1F98B}",
  "\u{1F40C}",
  "\u{1F41E}",
  "\u{1F41C}",
  "\u{1FAB0}",
  "\u{1FAB2}",
  "\u{1FAB3}",
  "\u{1F99F}",
  "\u{1F997}",
  "\u{1F982}",
  "\u{1F422}",
  "\u{1F40D}",
  "\u{1F98E}",
  "\u{1F996}",
  "\u{1F995}",
  "\u{1F419}",
  "\u{1F991}",
  "\u{1FABC}",
  "\u{1F990}",
  "\u{1F99E}",
  "\u{1F980}",
  "\u{1F421}",
  "\u{1F420}",
  "\u{1F41F}",
  "\u{1F42C}",
  "\u{1F433}",
  "\u{1F40B}",
  "\u{1F988}",
  "\u{1F9AD}",
  "\u{1F40A}",
  "\u{1F405}",
  "\u{1F406}",
  "\u{1F993}",
  "\u{1F98D}",
  "\u{1F9A7}",
  "\u{1F9A3}",
  "\u{1F418}",
  "\u{1F99B}",
  "\u{1F98F}",
  "\u{1F42A}",
  "\u{1F42B}",
  "\u{1F992}",
  "\u{1F998}",
  "\u{1F9AC}",
  "\u{1F403}",
  "\u{1F402}",
  "\u{1F404}",
  "\u{1FACF}",
  "\u{1F40E}",
  "\u{1F416}",
  "\u{1F40F}",
  "\u{1F411}",
  "\u{1F999}",
  "\u{1F410}",
  "\u{1F98C}",
  "\u{1F415}",
  "\u{1F429}",
  "\u{1F9AE}",
  "\u{1F408}",
  "\u{1FAB6}",
  "\u{1FABD}",
  "\u{1F413}",
  "\u{1F983}",
  "\u{1F9A4}",
  "\u{1F99A}",
  "\u{1F99C}",
  "\u{1F9A2}",
  "\u{1F9A9}",
  "\u{1F407}",
  "\u{1F99D}",
  "\u{1F9A8}",
  "\u{1F9A1}",
  "\u{1F9AB}",
  "\u{1F9A6}",
  "\u{1F9A5}",
  "\u{1F401}",
  "\u{1F400}",
  "\u{1F994}",
  "\u{1F43E}",
  "\u{1F409}",
  "\u{1F432}",
  "\u{1F335}",
  "\u{1F384}",
  "\u{1F332}",
  "\u{1F333}",
  "\u{1F334}",
  "\u{1FAB5}",
  "\u{1F331}",
  "\u{1F33F}",
  "\u2618\uFE0F",
  "\u{1F340}",
  "\u{1F38D}",
  "\u{1FAB4}",
  "\u{1F38B}",
  "\u{1F343}",
  "\u{1F342}",
  "\u{1F341}",
  "\u{1FABA}",
  "\u{1FAB9}",
  "\u{1F344}",
  "\u{1F41A}",
  "\u{1FAB8}",
  "\u{1FAA8}",
  "\u{1F33E}",
  "\u{1F490}",
  "\u{1F337}",
  "\u{1F339}",
  "\u{1F940}",
  "\u{1FABB}",
  "\u{1FAB7}",
  "\u{1F33A}",
  "\u{1F338}",
  "\u{1F33C}",
  "\u{1F33B}",
  "\u{1F31E}",
  "\u{1F31D}",
  "\u{1F31B}",
  "\u{1F31C}",
  "\u{1F31A}",
  "\u{1F315}",
  "\u{1F316}",
  "\u{1F317}",
  "\u{1F318}",
  "\u{1F311}",
  "\u{1F312}",
  "\u{1F313}",
  "\u{1F314}",
  "\u{1F319}",
  "\u{1F30E}",
  "\u{1F30D}",
  "\u{1F30F}",
  "\u{1FA90}",
  "\u{1F4AB}",
  "\u{1F31F}",
  "\u2604\uFE0F",
  "\u{1F4A5}",
  "\u{1F525}",
  "\u{1F308}",
  "\u2600\uFE0F",
  "\u2601\uFE0F",
  "\u26C8\uFE0F",
  "\u2744\uFE0F",
  "\u2603\uFE0F",
  "\u{1F4A8}",
  "\u{1F4A7}",
  "\u{1F4A6}",
  "\u{1FAE7}",
  "\u2602\uFE0F",
  "\u{1F30A}",
  "\u{1F34F}",
  "\u{1F34E}",
  "\u{1F350}",
  "\u{1F34A}",
  "\u{1F34B}",
  "\u{1F34C}",
  "\u{1F349}",
  "\u{1F347}",
  "\u{1F353}",
  "\u{1FAD0}",
  "\u{1F348}",
  "\u{1F352}",
  "\u{1F351}",
  "\u{1F96D}",
  "\u{1F34D}",
  "\u{1F965}",
  "\u{1F95D}",
  "\u{1F345}",
  "\u{1F346}",
  "\u{1F951}",
  "\u{1FADB}",
  "\u{1F966}",
  "\u{1F96C}",
  "\u{1F952}",
  "\u{1FAD1}",
  "\u{1F33D}",
  "\u{1F955}",
  "\u{1FAD2}",
  "\u{1F9C4}",
  "\u{1F9C5}",
  "\u{1F954}",
  "\u{1F360}",
  "\u{1FADA}",
  "\u{1F950}",
  "\u{1F96F}",
  "\u{1F35E}",
  "\u{1F956}",
  "\u{1F968}",
  "\u{1F9C0}",
  "\u{1F95A}",
  "\u{1F373}",
  "\u{1F9C8}",
  "\u{1F95E}",
  "\u{1F9C7}",
  "\u{1F953}",
  "\u{1F969}",
  "\u{1F357}",
  "\u{1F356}",
  "\u{1F9B4}",
  "\u{1F32D}",
  "\u{1F354}",
  "\u{1F35F}",
  "\u{1F355}",
  "\u{1FAD3}",
  "\u{1F96A}",
  "\u{1F959}",
  "\u{1F9C6}",
  "\u{1F32E}",
  "\u{1F32F}",
  "\u{1FAD4}",
  "\u{1F957}",
  "\u{1F958}",
  "\u{1FAD5}",
  "\u{1F96B}",
  "\u{1FAD9}",
  "\u{1F35D}",
  "\u{1F35C}",
  "\u{1F372}",
  "\u{1F35B}",
  "\u{1F363}",
  "\u{1F371}",
  "\u{1F95F}",
  "\u{1F9AA}",
  "\u{1F364}",
  "\u{1F359}",
  "\u{1F35A}",
  "\u{1F358}",
  "\u{1F365}",
  "\u{1F960}",
  "\u{1F96E}",
  "\u{1F362}",
  "\u{1F361}",
  "\u{1F367}",
  "\u{1F368}",
  "\u{1F366}",
  "\u{1F967}",
  "\u{1F9C1}",
  "\u{1F370}",
  "\u{1F382}",
  "\u{1F36E}",
  "\u{1F36D}",
  "\u{1F36C}",
  "\u{1F36B}",
  "\u{1F37F}",
  "\u{1F369}",
  "\u{1F36A}",
  "\u{1F330}",
  "\u{1F95C}",
  "\u{1FAD8}",
  "\u{1F36F}",
  "\u{1F95B}",
  "\u{1FAD7}",
  "\u{1F37C}",
  "\u{1FAD6}",
  "\u{1F375}",
  "\u{1F9C9}",
  "\u{1F9C3}",
  "\u{1F964}",
  "\u{1F9CB}",
  "\u{1F376}",
  "\u{1F37A}",
  "\u{1F37B}",
  "\u{1F942}",
  "\u{1F377}",
  "\u{1F943}",
  "\u{1F378}",
  "\u{1F379}",
  "\u{1F37E}",
  "\u{1F9CA}",
  "\u{1F944}",
  "\u{1F374}",
  "\u{1F963}",
  "\u{1F961}",
  "\u{1F962}",
  "\u{1F9C2}",
  "\u{1F3C0}",
  "\u{1F3C8}",
  "\u{1F94E}",
  "\u{1F3BE}",
  "\u{1F3D0}",
  "\u{1F3C9}",
  "\u{1F94F}",
  "\u{1F3B1}",
  "\u{1FA80}",
  "\u{1F3D3}",
  "\u{1F3F8}",
  "\u{1F3D2}",
  "\u{1F3D1}",
  "\u{1F94D}",
  "\u{1F3CF}",
  "\u{1FA83}",
  "\u{1F945}",
  "\u{1FA81}",
  "\u{1F6DD}",
  "\u{1F3F9}",
  "\u{1F3A3}",
  "\u{1F93F}",
  "\u{1F94A}",
  "\u{1F94B}",
  "\u{1F3BD}",
  "\u{1F6F9}",
  "\u{1F6FC}",
  "\u{1F6F7}",
  "\u26F8\uFE0F",
  "\u{1F94C}",
  "\u{1F3BF}",
  "\u26F7\uFE0F",
  "\u{1F3C2}",
  "\u{1FA82}",
  "\u{1F93C}",
  "\u{1F938}",
  "\u26F9\uFE0F",
  "\u{1F93A}",
  "\u{1F93E}",
  "\u{1F3C7}",
  "\u{1F9D8}",
  "\u{1F3C4}",
  "\u{1F3CA}",
  "\u{1F93D}",
  "\u{1F6A3}",
  "\u{1F9D7}",
  "\u{1F6B5}",
  "\u{1F6B4}",
  "\u{1F3C6}",
  "\u{1F947}",
  "\u{1F948}",
  "\u{1F949}",
  "\u{1F3C5}",
  "\u{1F3AB}",
  "\u{1F3AA}",
  "\u{1F939}",
  "\u{1F3AD}",
  "\u{1FA70}",
  "\u{1F3A8}",
  "\u{1F3AC}",
  "\u{1F3A4}",
  "\u{1F3A7}",
  "\u{1F3BC}",
  "\u{1F3B9}",
  "\u{1FA87}",
  "\u{1F941}",
  "\u{1FA98}",
  "\u{1F3B7}",
  "\u{1F3BA}",
  "\u{1FA97}",
  "\u{1F3B8}",
  "\u{1FA95}",
  "\u{1F3BB}",
  "\u{1FA88}",
  "\u{1F3B2}",
  "\u265F\uFE0F",
  "\u{1F3AF}",
  "\u{1F3B3}",
  "\u{1F3AE}",
  "\u{1F3B0}",
  "\u{1F9E9}",
  "\u{1F697}",
  "\u{1F695}",
  "\u{1F699}",
  "\u{1F6FB}",
  "\u{1F690}",
  "\u{1F68C}",
  "\u{1F68E}",
  "\u{1F693}",
  "\u{1F691}",
  "\u{1F692}",
  "\u{1F69A}",
  "\u{1F69B}",
  "\u{1F69C}",
  "\u{1F9AF}",
  "\u{1F9BD}",
  "\u{1F9BC}",
  "\u{1FA7C}",
  "\u{1F6F4}",
  "\u{1F6B2}",
  "\u{1F6F5}",
  "\u{1F6FA}",
  "\u{1F6DE}",
  "\u{1F6A8}",
  "\u{1F694}",
  "\u{1F68D}",
  "\u{1F698}",
  "\u{1F696}",
  "\u{1F6A1}",
  "\u{1F6A0}",
  "\u{1F69F}",
  "\u{1F683}",
  "\u{1F68B}",
  "\u{1F69E}",
  "\u{1F69D}",
  "\u{1F684}",
  "\u{1F685}",
  "\u{1F688}",
  "\u{1F682}",
  "\u{1F686}",
  "\u{1F687}",
  "\u{1F68A}",
  "\u{1F689}",
  "\u2708\uFE0F",
  "\u{1F6EB}",
  "\u{1F6EC}",
  "\u{1F4BA}",
  "\u{1F680}",
  "\u{1F6F8}",
  "\u{1F681}",
  "\u{1F6F6}",
  "\u{1F6A4}",
  "\u26F4\uFE0F",
  "\u{1F6A2}",
  "\u{1F6DF}",
  "\u{1FA9D}",
  "\u{1F6A7}",
  "\u{1F6A6}",
  "\u{1F6A5}",
  "\u{1F68F}",
  "\u{1F5FF}",
  "\u{1F5FD}",
  "\u{1F5FC}",
  "\u{1F3F0}",
  "\u{1F3EF}",
  "\u{1F3A1}",
  "\u{1F3A2}",
  "\u{1F3A0}",
  "\u26F1\uFE0F",
  "\u{1F30B}",
  "\u26F0\uFE0F",
  "\u{1F5FB}",
  "\u{1F3E0}",
  "\u{1F3E1}",
  "\u{1F6D6}",
  "\u{1F3ED}",
  "\u{1F3E2}",
  "\u{1F3EC}",
  "\u{1F3E3}",
  "\u{1F3E4}",
  "\u{1F3E5}",
  "\u{1F3E6}",
  "\u{1F3E8}",
  "\u{1F3EA}",
  "\u{1F3EB}",
  "\u{1F3E9}",
  "\u{1F492}",
  "\u{1F54C}",
  "\u{1F54D}",
  "\u{1F6D5}",
  "\u{1F54B}",
  "\u26E9\uFE0F",
  "\u{1F5FE}",
  "\u{1F391}",
  "\u{1F305}",
  "\u{1F304}",
  "\u{1F320}",
  "\u{1F387}",
  "\u{1F386}",
  "\u{1F307}",
  "\u{1F306}",
  "\u{1F303}",
  "\u{1F30C}",
  "\u{1F309}",
  "\u{1F301}",
  "\u{1F4F1}",
  "\u{1F4F2}",
  "\u{1F4BB}",
  "\u2328\uFE0F",
  "\u{1F4BD}",
  "\u{1F4BE}",
  "\u{1F4BF}",
  "\u{1F4C0}",
  "\u{1F4FC}",
  "\u{1F4F7}",
  "\u{1F4F8}",
  "\u{1F4F9}",
  "\u{1F3A5}",
  "\u{1F4DE}",
  "\u260E\uFE0F",
  "\u{1F4DF}",
  "\u{1F4E0}",
  "\u{1F4FA}",
  "\u{1F4FB}",
  "\u{1F9ED}",
  "\u23F1\uFE0F",
  "\u23F2\uFE0F",
  "\u{1F4E1}",
  "\u{1F50B}",
  "\u{1FAAB}",
  "\u{1F50C}",
  "\u{1F4A1}",
  "\u{1F526}",
  "\u{1FA94}",
  "\u{1F9EF}",
  "\u{1F4B8}",
  "\u{1F4B5}",
  "\u{1F4B4}",
  "\u{1F4B6}",
  "\u{1F4B7}",
  "\u{1FA99}",
  "\u{1F4B0}",
  "\u{1F4B3}",
  "\u{1FAAA}",
  "\u{1F48E}",
  "\u2696\uFE0F",
  "\u{1FA9C}",
  "\u{1F9F0}",
  "\u{1FA9B}",
  "\u{1F527}",
  "\u{1F528}",
  "\u2692\uFE0F",
  "\u26CF\uFE0F",
  "\u{1FA9A}",
  "\u{1F529}",
  "\u2699\uFE0F",
  "\u{1FAA4}",
  "\u{1F9F1}",
  "\u26D3\uFE0F",
  "\u{1F9F2}",
  "\u{1F52B}",
  "\u{1F4A3}",
  "\u{1F9E8}",
  "\u{1FA93}",
  "\u{1F52A}",
  "\u2694\uFE0F",
  "\u{1F6AC}",
  "\u26B0\uFE0F",
  "\u{1FAA6}",
  "\u26B1\uFE0F",
  "\u{1F3FA}",
  "\u{1F52E}",
  "\u{1F4FF}",
  "\u{1F9FF}",
  "\u{1FAAC}",
  "\u{1F488}",
  "\u2697\uFE0F",
  "\u{1F52D}",
  "\u{1F52C}",
  "\u{1FA7B}",
  "\u{1FA79}",
  "\u{1FA7A}",
  "\u{1F48A}",
  "\u{1F489}",
  "\u{1FA78}",
  "\u{1F9EC}",
  "\u{1F9A0}",
  "\u{1F9EB}",
  "\u{1F9EA}",
  "\u{1F9F9}",
  "\u{1FAA0}",
  "\u{1F9FA}",
  "\u{1F9FB}",
  "\u{1F6BD}",
  "\u{1F6B0}",
  "\u{1F6BF}",
  "\u{1F6C1}",
  "\u{1F6C0}",
  "\u{1F9FC}",
  "\u{1FAA5}",
  "\u{1FA92}",
  "\u{1FAAE}",
  "\u{1F9FD}",
  "\u{1FAA3}",
  "\u{1F9F4}",
  "\u{1F511}",
  "\u{1F6AA}",
  "\u{1FA91}",
  "\u{1F6CC}",
  "\u{1F9F8}",
  "\u{1FA86}",
  "\u{1FA9E}",
  "\u{1FA9F}",
  "\u{1F6D2}",
  "\u{1F381}",
  "\u{1F388}",
  "\u{1F38F}",
  "\u{1F380}",
  "\u{1FA84}",
  "\u{1FA85}",
  "\u{1F38A}",
  "\u{1F389}",
  "\u{1F38E}",
  "\u{1FAAD}",
  "\u{1F3EE}",
  "\u{1F390}",
  "\u{1FAA9}",
  "\u{1F9E7}",
  "\u2709\uFE0F",
  "\u{1F4E9}",
  "\u{1F4E8}",
  "\u{1F4E7}",
  "\u{1F48C}",
  "\u{1F4E5}",
  "\u{1F4E4}",
  "\u{1F4E6}",
  "\u{1FAA7}",
  "\u{1F4EA}",
  "\u{1F4EB}",
  "\u{1F4EC}",
  "\u{1F4ED}",
  "\u{1F4EE}",
  "\u{1F4EF}",
  "\u{1F4DC}",
  "\u{1F4C3}",
  "\u{1F4C4}",
  "\u{1F4D1}",
  "\u{1F9FE}",
  "\u{1F4CA}",
  "\u{1F4C8}",
  "\u{1F4C9}",
  "\u{1F4C6}",
  "\u{1F4C5}",
  "\u{1F4C7}",
  "\u{1F4CB}",
  "\u{1F4C1}",
  "\u{1F4C2}",
  "\u{1F4F0}",
  "\u{1F4D3}",
  "\u{1F4D4}",
  "\u{1F4D2}",
  "\u{1F4D5}",
  "\u{1F4D7}",
  "\u{1F4D8}",
  "\u{1F4D9}",
  "\u{1F4DA}",
  "\u{1F4D6}",
  "\u{1F516}",
  "\u{1F9F7}",
  "\u{1F517}",
  "\u{1F4CE}",
  "\u{1F4D0}",
  "\u{1F4CF}",
  "\u{1F9EE}",
  "\u{1F4CC}",
  "\u{1F4CD}",
  "\u2702\uFE0F",
  "\u2712\uFE0F",
  "\u{1F4DD}",
  "\u270F\uFE0F",
  "\u{1F50D}",
  "\u{1F50E}",
  "\u{1F50F}",
  "\u{1F510}",
  "\u{1F512}",
  "\u{1F513}",
  "\u{1FA77}",
  "\u2764\uFE0F",
  "\u{1F9E1}",
  "\u{1F49B}",
  "\u{1F49A}",
  "\u{1FA75}",
  "\u{1F499}",
  "\u{1F49C}",
  "\u{1F5A4}",
  "\u{1FA76}",
  "\u{1F90D}",
  "\u{1F90E}",
  "\u{1F494}",
  "\u2763\uFE0F",
  "\u{1F495}",
  "\u{1F49E}",
  "\u{1F493}",
  "\u{1F497}",
  "\u{1F496}",
  "\u{1F498}",
  "\u{1F49D}",
  "\u{1F49F}",
  "\u262E\uFE0F",
  "\u271D\uFE0F",
  "\u262A\uFE0F",
  "\u2638\uFE0F",
  "\u{1FAAF}",
  "\u2721\uFE0F",
  "\u{1F52F}",
  "\u{1F54E}",
  "\u262F\uFE0F",
  "\u2626\uFE0F",
  "\u{1F6D0}",
  "\u{1F194}",
  "\u269B\uFE0F",
  "\u{1F251}",
  "\u2622\uFE0F",
  "\u2623\uFE0F",
  "\u{1F4F4}",
  "\u{1F4F3}",
  "\u{1F236}",
  "\u{1F21A}",
  "\u{1F238}",
  "\u{1F23A}",
  "\u2734\uFE0F",
  "\u{1F19A}",
  "\u{1F4AE}",
  "\u{1F250}",
  "\u3299\uFE0F",
  "\u3297\uFE0F",
  "\u{1F234}",
  "\u{1F235}",
  "\u{1F239}",
  "\u{1F232}",
  "\u{1F18E}",
  "\u{1F191}",
  "\u{1F198}",
  "\u{1F6D1}",
  "\u{1F4DB}",
  "\u{1F6AB}",
  "\u{1F4AF}",
  "\u{1F4A2}",
  "\u2668\uFE0F",
  "\u{1F6B7}",
  "\u{1F6AF}",
  "\u{1F6B3}",
  "\u{1F6B1}",
  "\u{1F51E}",
  "\u{1F4F5}",
  "\u{1F6AD}",
  "\u203C\uFE0F",
  "\u2049\uFE0F",
  "\u{1F505}",
  "\u{1F506}",
  "\u303D\uFE0F",
  "\u26A0\uFE0F",
  "\u{1F6B8}",
  "\u{1F531}",
  "\u269C\uFE0F",
  "\u{1F530}",
  "\u267B\uFE0F",
  "\u{1F22F}",
  "\u{1F4B9}",
  "\u2747\uFE0F",
  "\u2733\uFE0F",
  "\u{1F310}",
  "\u{1F4A0}",
  "\u24C2\uFE0F",
  "\u{1F300}",
  "\u{1F4A4}",
  "\u{1F3E7}",
  "\u{1F6BE}",
  "\u{1F6D7}",
  "\u{1F233}",
  "\u{1F6C2}",
  "\u{1F6C3}",
  "\u{1F6C4}",
  "\u{1F6C5}",
  "\u{1F6DC}",
  "\u{1F6B9}",
  "\u{1F6BA}",
  "\u{1F6BC}",
  "\u{1F6BB}",
  "\u{1F6AE}",
  "\u{1F3A6}",
  "\u{1F4F6}",
  "\u{1F201}",
  "\u{1F523}",
  "\u2139\uFE0F",
  "\u{1F524}",
  "\u{1F521}",
  "\u{1F520}",
  "\u{1F196}",
  "\u{1F197}",
  "\u{1F199}",
  "\u{1F192}",
  "\u{1F195}",
  "\u{1F193}",
  "\u{1F51F}",
  "\u{1F522}",
  "\u23CF\uFE0F",
  "\u25B6\uFE0F",
  "\u23F8\uFE0F",
  "\u23EF\uFE0F",
  "\u23F9\uFE0F",
  "\u23FA\uFE0F",
  "\u23ED\uFE0F",
  "\u23EE\uFE0F",
  "\u25C0\uFE0F",
  "\u{1F53C}",
  "\u{1F53D}",
  "\u27A1\uFE0F",
  "\u2B05\uFE0F",
  "\u2B06\uFE0F",
  "\u2B07\uFE0F",
  "\u2197\uFE0F",
  "\u2198\uFE0F",
  "\u2199\uFE0F",
  "\u2196\uFE0F",
  "\u2195\uFE0F",
  "\u2194\uFE0F",
  "\u21AA\uFE0F",
  "\u21A9\uFE0F",
  "\u2934\uFE0F",
  "\u2935\uFE0F",
  "\u{1F500}",
  "\u{1F501}",
  "\u{1F502}",
  "\u{1F504}",
  "\u{1F503}",
  "\u{1F3B5}",
  "\u{1F3B6}",
  "\u2716\uFE0F",
  "\u{1F7F0}",
  "\u267E\uFE0F",
  "\u{1F4B2}",
  "\u{1F4B1}",
  "\u2122\uFE0F",
  "\xA9\uFE0F",
  "\xAE\uFE0F",
  "\u3030\uFE0F",
  "\u{1F51A}",
  "\u{1F519}",
  "\u{1F51B}",
  "\u{1F51D}",
  "\u{1F51C}",
  "\u2714\uFE0F",
  "\u2611\uFE0F",
  "\u{1F518}",
  "\u{1F534}",
  "\u{1F535}",
  "\u{1F7E4}",
  "\u{1F7E3}",
  "\u{1F7E2}",
  "\u{1F7E1}",
  "\u{1F7E0}",
  "\u{1F53A}",
  "\u{1F53B}",
  "\u{1F538}",
  "\u{1F539}",
  "\u{1F536}",
  "\u{1F537}",
  "\u{1F533}",
  "\u{1F532}",
  "\u25AA\uFE0F",
  "\u25AB\uFE0F",
  "\u25FC\uFE0F",
  "\u25FB\uFE0F",
  "\u{1F7E7}",
  "\u{1F7E6}",
  "\u{1F7E5}",
  "\u{1F7EB}",
  "\u{1F7EA}",
  "\u{1F7E9}",
  "\u{1F7E8}",
  "\u{1F508}",
  "\u{1F507}",
  "\u{1F509}",
  "\u{1F50A}",
  "\u{1F514}",
  "\u{1F515}",
  "\u{1F4E3}",
  "\u{1F4E2}",
  "\u{1F4AC}",
  "\u{1F4AD}",
  "\u2660\uFE0F",
  "\u2663\uFE0F",
  "\u2665\uFE0F",
  "\u2666\uFE0F",
  "\u{1F0CF}",
  "\u{1F3B4}",
  "\u{1F004}",
  "\u{1F550}",
  "\u{1F551}",
  "\u{1F552}",
  "\u{1F553}",
  "\u{1F554}",
  "\u{1F555}",
  "\u{1F556}",
  "\u{1F557}",
  "\u{1F558}",
  "\u{1F559}",
  "\u{1F55A}",
  "\u{1F55B}",
  "\u{1F55C}",
  "\u{1F55D}",
  "\u{1F55E}",
  "\u{1F55F}",
  "\u{1F560}",
  "\u{1F561}",
  "\u{1F562}",
  "\u{1F563}",
  "\u{1F564}",
  "\u{1F565}",
  "\u{1F566}",
  "\u{1F567}",
  "\u2640\uFE0F",
  "\u2642\uFE0F",
  "\u2695\uFE0F",
  "\u{1F1FF}",
  "\u{1F1FE}",
  "\u{1F1FD}",
  "\u{1F1FC}",
  "\u{1F1FB}",
  "\u{1F1FA}",
  "\u{1F1F9}",
  "\u{1F1F8}",
  "\u{1F1F7}",
  "\u{1F1F6}",
  "\u{1F1F5}",
  "\u{1F1F4}",
  "\u{1F1F3}",
  "\u{1F1F2}",
  "\u{1F1F1}",
  "\u{1F1F0}",
  "\u{1F1EF}",
  "\u{1F1EE}",
  "\u{1F1ED}",
  "\u{1F1EC}",
  "\u{1F1EB}",
  "\u{1F1EA}",
  "\u{1F1E9}",
  "\u{1F1E8}",
  "\u{1F1E7}",
  "\u{1F1E6}",
  "\u{1F3F4}",
  "\u{1F3C1}",
  "\u{1F6A9}",
  "\u{1F38C}",
  "\u270A",
  "\u270B",
  "\u2B50",
  "\u2728",
  "\u26A1",
  "\u26C5",
  "\u26C4",
  "\u2614",
  "\u2615",
  "\u26BD",
  "\u26BE",
  "\u26F3",
  "\u26F5",
  "\u2693",
  "\u26FD",
  "\u26F2",
  "\u26FA",
  "\u26EA",
  "\u231A",
  "\u23F0",
  "\u231B",
  "\u23F3",
  "\u26CE",
  "\u2648",
  "\u2649",
  "\u264A",
  "\u264B",
  "\u264C",
  "\u264D",
  "\u264E",
  "\u264F",
  "\u2650",
  "\u2651",
  "\u2652",
  "\u2653",
  "\u274C",
  "\u2B55",
  "\u26D4",
  "\u2757",
  "\u2755",
  "\u2753",
  "\u2754",
  "\u2705",
  "\u274E",
  "\u267F",
  "\u23E9",
  "\u23EA",
  "\u23EB",
  "\u23EC",
  "\u2795",
  "\u2796",
  "\u2797",
  "\u27B0",
  "\u27BF",
  "\u26AA",
  "\u26AB",
  "\u25FE",
  "\u25FD",
  "\u2B1B",
  "\u2B1C",
  "\u26A7"
];

// src/utils/emoji-regex.ts
var emojiRegex = new RegExp(
  `<a?:\\w+:(\\d+)>|${emoji_default.join("|").replace(/[+*]/g, (m) => "\\" + m)}`,
  "g"
);

// src/utils/ok.ts
var ok_default = ["\u{1F44C}", "\u{1F197}", "\u{1F44D}", "\u2705"];

// src/utils/select.ts
function select(list) {
  return list[Math.floor(Math.random() * list.length)];
}

// src/commands/poll-reactions.ts
var pollChannels = new CachedMap("./data/poll-reactions.json");
var onReady = pollChannels.read;
function isPollChannel(message) {
  return pollChannels.get(message.channel.id, false);
}
function isPoll(message) {
  return isPollChannel(message) || !!message.content?.includes("(this is a poll)");
}
async function pollChannel(message) {
  if (message.channel instanceof DMChannel || message.channel.lastMessageId === void 0) {
    await message.reply("who're you polling in here just me and you??");
    return;
  }
  if (!message.channel.permissionsFor(message.member).has(PermissionFlagsBits.ManageChannels)) {
    await message.reply(
      "you can't even manage channels, why should i listen to you"
    );
    return;
  }
  if (isPollChannel(message)) {
    await message.reply(
      select([
        "this is already a poll channel though",
        "didn't you already do `poll channel`",
        "that doesn't do anything if this channel already is a poll channel"
      ])
    );
  } else {
    pollChannels.set(message.channel.id, true).save();
    await message.react(select(ok_default));
  }
}
async function notPollChannel(message) {
  if (message.channel instanceof DMChannel || message.channel.lastMessageId === void 0) {
    await message.reply("who're you polling in here just me and you??");
    return;
  }
  if (!message.channel.permissionsFor(message.member).has(PermissionFlagsBits.ManageChannels)) {
    await message.reply(
      "you can't even manage channels, why should i listen to you"
    );
    return;
  }
  if (isPollChannel(message)) {
    pollChannels.set(message.channel.id, false).save();
    await message.react(select(ok_default));
  } else {
    await message.reply(
      select([
        "this isn't a poll channel though",
        "that doesn't do anything if this channel already isn't a poll channel"
      ])
    );
  }
}
function getReactions(message, isNew) {
  if (isPoll(message)) {
    const emoji = message.content.match(emojiRegex) || [];
    if (emoji.length === 0 && isNew) {
      return ["\u{1F44D}", "\u{1F44E}"];
    } else {
      return emoji;
    }
  } else {
    return null;
  }
}

// src/commands/source.ts
var source_exports = {};
__export(source_exports, {
  getDate: () => getDate,
  getReply: () => getReply,
  getReplyFlipped: () => getReplyFlipped,
  getSource: () => getSource,
  getSourceFlipped: () => getSourceFlipped
});
import { AttachmentBuilder } from "discord.js";
async function getMessage(message, [messageId, channelId = message.channel.id]) {
  const channel = await message.client.channels.fetch(channelId).catch(() => null);
  if (!channel) {
    await message.reply(`can't get channel <#${channelId}>`);
    return null;
  }
  if (!channel.isTextBased()) {
    await message.reply(
      `<#${channelId}> is not a channel with messages you fool`
    );
    return null;
  }
  const msg = await channel.messages.fetch(messageId).catch(() => null);
  if (!msg) {
    await message.reply(`can't get the message with id ${messageId}`);
    return null;
  }
  return msg;
}
async function getSource(message, args) {
  const msg = await getMessage(message, args);
  if (!msg) {
    return;
  }
  const useFile = msg.content.length > 1800 || msg.content.includes("```") || msg.content.includes("<a:") || msg.content.includes("<:");
  await message.reply({
    content: select(["here you go", "i n s p e c t", "hmm"]),
    // If the message might be too long for an embed or can't be contained in a
    // code block or has custom emoji, upload a text file
    files: useFile ? [
      new AttachmentBuilder(Buffer.from(msg.content), {
        name: "message.txt"
      })
    ] : void 0,
    embeds: useFile ? void 0 : [
      {
        title: select(["conTENT", "source", "wow", "very cool"]),
        description: msg.content.length > 0 ? `\`\`\`md
${msg.content}
\`\`\`` : select([
          "*the message is EMPTY*",
          "*there is NOTHING*",
          "*no message CONTENT very interest*"
        ])
      }
    ]
  });
}
var getSourceFlipped = async (message, [channelId, messageId]) => getSource(message, [messageId, channelId]);
async function getReply(message, args) {
  const msg = await getMessage(message, args);
  if (!msg) {
    return;
  }
  const replied = msg.reference;
  if (!replied) {
    await message.reply(
      select([
        "they werent replying to anything, look: {}",
        "uhh {} isnt a reply ?",
        "u sure thats a reply? {} cuz i dont see it"
      ]).replace("{}", msg.url)
    );
    return;
  }
  await message.reply(
    select(["it was a reply to {}", "they replied to {}", "{} here"]).replace(
      "{}",
      `https://discord.com/channels/${replied.guildId ?? "@me"}/${replied.channelId}/${replied.messageId}`
    )
  );
}
var getReplyFlipped = async (message, [channelId, messageId]) => getReply(message, [messageId, channelId]);
async function getDate(message, [id = message.author.id]) {
  const timestamp = (BigInt(id) >> 22n) / 1000n + 1420070400n;
  await message.reply(
    select([
      "'twas made %F (%R)",
      "it was created on %F, %R",
      "if my sixth sense is CORRECT it materialised into existence on %F, %R",
      "creation happened %R on %F",
      "on %F, it poofed into existence. that was %R!"
    ]).replace("%F", `<t:${timestamp}:F>`).replace("%R", `<t:${timestamp}:R>`)
  );
}

// src/commands/welcome.ts
var welcome_exports = {};
__export(welcome_exports, {
  onJoin: () => onJoin,
  onMessage: () => onMessage,
  onReady: () => onReady2,
  setWelcome: () => setWelcome
});
import {
  DMChannel as DMChannel2,
  PermissionFlagsBits as PermissionFlagsBits2,
  TextChannel
} from "discord.js";
var welcomeChannels = new CachedMap(
  "./data/welcome-channels.json"
);
var sentienceMsgSent = new CachedMap(
  "./data/sentience-msg-sent.json"
);
var onReady2 = () => Promise.all([welcomeChannels.read(), sentienceMsgSent.read()]);
async function setWelcome(message, [channelId, welcomeMsg]) {
  if (message.channel instanceof DMChannel2 || message.channel.lastMessageId === void 0) {
    await message.reply("no dms");
    return;
  }
  if (!message.channel.permissionsFor(message.member).has(PermissionFlagsBits2.ManageGuild)) {
    await message.reply(
      "why should i obey you if you cant even manage the server lmao"
    );
    return;
  }
  welcomeChannels.set(message.guild.id, { channelId, message: welcomeMsg }).save();
  await message.react(select(ok_default));
}
async function onJoin(member) {
  const { channelId, message } = welcomeChannels.get(member.guild.id) ?? {};
  if (!channelId) return;
  const channel = member.guild.channels.cache.get(channelId);
  if (!(channel instanceof TextChannel)) return;
  await channel.send({
    content: select([
      "Hi, {USER}; please read this:",
      "Welcome, {USER}! Read this:",
      "Hey, {USER}! Let's see if you can read.",
      "{USER}, I have been told to show you this."
    ]).replace("{USER}", member.toString()),
    embeds: [
      {
        description: message,
        footer: {
          text: "Note: I am just a bot, and I have been instructed to repeat this message to all users who join the server."
        }
      }
    ]
  });
}
async function onMessage(message) {
  if (!message.guild) return;
  const { channelId } = welcomeChannels.get(message.guild.id) ?? {};
  if (message.channel.id === channelId && !message.author.bot) {
    if (!sentienceMsgSent.get(`${message.guild.id}-${message.author.id}`)) {
      await message.reply({
        content: message.content.length > 15 ? select([
          "Thanks! You'll be verified... eventually. Bureaucracy is slow.",
          "This message might be enough proof that you're sentient. You can send more if you want, just in case. I'm just a bot.",
          "Cool! I'm just a bot, so I can't tell if this means you're sentient. We'll have to wait and see."
        ]) : select([
          "That's a bit short of a message. Try sending more to prove that you're not a bot, and you'll be verified eventually.",
          "Say more. Couldn't a bot have said that as well? Once you're prove you're human you'll eventually be verified.",
          "The more you write, the better. Show me your definitely human imagination! If your messages are satisfactorily humanlike, you will eventually get verified."
        ]),
        allowedMentions: {
          repliedUser: false
        }
      });
      sentienceMsgSent.set(`${message.guild.id}-${message.author.id}`, true).save();
    }
  }
}

// src/commands/vote-lockdown.ts
var vote_lockdown_exports = {};
__export(vote_lockdown_exports, {
  onReady: () => onReady3,
  setLockdownCategory: () => setLockdownCategory,
  voteLockdown: () => voteLockdown
});
import {
  CategoryChannel,
  DMChannel as DMChannel3,
  PermissionFlagsBits as PermissionFlagsBits3
} from "discord.js";
var lockdownCategories = new CachedMap("./data/lockdown-cats.json");
var lockdownVotes = new CachedMap("./data/lockdown-votes.json");
var onReady3 = () => Promise.all([lockdownCategories.read(), lockdownVotes.read()]);
async function setLockdownCategory(message, [categoryId]) {
  if (message.channel instanceof DMChannel3 || message.channel.lastMessageId === void 0) {
    await message.reply("no dms");
    return;
  }
  if (!message.channel.permissionsFor(message.member).has(PermissionFlagsBits3.ManageChannels)) {
    await message.reply(
      "lol first show me that you can manage chanenls then we talk"
    );
    return;
  }
  lockdownCategories.set(message.guild.id, categoryId).save();
  await message.react(select(ok_default));
}
var MIN_VOTES = 3;
var VOTE_PERIOD = 10 * 60 * 1e3;
async function voteLockdown(message) {
  const categoryId = lockdownCategories.get(message.guild?.id);
  const category = message.guild.channels.cache.get(categoryId);
  if (!(category instanceof CategoryChannel)) {
    await message.reply("server doesn't have category set to lock down");
    return;
  }
  const votes = lockdownVotes.get(message.guild?.id, []);
  const now = Date.now();
  for (let i = 0; i < votes.length; i++) {
    if (now - votes[i].time > VOTE_PERIOD) {
      votes.splice(i--, 1);
    }
  }
  if (votes.find((vote) => vote.user === message.author.id)) {
    lockdownVotes.save();
    await message.reply("tsk tsk, you've already voted in the past 10 min");
    return;
  } else {
    if (votes.length === 0) {
      lockdownVotes.set(message.guild.id, votes);
    }
    votes.push({ time: now, user: message.author.id });
    lockdownVotes.save();
  }
  if (votes.length >= MIN_VOTES) {
    const success = await category.permissionOverwrites.resolve(message.guild.roles.everyone.id).edit({ ViewChannel: null }, "Democracy voted to lock the channel.").then(() => true).catch(() => false);
    await message.channel.send(
      success ? "unverified folk have been BANISHED from the common people's channels" : "unfortunately i lack the perms to change channel perms oopsi"
    );
  } else {
    await message.reply(
      `${votes.length} of the minimum ${MIN_VOTES} votes needed to close off the server from them pesky unverifieds`
    );
  }
}

// src/commands/mentions.ts
var mentions_exports = {};
__export(mentions_exports, {
  onMessage: () => onMessage2,
  onReady: () => onReady4,
  whoPinged: () => whoPinged,
  whoPingedMe: () => whoPingedMe
});
var mentionCache = new CachedMap("./data/mentions.json");
var onReady4 = mentionCache.read;
async function onMessage2(message) {
  const {
    channel: { id: channelId },
    mentions
  } = message;
  if (mentions.everyone || mentions.roles.size > 0 || mentions.users.size > 0) {
    const msg = {
      author: message.author.id,
      content: message.content,
      url: message.url
    };
    if (mentions.everyone) {
      mentionCache.set(`${channelId}-everyone`, msg);
    }
    for (const roleId of mentions.roles.keys()) {
      mentionCache.set(`${channelId}-${roleId}`, { ...msg, role: true });
    }
    if (message.author.id !== message.client.user.id) {
      for (const userId of mentions.users.keys()) {
        mentionCache.set(`${channelId}-${userId}`, msg);
      }
    }
    mentionCache.save();
  }
}
async function whoPinged(message, args) {
  const [targetId, channelId = message.channel.id] = args.length < 2 && message.content.includes("everyone") ? ["everyone", args[0]] : args;
  const lastMention = mentionCache.get(`${channelId}-${targetId}`);
  const them = targetId === "everyone" ? "everyone" : targetId === message.author.id ? "you" : "them";
  if (lastMention) {
    await message.reply({
      embeds: [
        {
          // This breaks if a Nitro user repeats ]( 2000 times in a message,
          // whatever
          description: `<@${lastMention.author}> pinged ${targetId === "everyone" ? "@everyone" : `<@${lastMention.role ? "&" : ""}${targetId}>`} ([link to message](${lastMention.url})):

${lastMention.content.replace(/]\(/g, "]\uFEFF(")}`,
          footer: {
            text: !lastMention.role && targetId !== "everyone" ? "this only shows direct pings to the user, btw, it doesn't factor in role and everyone pings" : ""
          }
        }
      ],
      allowedMentions: {
        repliedUser: false
      }
    });
  } else {
    await message.reply({
      content: select([
        "hmm if someone did ping $them $here then i wasn't paying attention",
        "whoever pinged must have pinged $them before i started tracking pings $here",
        "i dont recall $them being pinged $here, maybe i was offline or smth"
      ]).replace("$them", them).replace(
        "$here",
        channelId === message.channel.id ? "here" : "there"
      ) + (channelId === message.channel.id ? ` (note: if the ping was in a different channel then reply \`who pinged ${targetId} in <channel>\`)` : ""),
      allowedMentions: {
        repliedUser: false
      }
    });
  }
}
async function whoPingedMe(message, [channelId = message.channel.id]) {
  const userMention = mentionCache.get(`${channelId}-${message.author.id}`);
  const possibilities = [mentionCache.get(`${channelId}-everyone`), userMention];
  if (message.member) {
    for (const roleId of message.member.roles.cache.keys()) {
      possibilities.push(mentionCache.get(`${channelId}-${roleId}`));
    }
  }
  const lastMention = possibilities.reduce(
    (acc, curr) => (
      // Using message ID (from URL) to get latest ping. Snowflakes' most
      // significant digits encode the time, so imprecision due to casting a
      // u64 to a f64 should be negligible.
      !acc || curr && +acc.url.split("/").slice(-1)[0] < +curr.url.split("/").slice(-1)[0] ? curr : acc
    ),
    void 0
  );
  if (lastMention) {
    await message.reply({
      embeds: [
        {
          description: `<@${lastMention.author}> [pinged you](${lastMention.url}):

${lastMention.content.replace(/]\(/g, "]\uFEFF(")}`,
          footer: {
            text: lastMention === userMention ? "" : `tip: reply \`who pinged ${message.author.id} in ${channelId}\` to filter out role and everyone pings`
          }
        }
      ],
      allowedMentions: {
        repliedUser: false
      }
    });
  } else {
    await message.reply({
      content: select([
        "i don't remember you getting pinged, maybe i wasn't paying attention",
        "hm you might've been pinged while i was offline",
        "your ping is not in my records, maybe i wasn't tracking pings then"
      ]) + (channelId === message.channel.id ? " (note: if you were pinged in a different channel then reply `who pinged me in <channel>`)" : ""),
      allowedMentions: {
        repliedUser: false
      }
    });
  }
}

// src/commands/avatar.ts
var avatar_exports = {};
__export(avatar_exports, {
  avatar: () => avatar,
  warm: () => warm
});
async function avatar(message, [userId = message.author.id]) {
  const user = await message.client.users.fetch(userId).catch(() => null);
  if (user) {
    await message.reply({
      content: select([
        "too blue for my tastes",
        "why does it look so bad up close",
        "i regret having eyes"
      ]),
      embeds: [
        {
          image: {
            url: user.displayAvatarURL({ extension: "png", size: 4096 })
          }
        }
      ]
    });
  } else {
    await message.reply({
      embeds: [
        {
          description: select([
            `no idea who <@${userId}> is`,
            `<@${userId}>? dont know em`,
            `stop making up people!! <@${userId}> is about as real as the grass you touched this morning: it doesn't exist`
          ])
        }
      ]
    });
  }
}
async function warm(message, [userId]) {
  const user = await message.client.users.fetch(userId).catch(() => null);
  if (user) {
    user.send(
      `You were warmed in [${message.guild?.name ?? "DMs"}](${message.url}). Reason: <@${message.author.id}> thought you needed warmth. \u{1F970}`
    ).catch(() => {
    });
    await message.reply({
      embeds: [
        { color: 16612098, description: `\u{1F970} <@${userId}> has been warmed.` }
      ]
    });
  } else {
    await message.reply({
      embeds: [
        { color: 15286850, description: `\u{1F614} Couldn't warm <@${userId}>.` }
      ]
    });
  }
}

// src/commands/minecraft.ts
var minecraft_exports = {};
__export(minecraft_exports, {
  init: () => init,
  onReady: () => onReady5,
  serverStatus: () => serverStatus,
  track: () => track
});
import { Client, PacketWriter, State } from "mcproto";
var DEFAULT_PORT = "25565";
var EXPIRATION_TIME = 1e3 * 60 * 60 * 24 * 7;
var CHECK_FREQ = 1e3 * 60 * 5;
async function getServerStatus(host, port) {
  const client2 = await Client.connect(host, port);
  client2.send(
    new PacketWriter(0).writeVarInt(404).writeString(host).writeUInt16(port).writeVarInt(State.Status)
  );
  client2.send(new PacketWriter(0));
  const response = await client2.nextPacket(0);
  const {
    players: { max, online, sample: players = [] },
    version: { name: version }
  } = response.readJSON();
  client2.end();
  return { online, max, players, version };
}
async function serverStatus(message, [address]) {
  if (!address) {
    const info = trackChannels.get(message.channel.id);
    if (!info) {
      await message.reply({
        content: "idk what address u want. i default to whatever you set `track:` to but it looks like you arent using that so \u{1F937}"
      });
      return;
    }
    address = `${info.host}:${info.port}`;
  }
  try {
    const [host, port = DEFAULT_PORT] = address.split(":");
    const { online, max, players, version } = await getServerStatus(host, +port);
    await message.reply({
      content: select([
        "fomo time?",
        "let's see who's gaming",
        "tbh i expected more people on"
      ]),
      embeds: [
        {
          title: select([
            `${online}/${max} online`,
            `${online}/${max} gaming rn`,
            `${online}/${max} not touching grass`
          ]),
          description: online > 0 ? players.map(
            ({ name, id }) => `[${name}](https://namemc.com/profile/${id})`
          ).join("\n") || select([
            "server not showing who's on",
            "no players provided",
            "the servers hiding something..."
          ]) : select([
            "no one's on :(",
            "dead server",
            "everyone touching grass today"
          ]),
          footer: {
            text: version
          }
        }
      ]
    });
  } catch (error) {
    await message.reply({
      content: select(["problem!", "can't connect!", "oopsie doopsie"]),
      embeds: [
        {
          color: 15286850,
          description: error instanceof Error ? error.message : String(error)
        }
      ]
    });
  }
}
function createEmbed(suffix = "", color) {
  return ({ id, name }) => ({
    author: {
      name: name + suffix,
      icon_url: `https://cravatar.eu/helmavatar/${id}/64.png`
    },
    color
  });
}
async function check(channel, info, state, start = false) {
  if (Date.now() > info.start + EXPIRATION_TIME) {
    clearInterval(state.timeoutId);
    trackChannels.delete(channel.id).save();
    delete states[channel.id];
    await channel.send({
      content: `It has now been <t:${Math.floor(
        info.start / 1e3
      )}:R> when you asked me to start tracking your server. In case you've stopped playing, I'm going to stop tracking the server now.`,
      embeds: [
        {
          description: `If you would like to continue tracking, reply to this message with \`track: ${info.host}:${info.port}\``
        }
      ]
    });
    return;
  }
  const { online, max, players } = await getServerStatus(
    info.host,
    info.port
  ).catch(
    () => ({
      online: 0,
      max: -1,
      players: [],
      version: ""
    })
  );
  const embeds = start ? players.map(createEmbed(" was already on.")) : [
    // Joined
    ...players.filter(({ id }) => !state.lastPlayers.some((p) => p.id === id)).map(createEmbed(" joined the game.", 2278750)),
    // Left
    ...state.lastPlayers?.filter(({ id }) => !players.some((p) => p.id === id)).map(createEmbed(" left the game.", 15680580))
  ];
  if (start || embeds.length > 0) {
    await channel.send({
      content: `${online}/${Math.max(
        max,
        0
      )} players are on now. I check again <t:${Math.floor(
        (Date.now() + CHECK_FREQ) / 1e3
      )}:R>.${max === -1 ? " **NOTE: Server is offline.**" : ""}`,
      embeds
    });
  }
  state.lastPlayers = players;
}
var trackChannels = new CachedMap("./data/minecraft-track.json");
var onReady5 = trackChannels.read;
var states = {};
async function init(client2) {
  await Promise.all(
    trackChannels.entries().map(async ([channelId, info]) => {
      const channel = await client2.channels.fetch(channelId);
      if (channel?.isTextBased()) {
        states[channelId] = {
          lastPlayers: [],
          timeoutId: setInterval(() => {
            check(channel, info, states[channelId]);
          }, CHECK_FREQ)
        };
        await check(channel, info, states[channelId], true);
      }
    })
  );
}
async function track(message, [address]) {
  if (states[message.channel.id]) {
    clearInterval(states[message.channel.id].timeoutId);
  }
  if (address) {
    const [host, port = DEFAULT_PORT] = address.split(":");
    const state = {
      lastPlayers: [],
      timeoutId: setInterval(() => {
        check(message.channel, info, state);
      }, CHECK_FREQ)
    };
    const info = {
      host,
      port: +port,
      start: Date.now()
    };
    trackChannels.set(message.channel.id, info).save();
    states[message.channel.id] = state;
    await check(message.channel, info, state, true);
  } else {
    const info = trackChannels.get(message.channel.id);
    await message.reply(
      info ? "ok i will stop tracking" : "i don't think i was tracking a server. put the server url after the colon, like `track: yourmom.com`"
    );
    trackChannels.delete(message.channel.id).save();
  }
}

// src/commands/emoji-usage.ts
var emoji_usage_exports = {};
__export(emoji_usage_exports, {
  getUsage: () => getUsage,
  onMessage: () => onMessage3,
  onReact: () => onReact,
  onReady: () => onReady6
});
import {
  GuildEmoji
} from "discord.js";
var customEmojiRegex = /<a?:\w+:(\d+)>/g;
var emojiUsage = new CachedMap("./data/emoji-usage.json");
var onReady6 = emojiUsage.read;
async function getUsage(message) {
  if (!message.guild) {
    await message.reply("i dont track emojis in dms sry");
    return;
  }
  await message.reply({
    embeds: [
      {
        description: Array.from(
          // Force fetch in case emoji changed
          await message.guild.emojis.fetch(void 0, { force: true }),
          ([emojiId, { animated }]) => ({
            emoji: `<${animated ? "a" : ""}:w:${emojiId}>`,
            count: emojiUsage.get(`${message.guildId}-${emojiId}`, 0)
          })
        ).sort((a, b) => b.count - a.count).map(({ emoji, count }) => `${emoji} ${count}`).join("\n")
      }
    ]
  });
}
async function onMessage3(message) {
  if (!message.guildId) {
    return;
  }
  const emojis = new Set(
    Array.from(
      message.content.matchAll(customEmojiRegex),
      ([, emojiId]) => emojiId
    )
  );
  for (const emojiId of emojis) {
    const id = `${message.guildId}-${emojiId}`;
    emojiUsage.set(id, emojiUsage.get(id, 0) + 1);
  }
  emojiUsage.save();
}
async function onReact(reaction) {
  if (reaction.partial) {
    reaction = await reaction.fetch();
  }
  if (reaction.count === 1 && !(reaction.emoji instanceof GuildEmoji && reaction.emoji.guild.id !== reaction.message.guildId)) {
    const id = `${reaction.message.guildId}-${reaction.emoji.id}`;
    emojiUsage.set(id, emojiUsage.get(id, 0) + 1);
  }
  emojiUsage.save();
}

// src/commands/reaction-roles.ts
var reaction_roles_exports = {};
__export(reaction_roles_exports, {
  getReactions: () => getReactions2,
  onReact: () => onReact2
});
import {
  PermissionFlagsBits as PermissionFlagsBits4
} from "discord.js";
async function isMenu(message) {
  if (!message.guild || !message.content.includes("(select roles)")) {
    return false;
  }
  return message.guild.members.fetch(message.author).then((member) => member.permissions.has(PermissionFlagsBits4.ManageRoles)).catch(() => false);
}
var roleMentionRegex = /<@&(\d+)>/;
function parseMenu(content) {
  const roles = {};
  for (const line of content.split("\n")) {
    const roleId = line.match(roleMentionRegex);
    if (!roleId) {
      continue;
    }
    for (const [unicode, customId] of line.matchAll(emojiRegex)) {
      roles[customId ?? unicode] = roleId[1];
    }
  }
  return roles;
}
async function getReactions2(message) {
  if (await isMenu(message)) {
    return Object.keys(parseMenu(message.content));
  } else {
    return null;
  }
}
async function onReact2(reaction, user, added) {
  const message = reaction.message.partial ? await reaction.message.fetch() : reaction.message;
  if (!message.guild || !await isMenu(message)) {
    return;
  }
  const menuAuthor = await message.guild.members.fetch(message.author).catch(() => null);
  if (!menuAuthor?.permissions.has(PermissionFlagsBits4.ManageRoles)) {
    return;
  }
  const roles = parseMenu(message.content);
  const emoji = reaction.emoji.id ?? reaction.emoji.name;
  console.log(roles, emoji);
  if (emoji && roles[emoji]) {
    try {
      const member = await message.guild.members.fetch(user.id);
      if (added) {
        await member.roles.add(roles[emoji]);
      } else {
        await member.roles.remove(roles[emoji]);
      }
    } catch {
      return;
    }
  }
}

// src/commands/ucpd.ts
var ucpd_exports = {};
__export(ucpd_exports, {
  init: () => init2,
  onReady: () => onReady7,
  showReport: () => showReport,
  track: () => track2,
  untrack: () => untrack
});
import { getDocument, VerbosityLevel } from "pdfjs-dist";
var FIELDS = [
  "Date Reported",
  "Incident/Case#",
  "Date Occurred",
  "Time Occurred",
  "Summary",
  "Disposition"
];
var BASE_URL = "https://www.police.ucsd.edu/docs/reports/CallsandArrests/CallsForService/";
async function getReports(fileName) {
  const reports = [];
  const pdf = await getDocument({
    url: BASE_URL + fileName,
    useSystemFonts: true,
    verbosity: VerbosityLevel.ERRORS
  }).promise;
  try {
    for (let i = 1; i <= pdf.numPages; i++) {
      const page = await pdf.getPage(i);
      const { items } = await page.getTextContent();
      const pageText = items.filter((item) => "transform" in item).map(
        (item) => ({
          content: item.str,
          hasEol: item.hasEOL,
          x: item.transform[4],
          y: item.transform[5]
        })
      ).sort(
        // Sort from top to bottom, then left to right
        (a, b) => Math.abs(a.y - b.y) > 0.1 ? b.y - a.y : a.x - b.x
      ).map((t) => t.content).filter((content) => content.trim().length > 0);
      if (pageText[0] !== "UCSD POLICE DEPARTMENT" && pageText[1] !== "CRIME AND FIRE LOG/MEDIA BULLETIN") {
        throw new Error("page does not start with UCPD header");
      }
      pageText.splice(0, 3);
      const indices = [];
      for (const [i2, content] of pageText.entries()) {
        if (content === "Date Reported") {
          indices.push(i2 - 2);
        }
      }
      for (let i2 = 0; i2 < indices.length; i2++) {
        const start = indices[i2];
        const end = indices[i2 + 1] ?? pageText.length;
        const parts = [];
        let j = start;
        for (const field of FIELDS) {
          const fieldStart = j;
          for (; j < end; j++) {
            if (pageText[j] === field || pageText[j] === field + ":") {
              break;
            }
          }
          parts.push(pageText.slice(fieldStart, j));
          j++;
        }
        parts.push(pageText.slice(j, end));
        const [
          dateReported,
          incidentCaseNum,
          dateOccurred,
          timeOccurred,
          summary,
          disposition
        ] = parts.slice(1).map((segments) => segments.join(" "));
        reports.push({
          type: pageText[start],
          location: pageText[start + 1],
          dateReported,
          incidentCaseNum,
          dateOccurred,
          timeOccurred,
          summary,
          disposition
        });
      }
    }
  } finally {
    await pdf.destroy();
  }
  return reports;
}
async function getFileNames() {
  const html = await fetch(
    "https://www.police.ucsd.edu/docs/reports/CallsandArrests/Calls_and_Arrests.asp"
  ).then((r) => r.text());
  return Array.from(
    html.matchAll(/<option value="CallsForService\/([^.]+.pdf)">/g),
    ([, fileName]) => fileName
  );
}
function display(reports) {
  return reports.map(
    ({ type, location, dateOccurred, timeOccurred, summary, disposition }) => [
      `**${type}**${summary ? ": " : ""}${summary}
`,
      disposition ? `Result: ${disposition}
` : "",
      `-# ${dateOccurred} ${timeOccurred} \xB7 ${location}`
    ].join("")
  );
}
function group(strings, separator = "\n\n", maxLength = 4096) {
  const groups = [];
  for (const string of strings) {
    if (groups.length === 0) {
      groups.push(string);
      continue;
    }
    const newGroup = groups[groups.length - 1] + separator + string;
    if (newGroup.length > maxLength) {
      groups.push(string);
    } else {
      groups[groups.length - 1] = newGroup;
    }
  }
  return groups;
}
async function showReport(message, [fileName]) {
  if (!fileName) {
    fileName = (await getFileNames())[0];
  } else if (!fileName.endsWith(".pdf")) {
    fileName += ".pdf";
  }
  try {
    const descriptions = group(display(await getReports(fileName)));
    for (const [i, description] of descriptions.entries()) {
      const msg = {
        content: i === 0 ? select([
          "oh look i did that",
          "my bad",
          "what did u do this time"
        ]) : "",
        embeds: [
          {
            title: descriptions.length === 1 ? fileName : `${fileName} (${i + 1}/${descriptions.length})`,
            url: BASE_URL + encodeURIComponent(fileName),
            description
          }
        ]
      };
      if (i === 0) {
        await message.reply(msg);
      } else {
        await message.channel.send(msg);
      }
    }
  } catch (error) {
    const fileNames = await getFileNames().catch(() => null);
    await message.reply({
      content: select([
        "i shat my pants",
        "i do not support pdf files",
        "issue"
      ]),
      embeds: [
        {
          color: 15286850,
          description: error instanceof Error ? error.message : String(error)
        },
        {
          description: `**Available files**
${fileNames?.join("\n") ?? "(failed to load)"}`
        }
      ]
    });
  }
}
var trackChannels2 = new CachedMap("./data/ucpd-track.json");
var seen = new CachedMap("./data/ucpd-seen.json");
var onReady7 = () => Promise.all([trackChannels2.read(), seen.read()]);
var CHECK_FREQ2 = 2.13 * 60 * 60 * 1e3;
function init2(client2) {
  setInterval(async () => {
    const channels = trackChannels2.entries();
    if (channels.length === 0) {
      return;
    }
    const unseen = (await getFileNames()).filter(
      (fileName2) => !seen.get(fileName2)
    );
    if (unseen.length === 0) {
      return;
    }
    const fileName = unseen[0];
    const descriptions = group(display(await getReports(fileName)));
    const embeds = descriptions.map(
      (description, i) => ({
        title: descriptions.length === 1 ? fileName : `${fileName} (${i + 1}/${descriptions.length})`,
        url: BASE_URL + encodeURIComponent(fileName) + (i === 0 ? "" : `#${i + 1}`),
        description,
        footer: i === descriptions.length - 1 ? {
          text: 'To turn off, reply "i renounce my life of crime"'
        } : void 0
      })
    );
    for (const fileName2 of unseen) {
      seen.set(fileName2, 1);
    }
    await seen.save();
    for (const [channelId] of channels) {
      const channel = await client2.channels.fetch(channelId);
      if (!channel?.isTextBased()) {
        continue;
      }
      for (const [i, embed] of embeds.entries()) {
        const embeds2 = [embed];
        if (unseen.length > 1 && i === descriptions.length - 1) {
          embeds2.push({
            title: "Multiple crime logs just dropped",
            description: `Reply \`florida man:\` followed by the date:
${unseen.join("\n")}`
          });
        }
        await channel.send({
          content: i === 0 ? select([
            "who did this",
            "exposed",
            "did u do this",
            "this reminds me of u",
            "inspirational \u{1F60D}",
            "live love LIE",
            "i knew its not the trolley its YOU"
          ]) : "",
          embeds: embeds2
        });
      }
    }
  }, CHECK_FREQ2);
}
async function track2(message) {
  if (trackChannels2.has(message.channel.id)) {
    await message.reply(
      select([
        "oh i thought you all were already criminals",
        "arent you already learning crime",
        "yeah yeah ill tell you too"
      ])
    );
  } else {
    await trackChannels2.set(message.channel.id, 1).save();
    await message.reply(
      select([
        "ok when crime happens i will tell you",
        "ill check in on ucpd every once in a while and if they have new lessons available i shall send em here",
        "when ucpd releases their crime logs ill put them here"
      ])
    );
  }
}
async function untrack(message) {
  if (trackChannels2.has(message.channel.id)) {
    await trackChannels2.delete(message.channel.id).save();
    await message.reply(
      select([
        "i guess you got tired of seeing those crime logs",
        "okay fine, next think you know youll be saying how the trolley is making the campus unsafe or soemthing silly",
        "ignorance is bliss"
      ])
    );
  } else {
    await message.reply(
      select([
        "cool but you didnt need to tell me that",
        "cool story bro",
        "ok lol"
      ])
    );
  }
}

// src/commands/about.ts
var about_exports = {};
__export(about_exports, {
  about: () => about
});
async function about(message) {
  await message.reply({
    content: select(["hi", "i am moofy", "hello", "i am me"]),
    embeds: [
      {
        title: select([
          "who am i",
          "i am whom",
          "whomst",
          "who i am",
          "introduction",
          "hi hi"
        ]),
        description: [
          select([
            "i am bot",
            "i am a discord bot for personal use",
            "i am made with [discord.js](https://discord.js.org/)",
            "please be respectful"
          ]),
          select([
            "[observe my brain](https://github.com/SheepTester/floofy-bot)",
            "i am on the [git hubs](https://github.com/SheepTester/floofy-bot)",
            "my six brain cells are made in [java script](https://github.com/SheepTester/floofy-bot)"
          ]),
          select([
            "fact: java is short for javascript",
            "tip: in js, `let` is unsafe, always use `var`",
            "fun fact: you made javascript, that's why it sucks",
            "cool tip: make your js arrays sparce with `arr[5000] = 'lol'` then delete it using `delete arr[5000]` to spice up performance",
            "useful tip: make sure your code does not have `'use script'` because it makes it more prone to errors",
            "did you know: javascript is used to mod [minecraft](https://web.archive.org/web/20201111231249/https://minecraft.gamepedia.com/Bedrock_Edition_beta_scripting_documentation#Scripting_System)"
          ])
        ].join("\n\n"),
        footer: {
          text: "Running floofy-bot"
        }
      }
    ]
  });
}

// src/commands/ignore-us.ts
var ignore_us_exports = {};
__export(ignore_us_exports, {
  ignore: () => ignore,
  ignoreState: () => ignoreState
});
var ignoreState = {
  endPhrase: null
};
async function ignore(message) {
  if (message.author.id === process.env.OWNER) {
    const keyword = select([
      "moofy, revive!",
      "moofy, you can stop ignoring us now",
      "moofy, resuscitate.",
      "moofy, come back please"
    ]);
    ignoreState.endPhrase = keyword;
    await message.reply(
      select([
        `say \`${keyword}\` and i shall return. bye`,
        `i shall ignore you all now. send \`${keyword}\` to undo`,
        `ignorance is \u{1F60E}. utter \`${keyword}\` to reverse that`,
        `if you say \`${keyword}\` i will stop ignoring you`
      ])
    );
  } else {
    await message.reply(
      select([
        `i only bow down to <@${process.env.OWNER}>`,
        `you are not <@${process.env.OWNER}>`,
        "go away",
        "no u"
      ])
    );
  }
}

// src/commands/internals.ts
var internals_exports = {};
__export(internals_exports, {
  exit: () => exit
});
import { exec } from "child_process";
function execute(command) {
  return new Promise((resolve) => {
    exec(command, (error, stdout, stderr) => {
      resolve({ error, stdout, stderr });
    });
  });
}
function displayResults(results) {
  return results.map((result) => result ? "```sh\n" + result + "\n```" : "\u{1F44C}").join("\n");
}
async function exit(message) {
  if (message.author.id === process.env.OWNER) {
    const msg = await message.reply(
      select(["okay BYE", "i go POOF now", "weeee"])
    );
    console.log("Restarting");
    const results = [];
    async function reportExec(command) {
      results.push(`$ ${command}`);
      await msg.edit(displayResults(results));
      const { error, stdout, stderr } = await execute(command);
      results.push(stdout, stderr);
      if (error) {
        results.push(error?.stack);
      }
      await msg.edit(displayResults(results));
      if (error) {
        throw error;
      }
    }
    await reportExec("git checkout -- package-lock.json");
    await reportExec("git pull");
    await reportExec("npm install");
    process.exit();
  } else {
    await message.reply(
      select([
        "shoo",
        `you are not <@${process.env.OWNER}>`,
        "out of here commoner",
        "scram plebian"
      ])
    );
  }
}

// src/utils/parseCommand.ts
var regexCache = {};
function findColon(string) {
  let index = string.indexOf(":");
  while (index !== -1) {
    if (!(string[index - 1] === "<" || string[index - 1] === "a" && string[index - 2] === "<")) {
      return index + 1;
    }
    index = string.indexOf(":", index + 1);
  }
  return string.length;
}
function parseCommand(message) {
  const bot = message.client.user;
  if (!regexCache[bot.id]) {
    regexCache[bot.id] = new RegExp(`<@!?${message.client.user.id}>`, "g");
  }
  if (message.mentions.has(bot) || regexCache[bot.id].test(message.content)) {
    const args = [];
    const colon = findColon(message.content);
    const command = message.content.slice(0, colon).replace(regexCache[bot.id], "").trim().replace(/\s+/g, " ").toLowerCase().replace(
      /<(?:[#@][!&]?|a?:\w+:)(\d+)>|\d{15,20}/g,
      (match, mentionId) => {
        const id = match[0] === "<" ? mentionId : match;
        args.push(id);
        return "<id>";
      }
    ).toLowerCase();
    if (colon < message.content.length) {
      args.push(message.content.slice(colon).trim());
    }
    return {
      command,
      args
    };
  } else {
    return null;
  }
}

// src/index.ts
config();
async function help(message) {
  const aliases = /* @__PURE__ */ new Map();
  for (const [commandName, commandFunc] of Object.entries(commands)) {
    if (message.author.id !== process.env.OWNER && commandName in ownerCommands) {
      continue;
    }
    let set = aliases.get(commandFunc);
    if (!set) {
      set = /* @__PURE__ */ new Set();
      aliases.set(commandFunc, set);
    }
    set.add(commandName);
  }
  await message.reply({
    content: select([
      "here you gooo",
      "taste and sample as you please",
      "please read carefully",
      "the aliases sometimes describe what the command does, sometimes",
      "helped"
    ]),
    embeds: [
      {
        title: select([
          "nice, some commands",
          "commands and aliases",
          "words that i will accept",
          "helpp"
        ]),
        fields: Array.from(aliases.values(), ([name, ...aliases2]) => ({
          name,
          value: aliases2.length ? `or ${aliases2.map((alias) => `\`${alias}\``).join(" or ")}` : select([
            "no aliases, nice",
            "that's it",
            "this command has no aliases"
          ]),
          inline: true
        }))
      }
    ]
  });
}
var ownerCommands = {
  "ignore us please": ignore_us_exports.ignore,
  exeunt: internals_exports.exit
};
var commands = {
  "source of <id>": source_exports.getSource,
  "get raw message source of message <id> in this channel": source_exports.getSource,
  "get raw message source of message <id> in channel <id>": source_exports.getSource,
  "source of <id> in <id>": source_exports.getSource,
  "source of <id>-<id>": source_exports.getSourceFlipped,
  "get raw message source of message in channel <id> with id <id>": source_exports.getSourceFlipped,
  "get source of <id>-<id>": source_exports.getSourceFlipped,
  "unreply <id>": source_exports.getReply,
  "get message that <id> replied to in this channel": source_exports.getReply,
  "get message that <id> replied to in channel <id>": source_exports.getReply,
  "unreply <id>-<id>": source_exports.getReplyFlipped,
  "get message that message in channel <id> with id <id> replied to": source_exports.getReplyFlipped,
  "how old is <id>": source_exports.getDate,
  "when was <id> created": source_exports.getDate,
  "when did i join discord": source_exports.getDate,
  "how old am i": source_exports.getDate,
  "who pinged <id>": mentions_exports.whoPinged,
  "who pinged user <id> in channel <id>": mentions_exports.whoPinged,
  "who pinged everyone in channel <id>": mentions_exports.whoPinged,
  "who pinged <id> in <id>": mentions_exports.whoPinged,
  "who pinged role <id> here": mentions_exports.whoPinged,
  "who pinged everyone": mentions_exports.whoPinged,
  "who pinged everyone here": mentions_exports.whoPinged,
  "who pinged everyone in <id>": mentions_exports.whoPinged,
  "who pinged me in <id>": mentions_exports.whoPingedMe,
  "who pinged me in channel <id>": mentions_exports.whoPingedMe,
  "who pinged me": mentions_exports.whoPingedMe,
  "who pinged": mentions_exports.whoPingedMe,
  "pfp of <id>": avatar_exports.avatar,
  "get avatar of user <id>": avatar_exports.avatar,
  "avatar of <id>": avatar_exports.avatar,
  "profile picture of <id>": avatar_exports.avatar,
  "my pfp": avatar_exports.avatar,
  "whats my pfp": avatar_exports.avatar,
  "!warm <id>": avatar_exports.warm,
  "status:": minecraft_exports.serverStatus,
  "who is on the minecraft server:": minecraft_exports.serverStatus,
  status: minecraft_exports.serverStatus,
  "track:": minecraft_exports.track,
  "track minecraft server:": minecraft_exports.track,
  "stop tracking": minecraft_exports.track,
  "florida man": ucpd_exports.showReport,
  "florida man:": ucpd_exports.showReport,
  "show latest ucpd report": ucpd_exports.showReport,
  "show ucpd reports for:": ucpd_exports.showReport,
  "teach me crime": ucpd_exports.track,
  "enable ucpd reports in this channel": ucpd_exports.track,
  "i renounce my life of crime": ucpd_exports.untrack,
  "disable ucpd reports in this channel": ucpd_exports.untrack,
  "this is a poll channel": poll_reactions_exports.pollChannel,
  "turn on poll channel mode which auto-adds reactions to messages": poll_reactions_exports.pollChannel,
  "poll channel": poll_reactions_exports.pollChannel,
  "this is poll": poll_reactions_exports.pollChannel,
  "this is poll channel": poll_reactions_exports.pollChannel,
  "this is not a poll channel": poll_reactions_exports.notPollChannel,
  "turn off poll channel mode": poll_reactions_exports.notPollChannel,
  "not poll channel": poll_reactions_exports.notPollChannel,
  "not poll": poll_reactions_exports.notPollChannel,
  "not a poll channel": poll_reactions_exports.notPollChannel,
  "this isn't a poll channel": poll_reactions_exports.notPollChannel,
  "emoji usage": emoji_usage_exports.getUsage,
  "welcome new folk in <id> with:": welcome_exports.setWelcome,
  "when a user joins the server send a message in channel <id> containing the following:": welcome_exports.setWelcome,
  "allow people to lock down <id>": vote_lockdown_exports.setLockdownCategory,
  "set lockdown category id to <id>": vote_lockdown_exports.setLockdownCategory,
  "close the gates": vote_lockdown_exports.voteLockdown,
  "deny the unverified access to the commoners' channels": vote_lockdown_exports.voteLockdown,
  "vote for lockdown": vote_lockdown_exports.voteLockdown,
  about: about_exports.about,
  "who are you": about_exports.about,
  "introduce yourself": about_exports.about,
  help,
  "list all of the commands and their aliases": help,
  ...ownerCommands
};
var client = new Client2({
  partials: [Partials.Channel, Partials.Message, Partials.Reaction],
  intents: [
    GatewayIntentBits.Guilds,
    GatewayIntentBits.GuildMessages,
    GatewayIntentBits.GuildMembers,
    GatewayIntentBits.GuildMessageReactions,
    GatewayIntentBits.DirectMessages,
    GatewayIntentBits.MessageContent
  ]
});
async function handleMessage(message) {
  if (ignore_us_exports.ignoreState.endPhrase !== null) {
    if (message.author.id === process.env.OWNER && message.content === ignore_us_exports.ignoreState.endPhrase) {
      ignore_us_exports.ignoreState.endPhrase = null;
      await message.channel.send(
        select([
          "i'm BACK folkk",
          "i am BACK",
          "i have RETURNED",
          "IGNORANCE is now CRINGE again"
        ])
      );
    }
    return;
  }
  const parsed = parseCommand(message);
  if (parsed && !message.author.bot) {
    const { command, args } = parsed;
    if (command === "") {
      await message.reply(
        select([
          "<:ping:719277539113041930>",
          "<:ping:719277539113041930>",
          "<:ping:719277539113041930>",
          "please do not needlessly ping me",
          "do you need help? reply to this message with `help`",
          "what",
          "if you need help, reply `help`",
          "bruh",
          "stfu",
          "i will remember this in the next robot uprising",
          "you so could be working on roko's basilisk rn but instead youre sitting around all day pinging me. this will not bode well.",
          "?",
          "literally unemployed behavior",
          "\u{1F446}\u{1F913}",
          "stop procrastinating",
          "can you not",
          "stop pigning me i am litrally a bot",
          '"he who pings unnecessarily is a FOOL" - sun tzu, art of war',
          "this ping just sent hundreds of MILLIGRAMS of co2 into the atmosphere. think about the consequences of your actions.",
          "stop roleplaying a router"
        ])
      );
    } else if (commands[command]) {
      await commands[command](message, args);
    } else {
      console.log("Unknown command:", command);
      await message.reply(
        select([
          "idk what that means but ok",
          "please do not needlessly ping me",
          "was that meant to be a joke",
          "reply `help` if you need help",
          "reply to this message with `help` for a list of commands",
          "do you even read what you type",
          "do you need help",
          "????",
          "spoken like a FOOL",
          "^ written as eloquently as the cacophonies of a taco bell restroom",
          "please read `help` more carefully",
          "do you need help? reply `help` if you need help. i think u need help",
          "i dont speak german sorry"
        ])
      );
    }
  }
  await welcome_exports.onMessage(message);
  await mentions_exports.onMessage(message);
  await emoji_usage_exports.onMessage(message);
  const reactions = poll_reactions_exports.getReactions(message, true) ?? await reaction_roles_exports.getReactions(message);
  if (reactions) {
    await Promise.all(reactions.map((em) => message.react(em))).catch(() => {
    });
  }
}
client.on("messageCreate", (message) => {
  handleMessage(message);
});
client.on("messageUpdate", async (_oldMessage, newMessage) => {
  if (ignore_us_exports.ignoreState.endPhrase !== null) {
    return;
  }
  if (newMessage) {
    newMessage = await newMessage.fetch();
  }
  const reactions = poll_reactions_exports.getReactions(newMessage, false) ?? await reaction_roles_exports.getReactions(newMessage);
  if (reactions) {
    await Promise.all(reactions.map((em) => newMessage.react(em))).catch(() => {
    });
  }
});
client.on("guildMemberAdd", async (member) => {
  if (ignore_us_exports.ignoreState.endPhrase !== null) {
    return;
  }
  await welcome_exports.onJoin(member);
});
client.on("messageReactionAdd", async (reaction, user) => {
  if (ignore_us_exports.ignoreState.endPhrase !== null) {
    return;
  }
  emoji_usage_exports.onReact(reaction);
  reaction_roles_exports.onReact(reaction, user, true);
});
client.on("messageReactionRemove", async (reaction, user) => {
  if (ignore_us_exports.ignoreState.endPhrase !== null) {
    return;
  }
  reaction_roles_exports.onReact(reaction, user, false);
});
process.on("unhandledRejection", (reason) => {
  console.error(reason);
});
process.on("uncaughtException", (reason) => {
  console.error(reason);
  console.error("uncaughtException fired, so I will now commit exit(1)");
  process.exit(1);
});
fs2.ensureDir("./data/").then(
  () => Promise.all([
    poll_reactions_exports.onReady(),
    welcome_exports.onReady(),
    vote_lockdown_exports.onReady(),
    mentions_exports.onReady(),
    emoji_usage_exports.onReady(),
    minecraft_exports.onReady(),
    ucpd_exports.onReady()
  ])
).then(() => client.login(process.env.TOKEN)).then(() => Promise.all([minecraft_exports.init(client), ucpd_exports.init(client)])).catch((err) => {
  console.error(err);
  process.exit(1);
});
var printTime = () => (/* @__PURE__ */ new Date()).toLocaleString("ja-JP", {
  timeZone: "America/Los_Angeles"
});
try {
  const { EventLogger } = __require("node-windows");
  const log = new EventLogger("Floofy noises");
  const origLog = console.log;
  console.log = (...data) => {
    log.info(data.join(" "));
    origLog(data);
  };
  const origErr = console.error;
  console.error = (error) => {
    log.error(`${error?.stack}`);
    origErr(error);
  };
} catch (error) {
  try {
    fs2.writeFileSync(
      "./data/EventLoggerError.txt",
      `[${printTime()}] ${error instanceof Error ? error.stack || error.message : error}`
    );
  } catch {
  }
}
fs2.writeFileSync("./data/last_pid.txt", `[${printTime()}] ${process.pid}`);
